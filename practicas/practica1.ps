%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: practica1.dvi
%%CreationDate: Fri Nov 29 11:56:31 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: TeX-feymr10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o practica1.ps practica1.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.11.29:1156
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!
% PostScript prologue for pst-coil.tex.
% Version 1.00, 2006/11/05
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 } def
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Created the     : Sat 20 March 2004
% Last Mod        : $Date: 2009/08/27 $
% Version         : 0.5 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 107 2009-03-12 17:25:46Z herbert $
% PostScript prologue for pstricks-add.tex.
% Version 0.21, 2008/10/15
% For distribution, see pstricks.tex.
%
%       HISTORY -> see file Changes
%
/tx@addDict 410 dict def tx@addDict begin
%%
123 srand 			   	% set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: TeX-feymr10
%!PS-AdobeFont-1.0: TeX-feymr10 001.001
%%Title: TeX-feymr10
%%CreationDate: Sat Jan 5 18:49:54 2002
%%Creator: Thomas Schröder
%%DocumentSuppliedResources: font TeX-feymr10
% converted after April 2001
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /TeX-feymr10 def
/FontBBox [-178 -195 823 877 ]readonly def
/UniqueID 4024627 def
/PaintType 0 def
/FontInfo 12 dict dup begin
/version (001.001) readonly def
/Notice (converted after April 2001) readonly def
/FullName (TeX feymr10 Regular) readonly def
/FamilyName (TeX feymr10) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3166449D69AB0542CB99558019EE
97CFE9FA87FAC14B55E860B5663A3D528CD3784FC9647A2EB72CF1AF4E31964A
3073722CB69FA5370CC5D9CDBF105662CA6188C1B3BFA7658F71EA5765A0D152
E60FD5E1DE3B99CE70C03D8CB4F775B5B17CE9573F5046E61444C0DAFD894CFE
E17604820BBE5A8FA11A10565933C0A8320DC5D116C780706E315C54E72426DD
AF1E6786D883AD182ED327CBB03C39C1A2602471C39296B7681215EC4F0E0E0B
264FBAD453DD3B112065828DC04E265255F9FB51F5EEC233C6A752ECA0246E0A
A2BA69049BBF94E6C8F510D29A7735AE4D122DCCA7B22929270D51C3F1E68174
E38AC54D6418690C765264C7897AD12A84B2C5269A6BFBABF05C20A37C94D927
81FD24D7817897529ACEDD9B062949D02FB9B0E1B2D0BF765675BA16EBFC1C7C
DC437BEE4D9FAC437C6B9E5B0C00111499A90E1BD29C52263829FFEF1946619B
1C81623A436D2FBD670D126855C400F38CE0C88122C60EA0D331AA9636B27218
0CC9B0EDE940FFB5EBCF83EDB330F8E83C7166452669E04F2E95A7718ADBDA8F
F99C2DC815F7ED17655111692621430D077DE661F297A8B6A33FECC10B3892A2
4F8E139F3E446CC7D7F5D64E4DBEFDAD72AECAE4D64289A3E2BE0212CF4A91BF
04F60B14E7522795440054CCBC40C49886656B6918198778A498EDBE40AF4536
7F96E77E40A9D65B1D5447D2596B382447AB5549A11BD5B765F9133E1C5C3071
32075009D2AC8147BC53B4C07B14D548E0F914E600CBF320E1639435733D7563
0053CC74AE3E7F5B9741E8CCB3DAFC411B5F846FC583B7771A7088B1C9B9613B
86FBCA1EE9E8263406C1894EE246BE87CDCAD2BA7ACB7030E45B0866062055D9
EBF7F562FAB6190196A7B8AA1B61F407B2BE0F537129E27376C8DDC7C6416358
384B2A676AB3228144586258F2B82A5BD9AE9E5442462DA626088BAB0C29E8A8
0EC75BF6E5E897761B5D095E2A8EDBF2CA742F3BF155B4DF28110FB8B7FB9A6E
9229F9D0B47376BE7AE5CE6A6AD32F50B62023CB32E8E0CBCDE2110AD8251854
5F8934CDC91E522248E019A6DCA06A0C2D005D541C6ADFF72812F474050C709A
5ED08B5F83DA1FD76037AFF77515188E13073B30F9A49A970613659071E0A130
5A4DD21C42ADFC1DF8CEE802CFAB2A75B7460E9F46DAA8CE31D5F287D3163B98
5966C073653074E89114B1B8A097A43E58DC5E49AC1F70F04A922FF9955F9FA7
20A6FCB10A2670BB3F44D959FC897BA487147A0FFDDFD368EB1A41F4CCCB619B
A362730B373EAC754EF5CE2692576DE100E10402670F41FD38F11A1BB43B7F42
B4BD7BB5F4322C4A9D04BBE445358F4B59B1A5C85FAE03B06C950485E5B304E8
BDA4BB926C21E17B3EC2D4DBC9353CFB90DBC6976B566C310DC801A28907CED3
2126B72E26578DF77022D969D09E111BC1C489E88E7B0315E926B0376B085BB5
3CEAF925AEF208D454C49A6B239924FA18001BD1A7D3EA4E7904830A6A948A79
F50CA56EA772D92627A8380A37F3C30845647AB612D5F6B5CB916996A0EE6697
BC62B6266F4314BAAD796EF51EB965F7C30C001F16442E0CB7A6984B78AEFC46
7D6938EFB347E3287600228311BA24326714E77F1932B80334F933C2926274FA
21BAAD0605BBC9A01BDAD6D5ABB885A4E651B8DFAB60487319C1C386CE6A17CF
CE6F1E639526FE52759F1C88A2B52EED4B93C0AEFE101EEEE8C108F389F9D1E3
205904304DCD3F06198594F313F1BFF10CE7F410ABFE3BD5F47CC3D7DB91E197
AE2EFFB9015482D6C79EE33D31EBC91E7797ADADAB7F682F72DFB7B0B0B6AE27
CDA9C0538E1246167FDF86008881E9F917291B498DFD93885C05A1AC6F3A7C11
57128C3D6CA767C80C7AD866074879C24CC063341E85B910ABD13E4BBC7A48B1
53E24D05C43CAC6F3337ED734614EA91EBA620346F23693C7FAA9F488FEEF7DB
E525E547787CCBE1B9824B1CF0B92007A8884194388AE40560BE9D79CD4DE9CB
96359F98E85F2A49F75B7B66C6444DB0ADF62964CF1A47855F8C4688F95EE5A4
50C96A072FB8069A59B20CD2FC703F2F90D3AD1BAA56A93E3D2E2F33C6E2A7AD
258451B1411DD8DBF07CA0246640732F5ABE58B44AC29D9EACBB671334A141D5
FF7CB44C5D629EF4C3E479B76B6A11B47AE63003DE140FB162E88854291E52CD
218D3E70E007E24FEDE321E5814C501169EE40269A4130721A95CB23F48C32AE
DD7B0B4F6320A76DA8A605679B0863982D6B3D4903CD8184B2B829CE9FCBF77D
6CC854455B66AA88CA78910178F748BAD7A4F32521BA7CACB879CFC719BFE2BC
13CF49FDAEE217C53CE31DAB6FDCF81ECAA2E72A2CF15BD84D275BE55251F82D
C8A19F36545C0BDA65AE10E063F5E05A8DB056F7A41D4DB694C98E4246E3B38E
230D155F7ED10F13F00679BCDF5604F46E28FD15B81B55471B8262F8A2F72AF4
E5387E41E401274B350EEFA6C4F03A1E6E4A6B16E528088EA3C7E0299E38DF46
D345559937225879790AF29198B2FDEFE6FC99C66C69959F3FF98F67C07CE90D
F2993F8732E88A77355D4A186BBC8C299C85DB3CFE829BF9F22AA8D3BD63F0D9
CAC57A7CBE25193B289D8A9A614DA9202F69ABA8FFB96F4281592634A7FC4A21
456B69BF77848502657B7B934003418D2BC937720E67D4890E00A199636842D3
DB74B2F004A6E3F3EA6972D62C62E5D4F096AEB2F194E77B656822D9CFF41D2A
7C14F16D7F07E90306AC87B528175244B92D6C10024132A3A1FC2FE78F688904
3568D0BD312C635BF2C024B53B5624F8B17BEEEB424E619CBE804E24E6EE1BE7
3F159A72AB7ACE1C0347278BC542E4525E503DAB0127B4DB6D8538634CC60BB6
7851F14F0753BA3838ABD61E83ECC39C427E62AD4293F672F8E7C2A49B534F60
E877F23EF5EE0E849AEC5F5E12463F6F05D059854D701CE420D546867EE7E6C8
7CD2553F33682A0BF985671C6433700CA8FFB638E7C7BAE78BDFEFAD10DC5846
AFF08F08956041F2912B4D70FD34495C96D3F9B091293B9C738CF5C9563277EC
3C6863C4A69B09E4DDD525D77FD06C322DAE13FCD48A4EA7B1B6C8F0256FC16A
3B47A4BF0DA1C49EF53974B4BF01C9BF194CE7EEC2C3AFA9E4CECD8C4029CC6F
377E4269806EB0FB78AA812F1513C2CEFB8F50CD18615EBAC10976BD12CBC1CE
8CCAD0333D455C3ED1518FD7F80539AE63A5045D34B982ABB471ED8EB18B50D3
1A150C82182B6C31CC9B161A87361A6D96B63CF0D97A286090DA8CB72991B175
EF3D690C64D9CB5EDDFF5B00B7C179825A1794CA054B6F7A8CAF03DFD7E62F10
CE5BB34BB02E50AA4DD4FD704F147DE3DCEBD3B1DEBAF3483E01CA3076EB19A5
FA2A8815CD360568A9A05176CF4111CB27C54BC8B4B991853982BB7307283D8B
93E5A2D6DF853B6E17BEF7C06A182456EB73D4A1B77FD58A853B07B04ACE12EE
D04046A4E977A39963B144EAB63C7D27F2EE65F677B9892C999BC81B3BBDA70B
E7FFF8E673275F9B84D39E641BA990B9AD160BB73CC391B6C36A7C1D68438243
1606D2298D58EA3879D2CAE2D285011E229372F7FA98F55556F0C4007621168A
A3C1F9A9DE81DA70AB287ABC70C4BAE94321D94FAD2DC3754CA39F689C8221E1
6E7E57EA41F552EF612080D82122D5733CC48978F6BC62E40728DCB3134F4536
C33E222D0E79486EBF9A506F92CCE773BBDF3A764B3793E96393DB8EF1FF0FA1
F3801274B7B982FC53258A752D43261486A2A94B321D90C9393EECE5B3CBFAAB
D0BBA6E49ED462B20AFB384AC2D3E290BC8FE7805D5C0B0D37F04586BDC8C812
686C653A47B40A803819C86FB0C8EF10AA1344350972910363FC0E3DB49A5D75
BDBED15C823E1E870E2F0EFB93A856F3A63E28CB7ECBF17E444B271FD92157C5
8727745CE16AA9376735A8B02F2CB426BB91CCC365CEE49AE5C9938B08DB12B1
EEE55B954D3694FA0AEC0836883D86F6EA4E10ACAFB7CE5D16F858F6DFF1246F
B2135837B67DFE58003AF012885480947A19B0F90980366EC245AE6D8D33FD30
E080775680F701952B697FC8FC07A014B78DEC48017E46AD78EF6EE80BF81760
B2ADCBB63D91D25DCFC77F2B8867BC0092BD9DF8EDD0F7DEDF2458F1F938D05D
DD4C3A7D4B3008EE86F787EACD7C687B6BB09D362E814AFBC75209C457A19F37
C9780469DCD173C5E5BB7C88F4A8FF1E664AD95E1F5D005B4F15416A320366E4
41E5CE5C8A53B64D290AC210490EF404D08C7C93531FF8CFB841AFF5A0E5A8DE
1E25EB0D03018A76C701E737D941569CE252FF92E3C0A05798F47B75B501B03C
D92B56739CF0D76A13E06283CB4F55177E3D6B28C265954DE0EC80A4CDFD91AC
A2FEE87917A4C63BCBDB24928F99D4836A62D3793411FFAA4CC7B12C934350E8
0C241E5C83E1BF8BCE56FFB67F9C7970CD00D64E7CF92F0A9CB5E672852960AE
8959AE74D4DE18D69B095F9F83C2D98F5D6D14B13E76E4686B85A3B606479B6D
F3B52D950EBCFE01639F6B0D9C205C947D60F2F0540D0E8B1B78AF3C5376F94E
D5769B92FC21082A872ADC4BE261FE71F0EA2422B17EF9C0338F63F4D4BA4AC9
D6C76169A46B500885E2CFB8671C053163F186C242F539453A72E3CD4F416A30
6C7A154B28FD021A13A11C78D113E65FAE2A6602D55510502603AD648CA7C698
E61A5B8F3689308EF934594FC5EFFDB86BED8324C690350CB92005EA3EBBB9CF
83EF65EA37BB27D684B89F18AB93968DBB6D0BD835EDDBF6F9425AE707A9E732
7418E39DC60A6EB89299E14D62AEA38D7E1ED70829196DB28D4906BF73574AB4
5DCF1FD068BE2B5B597021EC43C0396D5F172A723556BD8937D6800A6CAA33F6
A061415D49DA0ECE5C1959D9AA8513D8E616BEF8C9411F93E9FBCB6D2637AEDB
B0E719D54E5840E6F71109A5BFB26839255C305080216C0FD2477BA7613C8198
8EB16ECFFBB6D745422204786A17705DABE8FC123005E476FECEBE1C3E240E66
9EC0C64922C42D88A87D2D9766DB3E6273110B2F9281D80F004D184E9484EF54
222058917A0DFF5AEDC9213979C8716488573FC308948F839BFADCA37353F9F9
C7FC6FF049F4DD9DBD476228E880E779C7122C3823385F85F86DA752C3E01A8F
8A103A854A8545E4109BE8AD304A60B54F124EF2A6AD3E5E7EBA6AE533E22954
261017699960A1E27D714C2E2D370FB1449ED84B4169EC1057AC8AE70B3962A8
2A16D2F5EC8818734A52C2211FFFB785AC27000B218464AAD820DCAAB31DBD3C
2F0ABE99FB90E8A188E9E95E3320B650E814FA72E425FC6D0B5E245330843CC3
DB6AB767C90E8EDD41E12FA1973E681A7180A3917CACA630FB0BB7A62FAAF292
EE1F836E10730B4797B72E335F6C291A3BFD7F71EE335C3A6233735DB2A379D7
4D1CC655A657023C0B72C819D778F70D9654BDF7C3DD44B733468029F6DBC37E
1D00A80D8D9E7DB37593FE4C2AF5E00949062085BDB51E9448A41DB88FC7401F
725593E1E2281E1F880F829778EEE4197E71F8E59420EAE7964C98BDA67D7224
51A7781696EE91A0E6138EEA37EEA66A29A778841BAED8A196FA2C9DC4DE9BD6
4915CDF114F441422F0FE6F6DFC899C05D171FC0E370C9D27025B9407AFBA04C
19CBF35CBA1E6328BEB3DC8BF3F27EADDDB063543BBE32195A9AB39C791A053B
9D6B918B1E101C98DA8A4EB26FB47BCACE2863C768381DF68C4C8033BB3BBEF5
E93514207A5AA561F78B3F9C70C691B40F4ED7449650276BAF866B77FC16D797
B91398B1797FC8A8CB148D5C234F59A7E4E6F661431598B68DBA780DC8B34A19
AF4EA912CB694B86D5C7672E57EC16F21F87944F7585ACC0847A31E2777D0068
69A9C658B4729A5A2DB08E093EDFF069067F02F93C4495F9F171AB52A1A5BF64
C71D97FA60A71E3E705E51531028D02B1AD3E8E032AC8E599DE4DA19227401AC
F79915BC3230D5D90FA77C29DB133FB7B4ED7B0D7BDD3B018BAB38126626BE19
57BA72362A12E23AB2C4F2C20CE67ADBB39FCC59111A7A0A61ABB82CE1711D0C
193F0D086B49494669F901CA6013B32E0160B72239DB3C2E229535BEF14DD08C
A8E603EF0B6A5D6FD9CE8EB6DEA304E959E394802B82E7C4BC31E75E1CF077A0
6F520EC408B4237E2C5D41DB0B4395D891BCFD008BDE2F5936C9B7D3D7F7F9D9
06FD7B552B784F7814AE16D8351899FC23B6772BB69B5BFB57D118FFFF07511E
8C6E994823E198A79376EF3E24C11B6FA1F6DEA71942741038EB332490625EED
2F92A7EAA26C64B36C180E45C35457FEEF8039855872511C30AE0BD536024FEF
2E0F40D53EB1845EF5EA9E10FD5C63E01D074E58590F0C8112BC26F1969F9C24
6A4027E715AA573228315FBE916274AE6D17F25A21DD9629263D6D83E1C5E6F0
D0A42464C558BDB4FDBF9201F57C808EDE384E12A8235EC30E90CCA8AA3C36CC
C09C6A6D74F9A30B50CF7D4ADDBFC902F6A006AACD90582B29ABAC673E1C6D67
3A70B27EEDD61AD0C422B387CE691F8ED807C137C5841779A540211331282F9C
2997E5A81A6BE710AEC12B347D9238B584F24C63DD4A34D620644424F315D15C
C710ED000B0D28DDB19A4D99AC1E0E5589B7A6F7B2C86F2F7FA4CB217F201436
991656F10224C5AA8341E6658ACFBCD76E73AFAB6E5B0FC14CB8AA60A1E845E7
5AAE0C73DD9F872EE3D28075C27156BB8D803A64E4126866360A54D16EFA11DB
13E7E52C0693982399545875D6ACAEA88BA0A3474783CCEF9A4B65EE64958091
8951AC0C438C2B0413761A253A43579B0B640FDD1497DE8C21A0856E475510E5
142E3842906AA80914CDE9402E4B37D2A6E53BD127D2D3AD5149AEB5ECD8CE0F
A7609D35FB71A5E542B436D5C7D71A4CB29EE71D11E0C2769C4FE6E728D24E56
A0169D3676D3B731B35E37C70B8015A53A9C15AF4F78D0FBDCE03FDD2C3D52C7
5D852346EA02BAE2FD29487245DE75FBAB597E741336005E4A549429A51271D6
5CBCFF634640DB0D056DD5EC6D5A7DB00E37F666CA703105ECCDBC670A47CDB7
48FE6D422825339A8CA5AAB0B1235F8D8BD2F5D6A3515FEFD32540521E20DA01
A0141AA1F8B223BC02156AE4E096FED912A6C33DF4E150052091700123102EAC
E6AE38599BA0A0CB94E1099475C28A540D3EBC4EEB382E906F6B4A1CE6940F16
77D474945B0DFDB54731F85B138577CCA34AD3BF8B7677378DCCF3999EEC8E5B
5BE10FE19D636B006E7D7290A3DDAE1DCFD312C2726B08676AC7B03A9E5BF580
BBD88C779EF23B655F9BBBC31F4D54BCD94E4D1FB85ED55AC4475DE0DF309494
49CF2BC0A9C60D7DE24DA0C0AB8F50953F4DCE4B2FF8E60DFF1EA75F4BAD4B11
3C735758AE622B81CEB5A8F845B2547C6A43812D4ECF9C9E042425176A20004C
2C4A815A38E237DA4ACD903D32B7F9844B2E42AA7F5A5008C4CFBB51F2A20C24
C4EA6D69F6CC5E79CC490EBDB8A9D4AF6103A6CE3906449DCD35B922EFBDE023
3D5ADD67F4F5BCF49D61F67FB313A8E2F92D29A0B15C6792D299B9510A5DFA30
56DF9000191FA35C2999FDD7132B3EB5E95020B032C8EE2BB4543DAAEA0DEC97
3133A99719D7ADBB2678384749B7E1ED994548266CF51E5DA1E7D78283F24197
0EB74E258585FACA9CC47BAFA7AE9E116FC4A042404FDEFC6D20C8510CDE6796
BF13356BC9A3EDF5DF353F6CB8D21EDF5EB9B50AD6BE2804F23B1727C373DC13
E4B7B7F5F1A0333C4BA7842F4E9F3D067DA11B64EC3D1EA2AFD82DAF0087AD2E
0876AFC12C5777A2743F938C01847747CC7525DE041402CBAA4C45F273A75DE8
528FD3BC80427F9E3AA1EAB57E9E2F625484D388DBA06AA511B556E660B7C58C
232E6191D34214218E9C35838F7532579EF7430063A099A176DA59B024B2CE56
FAD58E3E9AB280F49EFE8B13EB67D91B6BF3BBA8BD16CB5EE0B3FB9BEF37503A
F4114D06702D250FD78E921D8ABD0BA3647C711CB3FF3CB1EAB2DD7137A9CA46
4E545382727CD0F1D75102D7BEB5737B3D3009136C2DD9950F1DEC8859F21328
330224F695949BFE58241CABC4D378ED409FBA824D76C2EB94A55575E0B44B99
5F05EC9CCDC503CEA55FA4032192CEB9D7160B024084A468FCE4AB2F876A1B22
2FCE1702E00029F29A50C636A6C59226685F2B7F885CE26FF2D2836BD9C03367
13420C1A8BCFCB324EA9D26744B77B4BD9099611FC2209A53321B737E518950C
751B2F929CFD04EC824A2439E9BE1C56A3A02420C2B86C24BB936C7752DFE88B
A682B788BF0113BC92352E873AFFFC279F2F3ED949F3ECEED537F134E3C8A2C0
13BE80DE36288A86E93DB390E241AC83B926EAE86FFDF45E037CC3794DDFF403
DC64962FAF85B9714D399C221E36A633C0BB26EE127EDE93B54A6C34C1B1F322
7503847E9CA4622FF6CEB1E9828DABB65D66D658349E0404BD3E7871E3952C91
81DA87EC0F40B008BBE4253D7E8E7EF16C916674FCC41131B68BA2A9FDB59917
8206CB366282C90FC91B59C8A0FBBB26408CD0110EA1587A07E4FB09130E5B0B
852C429A88461C2C51F924B919B8C4F98BA8BF058EACE6ED42C208AAC866A1CC
DB9FBF4227F1CCD9FFAF49713AE4B85EC34FFD123CC49EA507D36DD69F0072CF
B01CCFDD0BDEB72A427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B7
41ADBA8C621DE2AEB91E65A0D3E1BDEBD508A0CB08F4C4E57D8481592C817520
4B6BCB5196CBA074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (practica1.dvi)
@start
%DVIPSBitmapFont: Fa ecti1000 10 8
/Fa 8 116 df<0E003F807F80FF80FF80FF80FF007E003C000909778819>46
D<003F00001FFF00001FFF00001FFF0000007F0000007E0000007E0000007E000000FE00
0000FC000000FC000000FC000001FC000001F8000001F8000001F8000003F8000003F000
0003F0000003F0000007F0000007E0F80007E7FE0007EF0F800FFC07C00FF807C00FF003
E00FE003E01FC003F01FC003F01F8003F01F8003F03F8003F03F0003F03F0003F03F0007
F07F0007F07E0007F07E0007F07E000FF0FE000FF0FC000FE0FC000FE0FC001FE0FC001F
C0F8001FC0F8003F80F8003F80F8003F00F8007F00F8007E00F800FC007801F8007C01F0
003C03E0003E07C0001E1F80000FFE000001F000001C3B77B926>98
D<00000001F8000000FFF8000000FFF8000000FFF800000003F800000003F000000003F0
00000007F000000007F000000007E000000007E00000000FE00000000FE00000000FC000
00000FC00000001FC00000001FC00000001F800000001F800000003F800000003F800000
F83F000007FE3F00001F877F00003E03FF00007C03FE0000F801FE0001F801FE0003F000
FE0007E000FC000FE000FC000FC001FC001FC001FC001FC001F8003F8001F8003F8003F8
007F8003F8007F0003F0007F0003F0007F0007F000FF0007F000FE0007E000FE0007E000
FE000FE000FE000FE000FC000FC1C0FC000FC1C0FC001FC1C0FC001FC3C0FC001F8380FC
003F8380FC003F87807C007F87007C00FF07003E01FF0F003E038F8E001F0F079E0007FE
03FC0001F000F000253B77B92A>100 D<00007F000003FFC0000FC1E0003F00F0007E00
7800FC007801F8007803F0007807E000780FE000780FC000F81FC000F03F8001F03F8007
E03F801F807F81FF007FFFF8007FFF80007F000000FF000000FE000000FE000000FE0000
00FE000000FE000000FC000000FC000000FC0000307C0000387C0000787E0000F03E0001
E03E0003C01F000F800F003E000781F80003FFE00000FF00001D2677A426>I<000FC007
FFC007FFC007FFC0001FC0001F80001F80003F80003F80003F00003F00007F00007F0000
7E00007E0000FE0000FE0000FC0000FC0001FC0001FC0001F80001F80003F80003F80003
F00003F00007F00007F00007E00007E0000FE0000FE0000FC0000FC0001FC0001FC0001F
80001F80003F80003F80003F00003F00007F00007F00007E0E007E0E00FE0E00FE1E00FC
1C00FC1C00FC3C00FC3800F83800F878007870007CE0001FE0000F8000123B79B915>
108 D<01E000FE000007F803FF80000E3C0F07C0001E3E3C03E0001C1F7803F000383FF0
01F000383FE001F000783FC001F000703FC001F800703F8001F800703F0003F000F07F00
03F000E07E0003F000E07E0003F000007E0007F00000FE0007E00000FC0007E00000FC00
07E00000FC000FE00001FC000FC00001F8000FC00001F8001FC00001F8001F800003F800
1F800003F0003F838003F0003F038003F0003F078007F0007F070007E0007E070007E000
7E070007E0007E0E000FE0007C0E000FC0007C1E000FC0007C1C000FC0007C38001FC000
3C78001F80001FE000070000078000292679A42F>110 D<00007F000003FFC0000FC1F0
001F00F8007E007C00FC007C01F8007E03F0003E07F0003F07E0003F0FE0003F1FC0003F
1FC0003F3F80003F3F80007F7F80007F7F00007F7F00007F7F0000FFFF0000FFFE0000FE
FE0000FEFE0001FEFE0001FCFC0001FCFC0003F8FC0003F8FC0007F0FC0007E0FC000FE0
7C000FC07E001F803E003F003E007E001F00F8000F83F00003FFC00000FE0000202677A4
2A>I<0000FE000007FF80000F83C0003E00E0007C00F00078007000F800F001F803F001
F003F001F003F001F003E003F001C003F8000003FC000003FFC00001FFF80001FFFE0000
FFFF00007FFF80003FFF80000FFFC00000FFC000003FC000001FC000000FC03E000FC07E
000FC0FE000F80FE000F80FE000F80FC001F00E0001F00F0003E0070007C003800F8001E
03E0000FFFC00001FE00001C267AA422>115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb ecbx1200 12 19
/Fb 19 244 df<000003C000000007C00000001FC00000007FC0000003FFC000003FFFC0
00FFFFFFC000FFFFFFC000FFFFFFC000FFFFFFC000FFC3FFC0000003FFC0000003FFC000
0003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC00000
03FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003
FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FF
C0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0
000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC000
0003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC00000
03FFC0000003FFC0000003FFC0000003FFC000FFFFFFFFFCFFFFFFFFFCFFFFFFFFFCFFFF
FFFFFCFFFFFFFFFC264177C038>49 D<0000FFE00000000FFFFE0000003FFFFF800000FF
FFFFE00003FFFFFFF80007FC03FFFE000FE0007FFF001F80003FFF803F00000FFFC07F00
0007FFC07FC00007FFE07FF00003FFE0FFF00001FFF0FFF80001FFF0FFF80001FFF8FFF8
0000FFF8FFF80000FFF8FFF80000FFF8FFF80000FFF87FF00000FFF83FE00000FFF81FC0
0000FFF800000000FFF800000000FFF000000001FFF000000001FFF000000001FFE00000
0003FFE000000003FFC000000007FF800000000FFF000000000FFF000000001FFC000000
003FF8000000003FF0000000007FE000000000FFC000000001FF0000000003FE00000000
07FC000000000FF0000000001FE0000000003F80000000007F0000780000FE0000780001
FC0000780003F80000F80007E00000F0000FC00000F0001F800000F0003F000000F0007C
000001F000F8000003F001FFFFFFFFF003FFFFFFFFE007FFFFFFFFE00FFFFFFFFFE01FFF
FFFFFFE03FFFFFFFFFE07FFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFC0FFFFFFFFFFC0FFFF
FFFFFFC0FFFFFFFFFFC02D417BC038>I<FFFFFFFFFFFF00000000FFFFFFFFFFFFF00000
00FFFFFFFFFFFFFE000000FFFFFFFFFFFFFF800000FFFFFFFFFFFFFFE00000003FFE0000
1FFFF80000003FFE000001FFFC0000003FFE0000003FFF0000003FFE0000000FFF800000
3FFE00000007FFC000003FFE00000003FFE000003FFE00000001FFF000003FFE00000000
FFF000003FFE000000007FF800003FFE000000003FFC00003FFE000000003FFC00003FFE
000000001FFE00003FFE000000001FFE00003FFE000000000FFF00003FFE000000000FFF
00003FFE000000000FFF80003FFE000000000FFF80003FFE0000000007FF80003FFE0000
000007FFC0003FFE0000000007FFC0003FFE0000000007FFC0003FFE0000000007FFC000
3FFE0000000007FFC0003FFE0000000007FFE0003FFE0000000007FFE0003FFE00000000
07FFE0003FFE0000000007FFE0003FFE0000000007FFE0003FFE0000000007FFE0003FFE
0000000007FFE0003FFE0000000007FFE0003FFE0000000007FFE0003FFE0000000007FF
E0003FFE0000000007FFE0003FFE0000000007FFE0003FFE0000000007FFE0003FFE0000
000007FFC0003FFE0000000007FFC0003FFE0000000007FFC0003FFE0000000007FFC000
3FFE0000000007FFC0003FFE0000000007FF80003FFE000000000FFF80003FFE00000000
0FFF80003FFE000000000FFF00003FFE000000001FFF00003FFE000000001FFE00003FFE
000000003FFE00003FFE000000003FFC00003FFE000000007FF800003FFE00000000FFF8
00003FFE00000000FFF000003FFE00000001FFE000003FFE00000007FFC000003FFE0000
000FFF8000003FFE0000003FFF0000003FFE000001FFFE0000003FFE00000FFFF80000FF
FFFFFFFFFFFFF00000FFFFFFFFFFFFFFC00000FFFFFFFFFFFFFE000000FFFFFFFFFFFFF0
000000FFFFFFFFFFFF000000004B447CC356>68 D<0001FFE0000000001FFFFE00000000
7FFFFF80000001FFFFFFE0000003FE007FF8000007FC001FFC000007FE000FFE00000FFF
0007FF00000FFF0007FF00000FFF0003FF80000FFF0003FF80000FFF0003FF80000FFF00
01FFC00007FE0001FFC00003FC0001FFC00000F00001FFC00000000001FFC00000000001
FFC00000000001FFC00000000001FFC000000003FFFFC0000000FFFFFFC0000007FFFFFF
C000003FFFF1FFC00000FFFC01FFC00003FFE001FFC00007FF8001FFC0001FFE0001FFC0
003FFC0001FFC0003FF80001FFC0007FF80001FFC0007FF00001FFC000FFF00001FFC000
FFE00001FFC000FFE00001FFC000FFE00001FFC000FFE00003FFC000FFE00003FFC000FF
F00007FFC0007FF8000FFFC0007FF8001FFFF0003FFE003EFFFFC01FFF80FC7FFFC007FF
FFF87FFFC003FFFFE01FFFC0007FFF8007FFC0000FFC00000000322F7DAD36>97
D<00003FFC00000001FFFFC000000FFFFFF000003FFFFFFC00007FF003FE0000FFC001FF
0003FF8003FF0007FF0007FF8007FE0007FF800FFE0007FF801FFC0007FF801FFC0007FF
803FF80007FF803FF80003FF007FF80001FE007FF8000078007FF0000000007FF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
007FF8000000007FF8000000007FF8000000003FF8000000003FFC000003C03FFC000003
C01FFE000007C00FFE000007800FFF00000F8007FF80001F0003FFC0003E0001FFF0007C
00007FFC03F800003FFFFFF000000FFFFFC0000003FFFF000000003FF800002A2F7CAD32
>99 D<0000000003FE0000000007FFFE0000000007FFFE0000000007FFFE0000000007FF
FE0000000007FFFE00000000001FFE00000000000FFE00000000000FFE00000000000FFE
00000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE00
000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE0000
0000000FFE00000000000FFE00000000000FFE00000000000FFE0000003FE00FFE000003
FFFC0FFE00000FFFFF8FFE00003FFFFFCFFE0000FFF807FFFE0001FFC001FFFE0003FF80
007FFE0007FF00003FFE000FFE00001FFE000FFC00000FFE001FFC00000FFE003FF80000
0FFE003FF800000FFE003FF800000FFE007FF800000FFE007FF000000FFE007FF000000F
FE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE
00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00
FFF000000FFE00FFF000000FFE007FF000000FFE007FF000000FFE007FF000000FFE007F
F800000FFE003FF800000FFE003FF800000FFE001FFC00001FFE001FFC00001FFE000FFE
00003FFE0007FE00007FFE0003FF0000FFFF0001FFC003FFFFFC00FFF01FEFFFFC007FFF
FF8FFFFC001FFFFE0FFFFC0007FFF80FFFFC00007FC00FF80036467CC43E>I<00003FF8
00000003FFFF8000000FFFFFE000003FFFFFF000007FF83FF80000FFC007FC0001FF8003
FE0003FF0001FF0007FE0000FF800FFC0000FF801FFC00007FC01FF800007FC03FF80000
3FE03FF800003FE07FF800003FE07FF000003FE07FF000003FF07FF000001FF0FFF00000
1FF0FFF000001FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFF00000
0000FFF000000000FFF000000000FFF000000000FFF0000000007FF0000000007FF00000
00007FF8000000007FF8000000003FF8000000003FF8000000F01FFC000000F01FFC0000
01F00FFE000001E007FF000003E003FF800007C001FFC0000F8000FFF0003F00007FFE01
FE00001FFFFFFC000007FFFFF0000001FFFFC00000001FFE00002C2F7DAD33>I<007C00
01FF0003FF8007FFC007FFC00FFFE00FFFE00FFFE00FFFE00FFFE007FFC007FFC003FF80
01FF00007C00000000000000000000000000000000000000000000000000000000000000
007FC07FFFC07FFFC07FFFC07FFFC07FFFC003FFC001FFC001FFC001FFC001FFC001FFC0
01FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC0
01FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC0
01FFC001FFC001FFC001FFC0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF18467CC520>105
D<007FC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC00003FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC000FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF8019457CC420>108
D<007F8007FE00000FFC0000FFFF803FFFC0007FFF8000FFFF80FFFFF001FFFFE000FFFF
81FFFFF803FFFFF000FFFF87F01FFC0FE03FF800FFFF8FC00FFE1F801FFC0003FF9F000F
FF3E001FFE0001FF9E0007FF3C000FFE0001FFBC0007FF78000FFE0001FFF80003FFF000
07FF0001FFF80003FFF00007FF0001FFF00003FFE00007FF0001FFE00003FFC00007FF00
01FFE00003FFC00007FF0001FFE00003FFC00007FF0001FFC00003FF800007FF0001FFC0
0003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF
800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007
FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001
FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC000
03FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF80
0007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF
0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FF
C00003FF800007FF00FFFFFF81FFFFFF03FFFFFEFFFFFF81FFFFFF03FFFFFEFFFFFF81FF
FFFF03FFFFFEFFFFFF81FFFFFF03FFFFFEFFFFFF81FFFFFF03FFFFFE572D7CAC5E>I<00
7F8007FE0000FFFF803FFF8000FFFF80FFFFE000FFFF81FFFFF800FFFF87F03FFC00FFFF
8F801FFC0003FF9F000FFE0001FF9E000FFE0001FFBC000FFE0001FFF80007FF0001FFF0
0007FF0001FFF00007FF0001FFE00007FF0001FFE00007FF0001FFE00007FF0001FFC000
07FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007
FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF
0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00
01FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00FFFFFF83FFFFFEFFFF
FF83FFFFFEFFFFFF83FFFFFEFFFFFF83FFFFFEFFFFFF83FFFFFE372D7CAC3E>I<00001F
FC0000000001FFFFC000000007FFFFF00000001FFFFFFC0000007FF80FFF000000FFC001
FF800001FF8000FFC00003FE00003FE00007FE00003FF0000FFC00001FF8000FF800000F
F8001FF800000FFC001FF800000FFC003FF800000FFE003FF0000007FE007FF0000007FF
007FF0000007FF007FF0000007FF007FF0000007FF00FFF0000007FF80FFF0000007FF80
FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FF
F0000007FF80FFF0000007FF80FFF0000007FF807FF0000007FF007FF0000007FF007FF0
000007FF007FF0000007FF003FF800000FFE003FF800000FFE001FF800000FFC001FFC00
001FFC000FFC00001FF80007FE00003FF00007FE00003FF00003FF8000FFE00001FFC001
FFC000007FF80FFF0000003FFFFFFE0000000FFFFFF800000001FFFFC0000000001FFC00
0000312F7DAD38>I<007F807F00FFFF81FFE0FFFF83FFF0FFFF8FFFF8FFFF8F8FFCFFFF
9F1FFE03FFBE1FFE01FFBC1FFE01FFF81FFE01FFF81FFE01FFF01FFE01FFF00FFC01FFE0
07F801FFE001E001FFE0000001FFE0000001FFE0000001FFC0000001FFC0000001FFC000
0001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC00000
01FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001
FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC00000FFFFFFE000FFFF
FFE000FFFFFFE000FFFFFFE000FFFFFFE000272D7DAC2E>114 D<001FFC038000FFFF87
8003FFFFFF800FFFFFFF801FF003FF803FC000FF803F80003F807F00001F807E00001F80
FE00000F80FE00000F80FE00000780FF00000780FF00000780FF80000780FFE0000000FF
FE0000007FFFF000007FFFFF00003FFFFFC0003FFFFFF0001FFFFFFC000FFFFFFE0003FF
FFFF0001FFFFFF80007FFFFF80000FFFFFC000003FFFC0000003FFE0000000FFE0F00000
3FE0F000003FE0F800001FE0F800000FE0F800000FE0FC00000FE0FC00000FE0FE00000F
C0FF00001FC0FF00001FC0FF80003F80FFE0007F00FFF803FE00FFFFFFFC00FCFFFFF800
F03FFFE000E007FE0000232F7CAD2C>I<0001E000000001E000000001E000000001E000
000001E000000003E000000003E000000003E000000003E000000007E000000007E00000
000FE00000000FE00000001FE00000001FE00000003FE00000007FE0000000FFE0000003
FFE000000FFFFFFF80FFFFFFFF80FFFFFFFF80FFFFFFFF80FFFFFFFF8000FFE0000000FF
E0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0
000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE000
0000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE001E000FFE001E0
00FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000
FFE003E000FFF003C0007FF003C0007FF007C0003FF80F80001FFC1F00000FFFFF000007
FFFC000001FFF80000003FE00023407EBE2C>I<007FC00001FF00FFFFC003FFFF00FFFF
C003FFFF00FFFFC003FFFF00FFFFC003FFFF00FFFFC003FFFF0003FFC0000FFF0001FFC0
0007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC000
07FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007
FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF
0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00
01FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC0000FFF0001FFC0000FFF0001FFC0001FFF0001FFC0001FFF0001FFC0003FFF0000FF
C0003FFF0000FFE0007FFF80007FE001F7FFFE007FF807E7FFFE003FFFFFC7FFFE000FFF
FF07FFFE0003FFFE07FFFE00007FF007FC00372E7CAC3E>I<FFFFFF0003FFFCFFFFFF00
03FFFCFFFFFF0003FFFCFFFFFF0003FFFCFFFFFF0003FFFC01FFE000003E0000FFE00000
3C0000FFF000003C00007FF000007800007FF800007800007FF80000F800003FF80000F0
00003FFC0001F000001FFC0001E000001FFE0003E000000FFE0003C000000FFF0007C000
0007FF000780000007FF800F80000003FF800F00000003FFC00F00000003FFC01F000000
01FFE01E00000001FFE03E00000000FFE03C00000000FFF07C000000007FF07800000000
7FF8F8000000003FF8F0000000003FFDF0000000001FFDE0000000001FFFE0000000000F
FFC0000000000FFFC0000000000FFFC00000000007FF800000000007FF800000000003FF
000000000003FF000000000001FE000000000001FE000000000000FC000000000000FC00
000000000078000000362C7EAB3B>I<00007C000000FE000001FF000003FF800007FF80
000FFF80001FFFC0003FFF80007FFF8000FFFF0000FFFE0001FFF80003FFC00007FE0000
03F8000003C000000100000000000000000000000000000000000000007FC0007FFFC000
7FFFC0007FFFC0007FFFC0007FFFC00003FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF001A427CC120>237
D<0000001F0000000000003F8000000000007FC00000000000FFC00000000001FFE00000
000003FFE00000000007FFE0000000000FFFE0000000001FFFE0000000003FFFC0000000
007FFF8000000000FFFC0000000001FFF00000000003FF800000000001FC000000000001
E0000000000000800000000000000000000000000000000000000000000000000000001F
FC0000000001FFFFC000000007FFFFF00000001FFFFFFC0000007FF80FFF000000FFC001
FF800001FF8000FFC00003FE00003FE00007FE00003FF0000FFC00001FF8000FF800000F
F8001FF800000FFC001FF800000FFC003FF800000FFE003FF0000007FE007FF0000007FF
007FF0000007FF007FF0000007FF007FF0000007FF00FFF0000007FF80FFF0000007FF80
FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FF
F0000007FF80FFF0000007FF80FFF0000007FF807FF0000007FF007FF0000007FF007FF0
000007FF007FF0000007FF003FF800000FFE003FF800000FFE001FF800000FFC001FFC00
001FFC000FFC00001FF80007FE00003FF00007FE00003FF00003FF8000FFE00001FFC001
FFC000007FF80FFF0000003FFFFFFE0000000FFFFFF800000001FFFFC0000000001FFC00
000031437DC138>243 D E
%EndDVIPSBitmapFont
/Fc 154[66 101[{}1 90.9091 /TeX-feymr10 rf
%DVIPSBitmapFont: Fd ecbx1095 10.95 19
/Fd 19 238 df<07801FE03FF07FF8FFFCFFFCFFFCFFFCFFFCFFFC7FF83FF01FE0078000
000000000000000000000000000000000000000000000007801FE03FF07FF8FFFCFFFCFF
FCFFFCFFFCFFFC7FF83FF01FE007800E2879A71D>58 D<FFFFFFFFFFFFFE00FFFFFFFFFF
FFFE00FFFFFFFFFFFFFE00FFFFFFFFFFFFFE00003FFE00003FFF00003FFE000007FF0000
3FFE000001FF00003FFE000000FF00003FFE0000007F00003FFE0000003F00003FFE0000
001F00003FFE0000001F80003FFE0000000F80003FFE0000000F80003FFE000000078000
3FFE0000000780003FFE0000000780003FFE0007800780003FFE00078007C0003FFE0007
8003C0003FFE00078003C0003FFE00078003C0003FFE0007800000003FFE000F80000000
3FFE000F800000003FFE001F800000003FFE003F800000003FFE00FF800000003FFFFFFF
800000003FFFFFFF800000003FFFFFFF800000003FFFFFFF800000003FFE00FF80000000
3FFE003F800000003FFE001F800000003FFE000F800000003FFE000F800000003FFE0007
800078003FFE0007800078003FFE0007800078003FFE00078000F0003FFE00078000F000
3FFE00078000F0003FFE00000000F0003FFE00000000F0003FFE00000001F0003FFE0000
0001E0003FFE00000001E0003FFE00000003E0003FFE00000003E0003FFE00000007E000
3FFE00000007E0003FFE0000000FE0003FFE0000001FC0003FFE0000003FC0003FFE0000
00FFC0003FFE000003FFC0003FFE00003FFFC0FFFFFFFFFFFFFFC0FFFFFFFFFFFFFF80FF
FFFFFFFFFFFF80FFFFFFFFFFFFFF803D3E7DBD44>69 D<FFFFFFFFFFFFF8FFFFFFFFFFFF
F8FFFFFFFFFFFFF8FFFFFFFFFFFFF8007FFC0000FFFC007FFC00001FFC007FFC000007FC
007FFC000001FC007FFC000000FC007FFC000000FC007FFC0000007C007FFC0000007E00
7FFC0000003E007FFC0000003E007FFC0000001E007FFC0000001E007FFC0000001E007F
FC0000001E007FFC001E001F007FFC001E000F007FFC001E000F007FFC001E000F007FFC
001E0000007FFC001E0000007FFC003E0000007FFC003E0000007FFC007E0000007FFC00
FE0000007FFC03FE0000007FFFFFFE0000007FFFFFFE0000007FFFFFFE0000007FFFFFFE
0000007FFC03FE0000007FFC00FE0000007FFC007E0000007FFC003E0000007FFC003E00
00007FFC001E0000007FFC001E0000007FFC001E0000007FFC001E0000007FFC001E0000
007FFC001E0000007FFC00000000007FFC00000000007FFC00000000007FFC0000000000
7FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007F
FC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000FFFFFF
FFC00000FFFFFFFFC00000FFFFFFFFC00000FFFFFFFFC00000383E7CBD41>I<0007FF80
0000003FFFF0000001FFFFFC000003FC03FF000007E000FFC0000FF8007FE0001FF8003F
F0001FFC003FF0001FFC001FF8001FFC001FF8001FFC000FFC001FFC000FFC000FF8000F
FC0007F0000FFC0001C0000FFC000000000FFC000000000FFC000000000FFC00000003FF
FC000001FFFFFC00000FFFFFFC00007FFF8FFC0001FFF00FFC0007FF800FFC000FFF000F
FC001FFC000FFC003FF8000FFC007FF8000FFC007FF0000FFC00FFF0000FFC00FFE0000F
FC00FFE0000FFC00FFE0000FFC00FFE0001FFC00FFE0001FFC00FFF0003FFC007FF0003F
FC007FF8007FFF003FFC01F7FFFC1FFE07E3FFFC07FFFF81FFFC01FFFE007FFC001FF800
00002E2B7DA932>97 D<00007FF0000003FFFF00001FFFFFC0007FE01FE000FF8003F001
FF000FF803FE000FFC07FE001FFC0FFC001FFC1FFC001FFC1FF8001FFC3FF8001FFC3FF8
000FF87FF80007F07FF00001C07FF0000000FFF0000000FFF0000000FFF0000000FFF000
0000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF00000
007FF00000007FF00000007FF80000007FF80000003FF800001E3FFC00001E1FFC00003E
0FFC00003C0FFE00007C07FF0000F803FF8001F000FFC003E0007FF00FC0001FFFFF0000
07FFFC0000007FE000272B7DA92E>99 D<0000000007F80000000007FFF80000000007FF
F80000000007FFF80000000007FFF800000000003FF800000000001FF800000000001FF8
00000000001FF800000000001FF800000000001FF800000000001FF800000000001FF800
000000001FF800000000001FF800000000001FF800000000001FF800000000001FF80000
0000001FF800000000001FF800000000001FF800000000001FF80000007FE01FF8000003
FFFC1FF800001FFFFF1FF800007FF00FDFF80000FFC003FFF80003FF0000FFF80007FE00
007FF8000FFE00003FF8000FFC00001FF8001FFC00001FF8003FF800001FF8003FF80000
1FF8007FF800001FF8007FF000001FF8007FF000001FF8007FF000001FF800FFF000001F
F800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF8
00FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF8007FF000001FF800
7FF000001FF8007FF000001FF8007FF800001FF8003FF800001FF8003FF800001FF8001F
F800001FF8001FFC00003FF8000FFC00007FF80007FE0000FFF80003FF0001FFFC0001FF
8007FFFFE0007FE01F9FFFE0001FFFFE1FFFE00007FFF81FFFE000007FC01FE00033407D
BE3A>I<0000FFE0000007FFFC00003FFFFF00007FE0FF8001FF803FC003FF001FE007FE
000FF00FFC000FF80FFC0007FC1FF80007FC3FF80003FE3FF80003FE3FF80003FE7FF000
03FE7FF00003FF7FF00003FFFFF00001FFFFF00001FFFFF00001FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFF0000000FFF0000000FFF0000000FFF0000000FFF00000007FF0000000
7FF00000007FF00000003FF80000003FF800000F1FF800000F1FFC00001F0FFC00001E07
FE00003E03FE00007C01FF0000F800FFC003F0007FF01FE0001FFFFFC00007FFFE000000
7FF000282B7DA92F>I<0003FF8003F0003FFFF81FFC00FFFFFE7FFE03FF01FFFCFE07FC
007FE1FE0FFC007FE0FE1FF8003FF0FE3FF8003FF87C3FF0001FF8003FF0001FF8007FF0
001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF0
001FFC003FF0001FF8003FF0001FF8003FF8003FF8001FF8003FF0000FFC007FE00007FC
007FC00007FF01FF800007FFFFFE00000F3FFFF800000F03FF8000001E00000000001E00
000000001F00000000001F00000000001F00000000001F80000000001FC0000000001FFF
FFFF00000FFFFFFFF0000FFFFFFFFC0007FFFFFFFF0007FFFFFFFF8003FFFFFFFFC003FF
FFFFFFE00FFFFFFFFFE01FC00001FFF03F8000001FF07F0000000FF87F00000007F8FE00
000007F8FE00000003F8FE00000003F8FE00000003F8FE00000003F8FF00000007F87F00
000007F07F8000000FF03FC000001FE01FE000003FC00FF80000FF8003FF800FFE0000FF
FFFFF800001FFFFFC0000001FFFC00002F3D7DA834>103 D<00FF0000000000FFFF0000
000000FFFF0000000000FFFF0000000000FFFF000000000007FF000000000003FF000000
000003FF000000000003FF000000000003FF000000000003FF000000000003FF00000000
0003FF000000000003FF000000000003FF000000000003FF000000000003FF0000000000
03FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003
FF003FF0000003FF00FFFE000003FF03FFFF800003FF0FC0FFC00003FF1E007FE00003FF
3C003FF00003FF78003FF00003FFF0003FF00003FFE0001FF80003FFC0001FF80003FFC0
001FF80003FF80001FF80003FF80001FF80003FF80001FF80003FF00001FF80003FF0000
1FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001F
F80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF800FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0333F
7CBE3A>I<01F80003FC0007FE000FFF001FFF801FFF801FFF801FFF801FFF801FFF800F
FF0007FE0003FC0001F80000000000000000000000000000000000000000000000000000
000000FF00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF00FFFFF8FFFFF8FFFFF8FFFFF815407CBF1D>I<00001F8000003FC000007FE0
0000FFF00001FFF80001FFF80001FFF80001FFF80001FFF80001FFF80000FFF000007FE0
00003FC000001F8000000000000000000000000000000000000000000000000000000000
0000000000000000000007F8000FFFF8000FFFF8000FFFF8000FFFF800003FF800001FF8
00001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF8
00001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF8
00001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF8
00001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF8
00001FF800001FF800001FF81F001FF83F801FF87FC01FF8FFE01FF0FFE03FF0FFE03FF0
FFE03FE0FFE07FC07FC07F807F80FF003F81FE001FFFFC0007FFF00000FF80001D5385BF
20>I<00FF00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
FFFFFCFFFFFCFFFFFCFFFFFC163F7CBE1D>108 D<01FE003FF00001FF8000FFFE00FFFE
0007FFF000FFFE03FFFF801FFFFC00FFFE0FC0FFC07E07FE00FFFE1E007FE0F003FF0007
FE3C003FF1E001FF8003FE78003FF3C001FF8003FEF0003FF78001FF8003FFE0001FFF00
00FFC003FFC0001FFE0000FFC003FFC0001FFE0000FFC003FF80001FFC0000FFC003FF80
001FFC0000FFC003FF80001FFC0000FFC003FF00001FF80000FFC003FF00001FF80000FF
C003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001F
F80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003
FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF800
00FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00
001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FF
C003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC0FFFFFC07FF
FFE03FFFFFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFF50
297CA857>I<01FE003FF00000FFFE00FFFE0000FFFE03FFFF8000FFFE0FC0FFC000FFFE
1E007FE00007FE3C003FF00003FE78003FF00003FEF0003FF00003FFE0001FF80003FFC0
001FF80003FFC0001FF80003FF80001FF80003FF80001FF80003FF80001FF80003FF0000
1FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001F
F80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF800FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFF
FC07FFFFE033297CA83A>I<00007FF000000003FFFE0000001FFFFFC000007FE03FF000
00FF800FF80001FF0007FC0003FE0003FE0007FC0001FF000FF80000FF801FF80000FFC0
1FF80000FFC03FF80000FFE03FF000007FE07FF000007FF07FF000007FF07FF000007FF0
7FF000007FF0FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8
FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF87FF000007FF0
7FF000007FF07FF000007FF07FF000007FF03FF80000FFE03FF80000FFE01FF80000FFC0
0FF80000FF800FFC0001FF8007FE0003FF0003FF0007FE0001FF800FFC00007FE03FF000
001FFFFFC0000007FFFF000000007FF000002D2B7DA934>I<00FF007FE00000FFFF07FF
FC0000FFFF1FFFFF0000FFFF7F01FFC000FFFFF8007FF00007FFF0003FF80003FFE0001F
FC0003FF80000FFE0003FF80000FFF0003FF000007FF0003FF000007FF8003FF000003FF
8003FF000003FFC003FF000003FFC003FF000003FFC003FF000001FFC003FF000001FFE0
03FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003
FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFC003FF
000003FFC003FF000003FFC003FF000003FFC003FF000007FF8003FF000007FF8003FF00
0007FF0003FF80000FFE0003FFC0001FFE0003FFE0001FFC0003FFF0003FF80003FFF800
FFE00003FF7F03FFC00003FF1FFFFF000003FF07FFF8000003FF00FFC0000003FF000000
000003FF000000000003FF000000000003FF000000000003FF000000000003FF00000000
0003FF000000000003FF000000000003FF000000000003FF000000000003FF0000000000
03FF000000000003FF0000000000FFFFFC00000000FFFFFC00000000FFFFFC00000000FF
FFFC00000000333B7DA83A>I<01FE01FC00FFFE07FF80FFFE0FFFE0FFFE3F1FF0FFFE3C
1FF007FE783FF803FEF03FF803FEE03FF803FFE03FF803FFC03FF803FFC01FF003FF800F
E003FF80038003FF80000003FF80000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FFFFFF0000FFFFFF
000025297DA82B>114 D<0007800000078000000780000007800000078000000F800000
0F8000000F8000000F8000001F8000001F8000001F8000003F8000007F8000007F800000
FF800001FF800007FF80001FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC01FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001
FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E00
FF803C00FFC03C00FFC03C007FE078003FF0F0001FFFE00007FFC00000FF001F3B7EB928
>116 D<0000600001F80003FC0007FC000FFE001FFE003FFE007FFE00FFFC01FFFC03FF
F007FF800FFE0007F00007800002000000000000000000000000FF00FFFF00FFFF00FFFF
00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFFF8FFFF
F8FFFFF8173C7CBB1D>237 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe ecti1095 10.95 12
/Fe 12 244 df<00007E00000001FF80000007C1C380001F80EFC0003F00FFC0007E007F
C000FC007F8001F8003F8003F0003F8003F0003F8007E0003F000FE0003F000FC0003F00
1FC0007F001FC0007E003F80007E003F80007E003F8000FE007F8000FC007F0000FC007F
0000FC007F0001FC00FF0001F800FE0001F800FE0001F800FE0003F800FE0003F038FC00
03F038FC0003F038FC0007F038FC0007E078FC000FE0707C000FE0707C001FE0F07E003F
E0E03E007FE0E03E00F3E1E01F01E3E1C00F8781E38003FF00FF0000FC003E00252977A7
2E>97 D<00001FC00000FFF00003F07C000FC01E001F000E003E000F007C001F00FC007F
01F8007F03F0007F07F0007E07E0007E0FE000381FC000001FC000003F8000003F800000
3F8000007F8000007F0000007F0000007F000000FF000000FE000000FE000000FE000000
FE000000FE000000FC000000FC000006FC00000E7E00001E7E00003C7E0000783E0000F0
3F0001E01F0007C00F800F0007C07E0001FFF000007F8000202977A729>99
D<000000003F800000001FFF800000001FFF000000001FFF00000000007F00000000007F
00000000007E00000000007E0000000000FE0000000000FE0000000000FC0000000000FC
0000000001FC0000000001FC0000000001F80000000001F80000000003F80000000003F8
0000000003F00000000003F00000000007F00000000007F00000000007E00000007E07E0
000001FF8FE0000007C1CFE000001F80EFC000003F00FFC000007E007FC00000FC007FC0
0001F8003F800003F0003F800003F0003F800007E0003F80000FE0003F00000FC0003F00
001FC0007F00001FC0007F00003F80007E00003F80007E00003F8000FE00007F8000FE00
007F0000FC00007F0000FC00007F0001FC0000FF0001FC0000FE0001F80000FE0001F800
00FE0003F80000FE0003F83800FC0003F03800FC0003F03800FC0007F03800FC0007F078
00FC000FE070007C000FE070007C001FE0F0007E003FE0E0003E007FE0E0003E00F3E1E0
001F01E3E1C0000F8781E3800003FF00FF000000FC003E0000294077BE2E>I<00003F00
0001FFE00007C0F0001F0078007E007800FC003C01F8003C03F0003C07F0003C0FE0007C
0FC000781FC000783F8000F83F8001F07F8007E07F001FC07F01FF007FFFF800FFFF8000
FE000000FE000000FE000000FE000000FC000000FC000000FC000000FC000000FC000000
FC000000FC00000CFC00001CFC00003C7C0000787C0000F07E0001E03E0003C01F000F80
0F001E000780FC0003FFE00000FF00001E2976A729>I<0000700001FC0001FC0001FC00
01F80001F80000E000000000000000000000000000000000000000000000000000000000
0000000000000000000000007C0001FF00038F800707800E07C01E07C01C07C03C0FC038
0FC0380FC0781FC0701F80701F80F03F80F03F00003F00007F00007E0000FE0000FC0000
FC0001FC0001F80001F80003F80003F00003F03807F03807E0380FE0780FC0700FC0700F
C0F00F80E00F80E00F81C00F83C00F838007870003FE0000F800163D79BB1C>105
D<0007F003FFF003FFE003FFE0000FE0000FE0000FC0000FC0001FC0001FC0001F80001F
80003F80003F80003F00003F00007F00007F00007E00007E0000FE0000FE0000FC0000FC
0001FC0001FC0001F80001F80003F80003F80003F00003F00007F00007F00007E00007E0
000FE0000FE0000FC0000FC0001FC0001FC0001F80001F80003F80003F80003F00003F00
007F00007F07007E07007E0700FE0F00FE0E00FC0E00FC0E00FC1E00FC1C00FC1C007C38
007C78003C70001FE000078000144079BE17>108 D<01F0003F80007F000007FC01FFE0
03FFC0000F3E07C1F80F83F0000E1F0F00FC1E01F8001E1F1C007C3800F8001C1F38007E
7000FC003C1FF0007EE000FC00381FF0007FE000FC00381FE0007FC000FC00783FC0007F
8000FC00703FC0007F8000FC00703F80007F0000FC00703F00007E0000FC00F03F0000FE
0001FC00F07F0000FC0001F800007E0000FC0001F800007E0000FC0001F800007E0001FC
0003F80000FE0001FC0003F00000FC0001F80003F00000FC0001F80003F00000FC0003F8
0007F00001FC0003F80007E00001F80003F00007E00001F80003F0000FE00001F80007F0
000FC00003F80007F0001FC0E003F00007E0001F80E003F00007E0001F80E003F0000FE0
003F81E007F0000FE0003F01C007E0000FC0003F01C007E0000FC0003F01C007E0001FC0
003E03800FE0001FC0003E03800FC0001F80003E07000FC0001F80003E07000FC0003F80
003E0E001FC0003F80001E1C001F80003F00000FF8000700000E000003E000432979A74A
>I<01F0003F800007FC01FFE0000F3E07C1F8000E1F0F00FC001E1F1C007C001C1F3800
7E003C1FF0007E00381FF0007E00381FE0007E00783FC0007E00703FC0007E00703F8000
7E00703F00007E00F03F0000FE00F07F0000FC00007E0000FC00007E0000FC00007E0001
FC0000FE0001F80000FC0001F80000FC0001F80000FC0003F80001FC0003F00001F80003
F00001F80007F00001F80007E00003F8000FE07003F0000FC07003F0000FC07003F0001F
C0F007F0001F80E007E0001F80E007E0001F81E007E0001F01C00FE0001F01C00FC0001F
03800FC0001F03800FC0001F07001FC0000F0E001F800007FC0007000001F0002C2979A7
33>I<00001FC0000000FFF8000003F07C00000FC01F00001F801F00003F000F80007E00
0FC000FC0007C001F80007E003F00007E007F00007E007E00007E00FE00007F01FC00007
F01FC00007F03F800007F03F800007F03F80000FE07F80000FE07F00000FE07F00000FE0
7F00001FE0FF00001FC0FE00001FC0FE00001FC0FE00003F80FE00003F80FE00007F00FE
00007F00FC00007E007C0000FC007E0001FC007E0001F8007E0003F0003E0007E0001F00
0FC0001F001F80000F803E000007C0FC000001FFF00000003F800000242977A72E>I<00
7C0000000001FF00003800038F8000FC0007078000FC000E07C000FC001E07C001FC001C
07C001FC003C0FC001F800380FC001F800380FC003F800781FC003F800701F8003F00070
1F8003F000F03F8007F000F03F0007F000003F0007E000007F0007E000007E000FE00000
7E000FE00000FE000FC00000FC000FC00000FC001FC00001FC001FC00001F8001F800001
F8001F800001F8003F800003F8003F838003F0003F038003F0003F038003F0007F038003
F0007F078003F0007E070003F0007E070003F000FE0F0003F000FE0E0001F001FE0E0001
F803BE1C0000F8073E1C00007C1E1E3800003FF80FF0000007E003E000292979A730>
117 D<007C00038001FF0007E0038F800FE00707800FE00E07C00FF01E07C00FF01C07C0
07F03C0FC007F0380FC003F0380FC003E0781FC001E0701F8001E0701F8001E0F03F8001
E0F03F0001C0003F0001C0007F0001C0007E0003C0007E00038000FE00038000FC000380
00FC00078001FC00070001F800070001F800070001F8000E0003F8000E0003F0000E0003
F0001C0003F0001C0003F000380003F000380003F000700003F000700001F000E00001F0
01C00001F803C00000F8078000007E0F0000001FFC00000007F00000242979A729>I<00
00000018000000007E00000000FE00000001FE00000003FC00000007F80000000FF00000
001FC00000007F00000000FE00000001F800000003F000000007C0000000070000000000
0000000000000000000000000000000000000000000000001FC0000000FFF8000003F07C
00000FC01F00001F801F00003F000F80007E000FC000FC0007C001F80007E003F00007E0
07F00007E007E00007E00FE00007F01FC00007F01FC00007F03F800007F03F800007F03F
80000FE07F80000FE07F00000FE07F00000FE07F00001FE0FF00001FC0FE00001FC0FE00
001FC0FE00003F80FE00003F80FE00007F00FE00007F00FC00007E007C0000FC007E0001
FC007E0001F8007E0003F0003E0007E0001F000FC0001F001F80000F803E000007C0FC00
0001FFF00000003F800000273C77BA2E>243 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff ecrm1000 10 44
/Ff 44 251 df<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000C000C000C001C001
80018003800300070006000E001C003800700060000A19798817>44
D<1C007F00FF80FF80FF80FF80FF807F001C000909798817>46 D<000000060000000600
00000E0000000C0000000C0000001C000000180000003800000030000000300000007000
00006000000060000000E0000000C0000000C0000001C000000180000001800000038000
00030000000700000006000000060000000E0000000C0000000C0000001C000000180000
00180000003800000030000000300000007000000060000000E0000000C0000000C00000
01C000000180000001800000038000000300000003000000070000000600000006000000
0E0000000C0000001C000000180000001800000038000000300000003000000070000000
6000000060000000E0000000C0000000C0000001C0000001800000038000000300000003
0000000700000006000000060000000E0000000C0000000C0000001C0000001800000018
0000003800000030000000700000006000000060000000E0000000C0000000C00000001F
537BBD2A>I<0003F80000001FFF0000007E0FC00000F803E00001E000F00003C0007800
07C0007C000F80003E000F80003E001F00001F001F00001F003F00001F803F00001F803F
00001F807E00000FC07E00000FC07E00000FC07E00000FC07E00000FC0FE00000FE0FE00
000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE0000
0FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000F
E0FE00000FE0FE00000FE0FE00000FE07E00000FC07E00000FC07E00000FC07E00000FC0
7F00001FC03F00001F803F00001F803F00001F801F00001F001F00001F000F80003E000F
80003E0007C0007C0003E000F80003F001F80000F803E000007E0FC000001FFF00000003
F8000023397DB62A>I<0001C0000003C0000007C000001FC00000FFC000FFFFC000FFFF
C000FF1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000003F
E0007FFFFFF07FFFFFF07FFFFFF01C3779B62A>I<000FF00000007FFE000001FFFF8000
03E03FE0000F000FF0001E0007F8001C0003FC00380001FE00700001FE00700000FF0060
0000FF00FE0000FF00FF00007F80FF80007F80FF80007F80FF80007F80FF80007F80FF80
007F807F00007F801C00007F800000007F80000000FF00000000FF00000000FE00000001
FE00000001FC00000003FC00000003F800000007F00000000FE00000000FC00000001F80
0000003F000000007E00000000FC00000001F800000001E000000003C000000007800000
000F000000001E000180003C000180007800018000F000038001E000030003C000030007
8000030007000007000FFFFFFF001FFFFFFF003FFFFFFF007FFFFFFE00FFFFFFFE00FFFF
FFFE00FFFFFFFE0021377CB62A>I<0007F80000003FFF000000FFFFC00001F80FF00003
C007F800078003FC000E0001FE000F8001FE001FE000FF001FF000FF001FF000FF001FF0
00FF001FF000FF001FF000FF000FE000FF0007C000FF00000001FE00000001FE00000001
FC00000003FC00000003F800000007F000000007E00000000F800000007F0000001FFC00
00001FFF800000000FE000000007F000000001FC00000001FE00000000FF000000007F80
0000007F800000007FC00000007FC00000003FC00000003FE00000003FE01E00003FE07F
80003FE07F80003FE0FFC0003FE0FFC0003FE0FFC0003FE0FFC0003FC0FFC0007FC0FF80
007F807E00007F80700000FF00380001FE001E0001FE000F8003F80007F00FF00001FFFF
C000007FFF0000000FF8000023397DB62A>I<0000003800000000380000000078000000
00F800000000F800000001F800000003F800000007F800000007F80000000FF80000001F
F80000001BF800000033F800000073F800000063F8000000C3F8000001C3F800000183F8
00000303F800000703F800000603F800000C03F800001C03F800001803F800003003F800
007003F800006003F80000C003F80001C003F800038003F800030003F800070003F8000E
0003F8000C0003F800180003F800380003F800300003F800600003F800E00003F800FFFF
FFFFF8FFFFFFFFF8FFFFFFFFF8000003F800000003F800000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000007FC000003FFFF
F80003FFFFF80003FFFFF825387EB72A>I<00003FC0000001FFF0000007FFFC00000FE0
3E00003F800700007E001F0000FC003F8001F8007F8003F0007F8007F0007F8007E0007F
800FE0003F000FC0001E001FC00000001F800000003F800000003F800000003F80000000
7F800000007F000000007F01FC00007F07FF8000FF1E07E000FF3801F000FF7000F800FF
6000FC00FFE0007E00FFC0003F00FFC0003F80FF80003F80FF80001FC0FF80001FC0FF80
001FC0FF00001FE0FF00001FE0FF00001FE0FF00001FE0FF00001FE07F00001FE07F0000
1FE07F00001FE07F00001FE07F80001FE03F80001FE03F80001FC03F80001FC01F80003F
801FC0003F800FC0003F000FE0007F0007E000FE0003F000FC0001F801F80000FE07F000
007FFFC000001FFF00000003FC000023397DB62A>54 D<0003F80000001FFF0000007FFF
C00000FC07F00001E001F80003C0007C000780003C000700003E000F00001E000E00001F
001E00000F001E00000F001E00000F001F00000F001F00000F001F80001F001FC0001E00
1FE0001E000FF8003C000FFC007C000FFF00780007FF80F00003FFE3E00003FFF7800000
FFFF0000007FFE0000003FFF8000000FFFE000003FFFF00000F9FFF80001E07FFE0003C0
3FFF000F800FFF001F0007FF801E0001FFC03C0000FFC07C00003FC07800001FE0780000
0FE0F8000007E0F0000003E0F0000003E0F0000001E0F0000001E0F0000001E0F8000001
C0F8000001C078000003C07C000003803E000007801F00000F000F80001E0007E0007C00
03F803F00000FFFFE000003FFF80000007FC000023397DB62A>56
D<003FE00001FFFE0007C03F800E000FC03C0007F0300003F0700003F87C0001F8FE0001
FCFF0001FCFF0001FCFF0001FCFF0001FC7E0001FC3C0003F8000003F8000007F0000007
F000000FE000001F8000003F0000007E0000007C000000F8000001F0000001E0000003C0
000003800000038000000700000007000000070000000600000006000000060000000600
000006000000060000000600000006000000060000000600000000000000000000000000
000000000000000000000000000000000000000000000E0000003F8000007FC000007FC0
00007FC000007FC000007FC000003F8000000E00001E3B7CBA27>63
D<0000003800000000000038000000000000380000000000007C0000000000007C000000
0000007C000000000000FE000000000000FE000000000000FE000000000001FF00000000
0001FF000000000001FF0000000000037F8000000000037F8000000000077FC000000000
063FC000000000063FC0000000000E3FE0000000000C1FE0000000000C1FE0000000001C
1FF000000000180FF000000000180FF000000000380FF8000000003007F8000000003007
F8000000007007FC000000006003FC000000006003FC00000000C003FE00000000C001FE
00000000C001FE000000018001FF000000018000FF000000018000FF000000030000FF80
00000300007F8000000300007F8000000600007FC0000007FFFFFFC0000007FFFFFFC000
000FFFFFFFE000000C00001FE000000C00001FE000001800000FF000001800000FF00000
1800000FF0000030000007F8000030000007F8000030000007F8000060000003FC000060
000003FC0000E0000003FC0000E0000001FE0001E0000001FE0003F0000001FF000FFC00
0007FF80FFFF8000FFFFFEFFFF8000FFFFFEFFFF8000FFFFFE373C7DBB3E>65
D<000001FF80018000000FFFE0038000007FFFF803800001FF807E07800003FC000F0F80
000FF000039F80001FE00001DF80003F800000FF80007F0000007F8000FE0000003F8001
FE0000003F8003FC0000001F8007F80000000F8007F80000000F800FF000000007800FF0
00000007801FE000000007801FE000000003803FE000000003803FC000000003807FC000
000001807FC000000001807FC000000001807F800000000180FF800000000000FF800000
000000FF800000000000FF800000000000FF800000000000FF800000000000FF80000000
0000FF800000000000FF800000000000FF800000000000FF800000000000FF8000000000
00FF8000000000007F8000000000007FC000000001807FC000000001807FC00000000180
3FC000000001803FE000000001801FE000000003801FE000000003000FF000000003000F
F0000000070007F8000000070007F8000000060003FC0000000E0001FE0000001C0000FE
0000001800007F0000003800003F8000007000001FE00000E000000FF00003C0000003FC
000F80000001FF803F000000007FFFFC000000000FFFF00000000001FF800000313D7BBA
3C>67 D<FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE0001FF800007FE0000FF0000
00FE0000FF0000003F0000FF0000001F0000FF0000000F0000FF000000070000FF000000
070000FF000000070000FF000000030000FF000000030000FF000000030000FF00000003
8000FF000000018000FF0000C0018000FF0000C0018000FF0000C0018000FF0000C00000
00FF0000C0000000FF0000C0000000FF0001C0000000FF0001C0000000FF0003C0000000
FF000FC0000000FFFFFFC0000000FFFFFFC0000000FFFFFFC0000000FF000FC0000000FF
0003C0000000FF0001C0000000FF0001C0000000FF0000C0000000FF0000C0000000FF00
00C0006000FF0000C0006000FF0000C0006000FF0000C000E000FF00000000C000FF0000
0000C000FF00000000C000FF00000000C000FF00000001C000FF00000001C000FF000000
01C000FF000000038000FF000000038000FF000000078000FF000000078000FF0000000F
8000FF0000003F8000FF0000007F8001FF800007FF00FFFFFFFFFFFF00FFFFFFFFFFFF00
FFFFFFFFFFFF0033397EB838>69 D<FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF801FF80
001FF800FF000001F800FF000000FC00FF0000007C00FF0000003C00FF0000001C00FF00
00001C00FF0000000C00FF0000000C00FF0000000C00FF0000000C00FF0000000E00FF00
00000600FF0000000600FF0001800600FF0001800600FF0001800000FF0001800000FF00
01800000FF0001800000FF0003800000FF0003800000FF0007800000FF001F800000FFFF
FF800000FFFFFF800000FFFFFF800000FF001F800000FF0007800000FF0003800000FF00
03800000FF0001800000FF0001800000FF0001800000FF0001800000FF0001800000FF00
01800000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000001FFC0000000FFFFFFC00000FFFFFFC00000FFFFFFC000002F397D
B836>I<FFFF0000000007FFF8FFFF800000000FFFF8FFFF800000000FFFF801FF800000
000FFC0000DFC00000001BF80000DFC00000001BF80000CFE000000033F80000CFE00000
0033F80000CFE000000033F80000C7F000000063F80000C7F000000063F80000C7F00000
0063F80000C3F8000000C3F80000C3F8000000C3F80000C1FC00000183F80000C1FC0000
0183F80000C1FC00000183F80000C0FE00000303F80000C0FE00000303F80000C07F0000
0603F80000C07F00000603F80000C07F00000603F80000C03F80000C03F80000C03F8000
0C03F80000C03F80000C03F80000C01FC0001803F80000C01FC0001803F80000C00FE000
3003F80000C00FE0003003F80000C00FE0003003F80000C007F0006003F80000C007F000
6003F80000C003F800C003F80000C003F800C003F80000C003F800C003F80000C001FC01
8003F80000C001FC018003F80000C001FC018003F80000C000FE030003F80000C000FE03
0003F80000C0007F060003F80000C0007F060003F80000C0007F060003F80000C0003F8C
0003F80000C0003F8C0003F80000C0001FD80003F80000C0001FD80003F80000C0001FD8
0003F80000C0000FF00003F80000C0000FF00003F80000C0000FF00003F80001E00007E0
0003F80003F00007E00003F8000FFC0003C00007FC00FFFFC003C003FFFFF8FFFFC003C0
03FFFFF8FFFFC0018003FFFFF845397DB84C>77 D<FFFFFFFFC00000FFFFFFFFFC0000FF
FFFFFFFF000001FF8000FFC00000FF00001FE00000FF00000FF00000FF000003F80000FF
000003FC0000FF000001FE0000FF000001FE0000FF000000FF0000FF000000FF0000FF00
0000FF8000FF000000FF8000FF000000FF8000FF000000FF8000FF000000FF8000FF0000
00FF8000FF000000FF8000FF000000FF0000FF000000FF0000FF000001FE0000FF000001
FE0000FF000003FC0000FF000003F80000FF00000FF00000FF00001FE00000FF0000FF80
0000FFFFFFFE000000FFFFFFF0000000FF000000000000FF000000000000FF0000000000
00FF000000000000FF000000000000FF000000000000FF000000000000FF000000000000
FF000000000000FF000000000000FF000000000000FF000000000000FF000000000000FF
000000000000FF000000000000FF000000000000FF000000000000FF000000000000FF00
0000000000FF000000000000FF000000000000FF000000000000FF000000000001FF8000
000000FFFFFF00000000FFFFFF00000000FFFFFF0000000031397EB838>80
D<001FE0000000FFFC000003E03F000007000F80000F8007E0001FC003F0001FE003F000
1FE001F8001FE001F8001FE000FC000FC000FC00078000FC00000000FC00000000FC0000
0000FC00000000FC0000007FFC000007FFFC00003FE0FC0000FE00FC0003F800FC000FF0
00FC001FC000FC003FC000FC007F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000
FC0CFE0000FC0CFE0001FC0CFE0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E
180FE0781FF003FFF00FE0007F8007C026277DA52A>97 D<0003FC00001FFF80007E03E0
01F8007003F000F807E001FC0FC003FC0FC003FC1F8003FC3F8003FC3F0001F87F0000F0
7F0000007F0000007E000000FE000000FE000000FE000000FE000000FE000000FE000000
FE000000FE000000FE000000FE0000007E0000007F0000007F0000003F0000063F800006
1F80000E1FC0000C0FC0001C07E0003803F0007001F800E0007C07C0001FFF000007F800
1F277DA525>99 D<0000000FC0000003FFC0000003FFC0000003FFC00000003FC0000000
0FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000F
C00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0
0000000FC00003F80FC0001FFF0FC0007E078FC000F801EFC003F0007FC007E0003FC00F
C0001FC00FC0001FC01F80000FC03F80000FC03F00000FC07F00000FC07F00000FC07E00
000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE0000
0FC0FE00000FC0FE00000FC0FE00000FC07E00000FC07F00000FC07F00000FC03F00000F
C03F00000FC01F80001FC01F80001FC00FC0003FC007E0007FC003F000EFF001F801CFFF
007C078FFF001FFE0FFF0007F80FC0283B7DB92E>I<0007F800001FFF00007C0FC001F8
03E003F001F007E001F80FC000F81F80007C1F80007C3F00007E3F00003E7F00003E7F00
003F7E00003FFE00003FFE00003FFE00003FFFFFFFFFFFFFFFFFFE000000FE000000FE00
0000FE000000FE0000007E0000007E0000007F0000007F0000003F0000033F8000031F80
00070FC0000607C0000E07E0001C01F0003800F80070007E03E0001FFF800003FC002027
7EA525>I<00000003F0000FF00FF8003FFC3C3C00F81F707C01F00FE07C03E007C07C07
C003E0100FC003F0000FC003F0001F8001F8001F8001F8001F8001F8001F8001F8001F80
01F8001F8001F8001F8001F8001F8001F8000FC003F0000FC003F00007C003E00003E007
C00003F00F800003F81F0000073FFC0000060FF000000E000000000E000000000E000000
000E000000000F000000000F000000000FC000000007FFFFC00007FFFFF80003FFFFFE00
01FFFFFF8003FFFFFFC00F80007FE01F00000FF03E000003F07C000001F07C000001F8F8
000000F8F8000000F8F8000000F8F8000000F8F8000000F8FC000001F87C000001F03E00
0003E03F000007E00F80000F8007E0003F0001FC01FC00007FFFF0000007FF000026387E
A52A>103 D<03F000000000FFF000000000FFF000000000FFF0000000000FF000000000
03F00000000003F00000000003F00000000003F00000000003F00000000003F000000000
03F00000000003F00000000003F00000000003F00000000003F00000000003F000000000
03F00000000003F00000000003F00000000003F00000000003F00FF0000003F03FFC0000
03F0F03F000003F1C01F800003F3800FC00003F7000FC00003FE000FC00003FC0007E000
03FC0007E00003F80007E00003F80007E00003F80007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF80293A7EB92E>
I<0380000FE0001FF0001FF0001FF0001FF0001FF0000FE0000380000000000000000000
0000000000000000000000000000000000000000000003F000FFF000FFF000FFF00007F0
0003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F0
0003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F0
0003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC012387EB717>I<0001C000
07F0000FF8000FF8000FF8000FF8000FF80007F00001C000000000000000000000000000
00000000000000000000000000000000000001F800FFF800FFF800FFF80007F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F83C01F87E01F8FF01F0FF03F0FF03F0FF03E0FE07C07C07C03C0F000FFE0003F80015
4984B719>I<03F000FFF000FFF000FFF0000FF00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC0
123A7EB917>108 D<03F00FF0001FE000FFF03FFC007FF800FFF0F03F01E07E00FFF1C0
1F83803F000FF3800FC7001F8003F7000FCE001F8003FE000FDC001F8003FC0007F8000F
C003FC0007F8000FC003F80007F0000FC003F80007F0000FC003F80007F0000FC003F000
07E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000F
C003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F000
07E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000F
C003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F000
07E0000FC003F00007E0000FC003F00007E0000FC007F8000FF0001FE0FFFFC1FFFF83FF
FFFFFFC1FFFF83FFFFFFFFC1FFFF83FFFF40257EA445>I<03F00FF00000FFF03FFC0000
FFF0F03F0000FFF1C01F80000FF3800FC00003F7000FC00003FE000FC00003FC0007E000
03FC0007E00003F80007E00003F80007E00003F80007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029257EA42E>
I<0003FE0000000FFF8000003E03E00000F800F80001F0007C0003E0003E0007C0001F00
0F80000F801F80000FC01F000007C03F000007E03F000007E07E000003F07E000003F07E
000003F07E000003F0FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE00
0003F8FE000003F8FE000003F8FE000003F87E000003F07E000003F07F000007F03F0000
07E03F000007E01F80000FC00F80000F800FC0001F8007E0003F0003F0007E0000F800F8
00007E03F000001FFFC0000003FE000025277EA52A>I<03F01FE000FFF07FF800FFF1E0
7E00FFF3801F8007F7000FC003FE0007E003FC0003F003F80003F803F00001F803F00001
FC03F00000FC03F00000FE03F00000FE03F00000FE03F000007F03F000007F03F000007F
03F000007F03F000007F03F000007F03F000007F03F000007F03F000007F03F000007F03
F00000FE03F00000FE03F00000FE03F00001FC03F00001FC03F80003F803F80003F003FC
0007F003FE000FE003F6000FC003F7803F0003F1E07E0003F0FFF80003F01FC00003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000007F8000000FFFFC00000FFFFC00000FFFFC00000
28357EA42E>I<0003F800C0001FFE01C0007E0781C000FC01C3C003F000E3C007F00077
C00FE00037C00FC0003FC01FC0001FC03F80001FC03F80000FC07F00000FC07F00000FC0
7F00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE
00000FC0FE00000FC0FE00000FC0FE00000FC07F00000FC07F00000FC07F00000FC03F00
000FC03F80001FC01F80001FC01FC0003FC00FC0003FC007E0007FC003F000EFC001F801
CFC0007E078FC0001FFE0FC00007F80FC00000000FC00000000FC00000000FC00000000F
C00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0
0000001FE0000003FFFF000003FFFF000003FFFF28357DA42C>I<07E01F00FFE07FC0FF
E1E3E0FFE387F00FE707F003E607F003EE07F003EC03E003FC008003F8000003F8000003
F8000003F8000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003
F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003
F0000003F0000003F0000003F0000007F80000FFFFF000FFFFF000FFFFF0001C257EA421
>I<00FF030003FFE7000F80FF001E003F003C001F0078000F0070000700F0000700F000
0700F0000300F8000300F8000300FC000300FF0000007FE000007FFF00003FFFE0001FFF
F8000FFFFC0003FFFE0000FFFF000007FF8000007F8000001F80C0000FC0C00007C0C000
07C0E00003C0E00003C0E00003C0F00003C0F0000380F8000780FC000780FC000F00FF00
1E00F3C07C00E1FFF000C03F80001A277DA521>I<001800000018000000180000001800
000018000000380000003800000038000000780000007800000078000000F8000001F800
0003F8000007F800001FFFFF00FFFFFF00FFFFFF0001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F800C001F800C001F800C001F800
C001F800C001F800C001F800C001F800C001F800C000FC01C000FC0180007C0380007E03
00003F0700000FFE000001F8001A347FB220>I<03F00007E000FFF001FFE000FFF001FF
E000FFF001FFE0000FF0001FE00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F0000FE00003F0000FE00003F0000FE00003F0001FE00001F0001FE00001F8003F
E00000F80077F80000FC00E7FF80003F03C7FF80001FFF87FF800003FC07E00029267EA4
2E>I<FFFF803FFEFFFF803FFEFFFF803FFE0FF8000FF007F00007E003F00003C003F800
038001F800030001F800030000FC00060000FC00060000FE000E00007E000C00007E000C
00003F001800003F001800003F803800001F803000001F803000000FC06000000FC06000
000FE060000007E0C0000007E0C0000003F180000003F180000003F180000001FB000000
01FB00000001FF00000000FE00000000FE000000007C000000007C000000007C00000000
380000000038000027257EA32C>I<FFFF803FFEFFFF803FFEFFFF803FFE0FF8000FF007
F00007C003F000038001F800038001F800030001FC00030000FC00060000FC000600007E
000C00007E000C00007F000C00003F001800003F001800001F803000001F803000001FC0
7000000FC06000000FC060000007E0C0000007E0C0000007F1C0000003F180000003F180
000001FB00000001FB00000001FF00000000FE00000000FE000000007C000000007C0000
00007C000000003800000000380000000030000000003000000000700000000060000000
006000000000C000000000C000007C01C00000FE01800000FE03800000FE03000000FE06
000000FC0E000000701C00000038380000001FF00000000FC000000027357EA32C>121
D<000E0000003F8000007FC000007FC000007FC000007FC000007FC000003F8000000E00
000000000000000000000000000000000000000000000000000000000000000000000600
00000600000006000000060000000E0000000C0000000C0000000C0000000C0000000C00
00000C0000001C0000001C0000001C000000380000003800000078000000F0000000F000
0001F0000003E0000007E000000FC000001F8000003F8000007F0000007F000000FE0000
F0FE0001F8FE0003FCFE0003FCFE0003FCFE0003FCFE0001FCFE0000F87E0000387F0000
703F0000E01F8003C00FC01F0003FFFC00007FE0001E3B7CA927>190
D<000003000000000F800000001FC00000003FC00000007FC0000000FF80000001FE0000
0003F800000007F00000000FC00000001F000000001C0000000010000000000000000000
000000000000000000001FE0000000FFFC000003E03F000007000F80000F8007E0001FC0
03F0001FE003F0001FE001F8001FE001F8001FE000FC000FC000FC00078000FC00000000
FC00000000FC00000000FC00000000FC0000007FFC000007FFFC00003FE0FC0000FE00FC
0003F800FC000FF000FC001FC000FC003FC000FC007F8000FC007F0000FC007F0000FC0C
FE0000FC0CFE0000FC0CFE0000FC0CFE0001FC0CFE0001FC0CFF0003FC0C7F00077C0C7F
80063E183FC01E3E180FE0781FF003FFF00FE0007F8007C026377DB52A>225
D<0000180000003C0000007E000000FE000001FE000003FC000007F800000FE000001F80
00003E0000007C000000700000004000000000000000000000000000000007F800001FFF
00007C0FC001F803E003F001F007E001F80FC000F81F80007C1F80007C3F00007E3F0000
3E7F00003E7F00003F7E00003FFE00003FFE00003FFE00003FFFFFFFFFFFFFFFFFFE0000
00FE000000FE000000FE000000FE0000007E0000007E0000007F0000007F0000003F0000
033F8000031F8000070FC0000607C0000E07E0001C01F0003800F80070007E03E0001FFF
800003FC0020377EB525>233 D<0001800003C00007E0000FE0001FE0003FC0007F8000
FE0001F80003E00007C00007000004000000000000000000000000000003F000FFF000FF
F000FFF00007F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC013367EB5
17>237 D<0003C0008000000FF001C000001FFC038000003FFF0F000000787FFE000000
E01FFC000001C007F80000008001F0000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000003F00FF00000FFF03FFC0000FFF0F03F0000FFF1C01F80000F
F3800FC00003F7000FC00003FE000FC00003FC0007E00003FC0007E00003F80007E00003
F80007E00003F80007E00003F00007E00003F00007E00003F00007E00003F00007E00003
F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003
F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003
F00007E00003F00007E00003F00007E00003F00007E00003F00007E00007F8000FF000FF
FFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029387EB72E>241 D<0000018000000007C000
00000FE00000001FE00000003FE00000007FC0000000FF00000001FC00000003F8000000
07E00000000F800000000E00000000080000000000000000000000000000000000000003
FE0000000FFF8000003E03E00000F800F80001F0007C0003E0003E0007C0001F000F8000
0F801F80000FC01F000007C03F000007E03F000007E07E000003F07E000003F07E000003
F07E000003F0FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8
FE000003F8FE000003F8FE000003F87E000003F07E000003F07F000007F03F000007E03F
000007E01F80000FC00F80000F800FC0001F8007E0003F0003F0007E0000F800F800007E
03F000001FFFC0000003FE000025377EB52A>243 D<000000C00000000001E000000000
03F00000000007F0000000000FF0000000001FE0000000003FC0000000007F0000000000
FC0000000001F00000000003E00000000003800000000002000000000000000000000000
0000000000000000000000000000000003F00007E000FFF001FFE000FFF001FFE000FFF0
01FFE0000FF0001FE00003F00007E00003F00007E00003F00007E00003F00007E00003F0
0007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F0
0007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F0
0007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F0
000FE00003F0000FE00003F0000FE00003F0001FE00001F0001FE00001F8003FE00000F8
0077F80000FC00E7FF80003F03C7FF80001FFF87FF800003FC07E00029377EB52E>250
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg ecbx1000 10 14
/Fg 14 226 df<0F803FE07FF07FF0FFF8FFF8FFF8FFF8FFF87FF07FF03FE00F80000000
000000000000000000000000000000000000000F803FE07FF07FF0FFF8FFF8FFF8FFF8FF
F87FF07FF03FE00F800D2579A41B>58 D<0000003FFC0001C0000003FFFFC003C000001F
FFFFF007C00000FFFFFFFC0FC00003FFFC00FF3FC00007FFC0001FFFC0001FFE00000FFF
C0003FFC000003FFC0007FF0000001FFC000FFE0000000FFC001FFC0000000FFC003FFC0
0000007FC007FF800000003FC00FFF000000003FC00FFF000000001FC01FFE000000001F
C01FFE000000000FC03FFE000000000FC03FFC000000000FC03FFC0000000007C07FFC00
00000007C07FFC0000000007C07FF8000000000000FFF8000000000000FFF80000000000
00FFF8000000000000FFF8000000000000FFF8000000000000FFF8000000000000FFF800
0000000000FFF8000000000000FFF8000000000000FFF8000000000000FFF80000000000
00FFF8000000000000FFF80000000000007FF80000000000007FFC0000000000007FFC00
00000003C03FFC0000000003C03FFC0000000003C03FFE0000000003C01FFE0000000007
C01FFE0000000007C00FFF0000000007800FFF000000000F8007FF800000000F0003FFC0
0000001F0001FFC00000003E0000FFE00000007E00007FF8000000FC00003FFC000001F8
00001FFF000003F0000007FFC0000FE0000003FFFC00FF80000000FFFFFFFE000000001F
FFFFF80000000003FFFFE000000000003FFE0000003A3B7BB945>67
D<FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC007FF800007FF800007FF800007FF800007FF8
00007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF8
00007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF8
00007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF8
00007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF8
00007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800FFFFFF
FCFFFFFFFCFFFFFFFCFFFFFFFC1E397DB824>73 D<003FFE00000003FFFFE000000FFFFF
F800001FF00FFE00003FF003FF00003FF801FF80003FF800FFC0003FF800FFC0003FF800
7FE0003FF8007FE0001FF0007FE0000FE0007FE0000380007FE0000000007FE000000000
7FE00000003FFFE000000FFFFFE000007FFFFFE00001FFF87FE00007FF807FE0000FFE00
7FE0003FF8007FE0003FF0007FE0007FE0007FE000FFE0007FE000FFC0007FE000FFC000
7FE000FFC0007FE000FFC0007FE000FFC000FFE000FFE001FFE0007FE001FFE0003FF007
FFF8001FFC1FBFFFC00FFFFE1FFFC003FFF80FFFC0003FE003FFC02A257DA42E>97
D<0001FFC000000FFFFC00007FFFFF0000FF80FF8003FE00FFC007FC01FFC00FF801FFC0
1FF801FFC01FF001FFC03FF001FFC03FF000FF807FE0007F007FE0001C007FE0000000FF
E0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0
000000FFE00000007FE00000007FE00000007FF00000003FF00000003FF00001E01FF800
01E01FF80003E00FFC0007C007FE00078003FF001F8000FFC07E00007FFFFC00000FFFF0
000001FF800023257DA42A>99 D<0003FF8000001FFFF000007FFFFC0001FF83FE0003FE
007F8007FC003F800FF8003FC01FF8001FE01FF0001FE03FF0000FF03FF0000FF07FE000
0FF07FE0000FF87FE00007F8FFE00007F8FFE00007F8FFFFFFFFF8FFFFFFFFF8FFFFFFFF
F8FFE0000000FFE0000000FFE0000000FFE00000007FE00000007FE00000007FE0000000
3FF00000003FF00000781FF00000780FF80000F80FFC0000F007FC0003F001FF000FE000
FFC07FC0007FFFFF00000FFFFC000001FFE00025257DA42C>101
D<00001FF0000001FFFC000007FFFF00001FF87F80003FE0FF8000FFC1FFC000FFC1FFC0
01FF81FFC001FF81FFC003FF01FFC003FF00FF8003FF00FF8003FF003E0003FF00000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000FFFF
FF0000FFFFFF0000FFFFFF0000FFFFFF000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF00000003FF000000FFFFFE0000FFFFFE0000FFFFFE0000FFFF
FE0000223A7DB91D>I<01F00007FC000FFE000FFE001FFF001FFF001FFF001FFF001FFF
000FFE000FFE0007FC0001F0000000000000000000000000000000000000000000000000
0000000000FF007FFF007FFF007FFF007FFF0007FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFF
F8FFFFF8FFFFF8153B7DBA1B>105 D<00FE007FE0000FFC0000FFFE01FFFC003FFF8000
FFFE07FFFF00FFFFE000FFFE1F81FF83F03FF000FFFE3C00FF87801FF00007FE7800FFCF
001FF80003FEF000FFDE001FF80003FFE0007FFC000FFC0003FFC0007FF8000FFC0003FF
C0007FF8000FFC0003FF80007FF0000FFC0003FF80007FF0000FFC0003FF00007FE0000F
FC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF0000
7FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC00
03FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0
000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF
00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000F
FC0003FF00007FE0000FFC0003FF00007FE0000FFC00FFFFFC1FFFFF83FFFFF0FFFFFC1F
FFFF83FFFFF0FFFFFC1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF04C257DA451>109
D<00FE007FC000FFFE03FFF800FFFE0FFFFE00FFFE1F03FF00FFFE3C01FF8007FE7801FF
8003FEF000FF8003FFE000FFC003FFC000FFC003FFC000FFC003FF8000FFC003FF8000FF
C003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FF
C003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FF
C003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FF
C003FF0000FFC003FF0000FFC003FF0000FFC0FFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFF
FFFFFFFC3FFFFF30257DA435>I<0001FFC00000000FFFF80000007FFFFF000000FF80FF
800003FE003FE00007FC001FF0000FF8000FF8001FF00007FC001FF00007FC003FF00007
FE003FE00003FE007FE00003FF007FE00003FF007FE00003FF00FFE00003FF80FFE00003
FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003
FF80FFE00003FF807FE00003FF007FE00003FF007FE00003FF003FE00003FE003FF00007
FE001FF00007FC001FF00007FC000FF8000FF80007FC001FF00003FE003FE00001FF80FF
C000007FFFFF0000001FFFFC00000001FFC0000029257DA430>I<00FE03F000FFFE0FFE
00FFFE3FFF00FFFE7C7F80FFFEF8FFC007FEF0FFC003FFE0FFC003FFC0FFC003FFC0FFC0
03FF807F8003FF803F0003FF800C0003FF80000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF000000FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE000022257EA4
27>114 D<000F0000000F0000000F0000000F0000000F0000001F0000001F0000001F00
00001F0000003F0000003F0000007F000000FF000000FF000001FF000007FF00001FFFFF
E0FFFFFFE0FFFFFFE0FFFFFFE003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF000003FF007803FF007803FF007803FF007803FF007803FF00
7803FF007803FF007803FF00F801FF80F001FF81F000FFC3E0003FFFC0001FFF800003FE
001D357EB425>116 D<000007C0000000000FE0000000001FF0000000003FF800000000
7FF800000000FFF800000001FFF800000003FFF000000007FFF00000000FFFC00000001F
FE000000000FF0000000000F800000000004000000000000000000000000000000000000
00000000000000000000003FFE00000003FFFFE000000FFFFFF800001FF00FFE00003FF0
03FF00003FF801FF80003FF800FFC0003FF800FFC0003FF8007FE0003FF8007FE0001FF0
007FE0000FE0007FE0000380007FE0000000007FE0000000007FE00000003FFFE000000F
FFFFE000007FFFFFE00001FFF87FE00007FF807FE0000FFE007FE0003FF8007FE0003FF0
007FE0007FE0007FE000FFE0007FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC0
007FE000FFC000FFE000FFE001FFE0007FE001FFE0003FF007FFF8001FFC1FBFFFC00FFF
FE1FFFC003FFF80FFFC0003FE003FFC02A377DB62E>225 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecrm1095 10.95 43
/Fh 43 251 df<000003FE000000001FFFC0000000FE01E0000001F80078000007E0001C
00000FC0007C00001F8000FE00003F0001FE00007F0001FE00007E0001FE0000FE0001FE
0000FC0000FC0000FC0000780000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC00007E00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE0000FC0001FE
0000FC0000FE0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0001FE0000FF007FFFF83FFFFC7FFFF83FFFFC7FFFF83FFFFC2E407FBF32
>28 D<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000C000C000C000C001C0018001
8003800300070006000E000C001C003800700060000A1B788819>44
D<1C007F00FF80FF80FF80FF80FF807F001C000909788819>46 D<0003FC0000001FFF80
00003E07C00000F801F00001F000F80003E0007C0003C0003C0007C0003E000F80001F00
0F80001F001F00000F801F00000F803F00000FC03F00000FC03F00000FC03F00000FC07E
000007E07E000007E07E000007E07E000007E07E000007E0FE000007F0FE000007F0FE00
0007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE0000
07F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007
F0FE000007F0FE000007F0FE000007F0FE000007F07E000007E07E000007E07E000007E0
7E000007E07F00000FE03F00000FC03F00000FC03F00000FC03F00000FC01F00000F801F
80001F800F80001F000F80001F0007C0003E0007C0003E0003E0007C0001F000F80000F8
01F000003E07C000001FFF80000003FC0000243F7CBC2D>48 D<0000C0000003C0000007
C000001FC000007FC00007FFC000FFFFC000FF9FC000F81FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000007FF000FFFFFFF8FFFFFFF8FFFFFFF81D3D78BC2D>I<0007FC0000003FFF800000
FFFFE00001F00FF800078003FC000F0001FE000E0000FF001C00007F803800003FC03000
003FC07000001FE06000001FE06000001FE0FE00000FF0FF00000FF0FF80000FF0FF8000
0FF0FF80000FF0FF80000FF0FF80000FF07F00000FF01C00000FF00000000FE00000001F
E00000001FE00000001FC00000003FC00000003F800000007F800000007F00000000FE00
000001FC00000001FC00000003F800000007F00000000FE00000000FC00000001F800000
003E000000007C00000000F800000001F000000003E000000003C000000007800000000F
000030001E000030003C000030007800003000F000006001E000006003C0000060078000
006007000000E00FFFFFFFE01FFFFFFFE03FFFFFFFE07FFFFFFFC0FFFFFFFFC0FFFFFFFF
C0FFFFFFFFC0243D7CBC2D>I<0007FC0000003FFF800000FFFFE00001F807F80007C003
FC000F0001FE000E0000FF001C00007F801F80007F803FC0003FC03FE0003FC03FE0003F
C03FE0003FC03FE0003FC03FE0003FC01FC0003FC00700003FC00000003F800000007F80
0000007F800000007F00000000FF00000000FE00000001FC00000003F800000003F00000
000FC00000003F0000001FFC0000001FFF800000000FE000000003F800000001FC000000
00FE000000007F000000007F800000003FC00000003FC00000003FE00000003FE0000000
1FE00000001FF00000001FF00C00001FF03F00001FF07F80001FF0FFC0001FF0FFC0001F
F0FFC0001FF0FFC0001FF0FFC0003FE0FF80003FE07F00003FC07000003FC07000007F80
3800007F801C0000FF000F0001FE0007C003FC0003F80FF00000FFFFE000003FFF800000
07FC0000243F7CBC2D>I<060000030007C0000F0007F800FE0007FFFFFC0007FFFFFC00
07FFFFF00007FFFFE00007FFFFC00007FFFF0000063FF800000600000000060000000006
000000000600000000060000000006000000000600000000060000000006000000000600
0000000600000000060000000006000000000601FE0000060FFF8000063E03E000067001
F80006E000FC0007C0007E000780003F000700003F800600001F800000001FC00000001F
C00000001FE00000000FE00000000FE00000000FE00000000FF00000000FF00000000FF0
0000000FF03E00000FF07F00000FF0FF80000FF0FF80000FF0FF80000FF0FF80000FF0FF
00000FE0FE00001FE0E000001FE06000001FC07000001FC03000003F803800003F801C00
007F001E0000FE000F0001FC0007C003F80003F00FE00000FFFFC000003FFF00000007F8
0000243F7CBC2D>53 D<300000000038000000003E000000003FFFFFFFFC3FFFFFFFFC3F
FFFFFFFC3FFFFFFFF87FFFFFFFF87FFFFFFFF07FFFFFFFE070000000E060000001C06000
00038060000003006000000700C000000E00C000000C00C000001C00C000003800000000
30000000007000000000E000000001C00000000180000000038000000007000000000700
0000000E000000000E000000001C000000001C000000003C000000003800000000780000
00007800000000F800000000F000000001F000000001F000000001F000000003F0000000
03F000000003F000000007F000000007E000000007E000000007E00000000FE00000000F
E00000000FE00000000FE00000000FE00000001FE00000001FE00000001FE00000001FE0
0000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000000FC000
00000780000026407BBD2D>55 D<0003FC0000001FFF0000003FFFC00000FE07F00001F8
01F80003F000FC0007E0007C000FE0007E001FC0003F001F80003F003F80001F803F8000
1F807F80001F807F00001FC07F00001FC0FF00001FC0FF00000FE0FF00000FE0FF00000F
E0FF00000FE0FF00000FE0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF0
FF00000FF07F00001FF07F00001FF07F80001FF03F80001FF03F80003FF01F80003FF00F
C0007FF007C0006FF007E000EFF003F001CFF000F8038FF0007C070FF0001FFE0FE00007
F80FE00000000FE00000001FE00000001FE00000001FC00000001FC00000001FC0000000
3F800000003F800F00003F001F80007F003FC0007E003FC0007E003FC000FC003FC001F8
003F8001F8003F0003F0001C0007E0001E001FC0000FC07F000003FFFE000001FFF80000
003FC00000243F7CBC2D>57 D<1C007F00FF80FF80FF80FF80FF807F001C000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
001C007F00FF80FF80FF80FF80FF807F001C00092778A619>I<0000003FF0000C000003
FFFE001C00001FFFFF801C00007FE00FC03C0000FF0001F07C0003FC0000787C0007F000
003CFC001FE000000FFC003FC0000007FC007F80000003FC00FF00000003FC01FE000000
01FC01FC00000000FC03FC00000000FC07F8000000007C07F8000000007C0FF000000000
3C0FF0000000003C1FE0000000001C1FE0000000001C3FE0000000001C3FC0000000001C
3FC0000000000C7FC0000000000C7FC0000000000C7FC0000000000C7F800000000000FF
800000000000FF800000000000FF800000000000FF800000000000FF800000000000FF80
0000000000FF800000000000FF800000000000FF800000000000FF800000000000FF8000
00000000FF8000000000007F8000000000007FC000000000007FC0000000000C7FC00000
00000C3FC0000000000C3FC0000000000C3FE0000000000C1FE0000000001C1FE0000000
00180FF000000000180FF0000000001807F8000000003807F8000000003003FC00000000
7001FC000000006001FE00000000E000FF00000001C0007F8000000380003FC000000780
001FE000000F000007F000001E000003FC00003C000000FF0000F00000007FE007E00000
001FFFFF8000000003FFFE00000000003FF0000036427BBF41>67
D<FFFFFFFFFC000000FFFFFFFFFF800000FFFFFFFFFFE0000000FFC0001FF80000007F80
0003FE0000007F800000FF0000007F8000003F8000007F8000001FC000007F8000000FE0
00007F80000007F000007F80000003F800007F80000001FC00007F80000001FC00007F80
000000FE00007F80000000FF00007F800000007F00007F800000007F80007F800000003F
80007F800000003FC0007F800000003FC0007F800000003FC0007F800000003FE0007F80
0000001FE0007F800000001FE0007F800000001FE0007F800000001FE0007F800000001F
F0007F800000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F80
0000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F800000001F
F0007F800000001FF0007F800000001FE0007F800000001FE0007F800000001FE0007F80
0000001FE0007F800000003FE0007F800000003FC0007F800000003FC0007F800000003F
80007F800000007F80007F800000007F80007F800000007F00007F80000000FE00007F80
000000FE00007F80000001FC00007F80000003F800007F80000007F800007F8000000FF0
00007F8000001FE000007F8000003FC000007F800000FF0000007F800003FE000000FFC0
001FF80000FFFFFFFFFFF00000FFFFFFFFFF800000FFFFFFFFFC0000003C3E7DBD45>I<
FFFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFFFFFFFFC000FFC00001FFC0007F8000001FC000
7F8000000FE0007F80000003E0007F80000003E0007F80000001E0007F80000000E0007F
80000000E0007F80000000E0007F8000000060007F8000000060007F8000000060007F80
00000060007F8000000030007F8000300030007F8000300030007F8000300030007F8000
300030007F8000300000007F8000300000007F8000700000007F8000700000007F8000F0
0000007F8001F00000007F8007F00000007FFFFFF00000007FFFFFF00000007FFFFFF000
00007F8007F00000007F8001F00000007F8000F00000007F8000700000007F8000700000
007F8000300000007F8000300000007F8000300006007F8000300006007F800030000600
7F800030000C007F800000000C007F800000000C007F800000000C007F800000000C007F
800000001C007F8000000018007F8000000018007F8000000038007F8000000038007F80
00000078007F8000000078007F80000000F0007F80000001F0007F80000003F0007F8000
0007F0007F8000001FF000FFC00001FFF0FFFFFFFFFFFFE0FFFFFFFFFFFFE0FFFFFFFFFF
FFE0373E7DBD3D>I<FFFFFFF00000FFFFFFF00000FFFFFFF0000000FFE0000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000003007F80000003007F80
000003007F80000003007F80000003007F80000007007F80000006007F80000006007F80
000006007F80000006007F8000000E007F8000000E007F8000000E007F8000001E007F80
00001E007F8000003E007F8000007E007F800000FE007F800001FC007F800007FC00FFC0
003FFCFFFFFFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFC303E7DBD38>76
D<FFFFFFFFC0000000FFFFFFFFFC000000FFFFFFFFFF80000000FFC0007FE00000007F80
000FF00000007F800003FC0000007F800001FE0000007F800000FF0000007F8000007F80
00007F8000003FC000007F8000003FC000007F8000003FE000007F8000001FE000007F80
00001FF000007F8000001FF000007F8000001FF000007F8000001FF000007F8000001FF0
00007F8000001FF000007F8000001FF000007F8000001FE000007F8000003FE000007F80
00003FC000007F8000003F8000007F8000007F8000007F800000FF0000007F800001FC00
00007F800003F80000007F80000FE00000007F8000FF800000007FFFFFFC000000007FFF
FFF8000000007F8000FF000000007F80003FC00000007F80000FE00000007F800007F000
00007F800003F80000007F800003FC0000007F800001FE0000007F800001FE0000007F80
0000FF0000007F800000FF0000007F800000FF0000007F800000FF0000007F800000FF00
00007F800000FF0000007F800000FF8000007F800000FF8000007F800000FF8000007F80
0000FF8000007F800000FF8000007F800000FF8000007F800000FF8000007F800000FF80
06007F800000FFC006007F8000007FC006007F8000007FC006007F8000007FC00E00FFC0
00003FE00CFFFFFFC0001FE01CFFFFFFC0000FF038FFFFFFC00007F870000000000001FF
E00000000000003F803F407DBD43>82 D<0007FC0018003FFF803800FFFFE03801FC03F8
7803F0007C7807C0001EF80F80000FF81F000007F83F000003F83E000001F87E000000F8
7E000000F87C00000078FC00000078FC00000078FC00000038FC00000038FC00000038FE
00000018FE00000018FF00000018FF000000187F800000007FC00000007FE00000003FF8
0000003FFF0000001FFFF000000FFFFF00000FFFFFF00007FFFFFC0001FFFFFE0000FFFF
FF80003FFFFFC00007FFFFE000007FFFE0000007FFF00000007FF80000001FF80000000F
FC00000007FC00000003FC00000001FE00000001FEC0000000FEC0000000FEC0000000FE
C00000007EC00000007EE00000007EE00000007EE00000007EE00000007CF00000007CF0
000000FCF8000000F8FC000001F8FE000001F0FF000003F0FF800007E0FBE0000FC0F1F8
001F80F07F007F00E01FFFFC00E007FFF000C0007FC00027427BBF32>I<001FF0000000
FFFC000003E03F00000F000FC0001C0007E0001F0003F0003F8001F8003FC000FC003FC0
00FC003FC000FC003FC0007E001F80007E000F00007E000000007E000000007E00000000
7E000000007E0000001FFE000003FFFE00001FF87E00007F807E0001FC007E0007F0007E
000FE0007E001FC0007E003F80007E007F80007E007F00007E007F00007E03FE00007E03
FE00007E03FE00007E03FE0000FE03FE0000FE03FE0001FE037F0001BE037F0003BE033F
80071F061FC00E1F8E0FF03C0FFC03FFF007F8003FC003E0282A7CA82D>97
D<01F800000000FFF800000000FFF800000000FFF80000000007F80000000003F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F807F800
0001F81FFF000001F8780FC00001F9E003F00001FB8001F80001FF0000FC0001FE00007E
0001FC00003F0001FC00001F8001F800001F8001F800001FC001F800000FC001F800000F
E001F800000FE001F8000007E001F8000007F001F8000007F001F8000007F001F8000007
F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007
F001F8000007E001F800000FE001F800000FE001F800000FE001F800000FC001F800001F
C001F800001F8001FC00003F0001FE00003F0001F600007E0001F70000FC0001E38001F8
0001C1C003E00001C0F81F800001803FFE0000000007F000002C407EBE32>I<0001FF00
00000FFFE000003F00F800007C001E0001F800070003F0001F0007E0003F800FC0007F80
0FC0007F801F80007F801F80007F803F00003F003F00001E007F000000007F000000007E
00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00
000000FE00000000FE00000000FE00000000FE000000007F000000007F000000007F0000
00003F000000C03F800000C01F800001C01FC00001800FC000038007E000070003F00006
0001F8001E0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>I<000000
01F800000000FFF800000000FFF800000000FFF80000000007F80000000003F800000000
01F80000000001F80000000001F80000000001F80000000001F80000000001F800000000
01F80000000001F80000000001F80000000001F80000000001F80000000001F800000000
01F80000000001F80000000001F80000000001F80000000001F8000000FF01F8000007FF
C1F800001F80F1F800007C0039F80001F8001DF80003F0000FF80007E00007F8000FC000
03F8000FC00003F8001F800001F8003F800001F8003F000001F8007F000001F8007F0000
01F8007F000001F8007E000001F800FE000001F800FE000001F800FE000001F800FE0000
01F800FE000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE0000
01F8007E000001F8007F000001F8007F000001F8003F000001F8003F800001F8001F8000
03F8001F800003F8000FC00007F80007E0000FF80003F0000DFC0001F8003DFE0000FC00
71FFF0003F01E1FFF0000FFF81FFF00001FE01F8002C407DBE32>I<0003FC0000001FFF
8000007E07E00000F801F00001F000F80003E0007C0007C0003E000FC0003F001F80001F
001F80001F803F00001F803F00000F807F00000F807F00000FC07E00000FC07E00000FC0
FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE00000000FE00000000FE
00000000FE00000000FE000000007E000000007F000000007F000000007F000000003F00
0000C03F800000C01F800001C00FC00001800FC000038007E000070003F0000E0001F800
1C0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>I<00001FC00000FF
F00003F0380007C0FC000F81FE001F81FE003F01FE003E01FE007E01FE007E00FC00FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC0000FFFFFF00FFFFFF00FFFFFF0000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000001FE00007FFFFE007FFFFE007FFFFE001F407F
BF1C>I<000000007E000003FC01FF00000FFF078780003E07CE0F8000FC03FC0F8001F8
01F80F8003F000FC070003E0007C000007E0007E000007E0007E00000FC0003F00000FC0
003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0
003F000007E0007E000007E0007E000003E0007C000003F000FC000001F801F8000001FC
03F0000001BE07C00000038FFF0000000303FC0000000700000000000700000000000700
0000000007000000000007800000000007800000000007C00000000003E00000000003FF
FFF0000001FFFFFE000001FFFFFF8000007FFFFFE00001FFFFFFF80007C0001FF8001F80
0003FC003F000000FE003E0000007E007C0000003E007C0000003F00F80000001F00F800
00001F00F80000001F00F80000001F00F80000001F00FC0000003F007C0000003E007E00
00007E003F000000FC001F800001F8000FC00003F00003F0000FC00000FE007F0000003F
FFFC00000003FFC00000293D7EA82D>I<01F800000000FFF800000000FFF800000000FF
F80000000007F80000000003F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F803FC000001F80FFF800001F83C0FC00001F8F003E00001
F9C003F00001FB8001F80001FB0001F80001FF0000FC0001FE0000FC0001FE0000FC0001
FC0000FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D
3F7EBE32>I<01C00007F0000FF8000FF8000FF8000FF8000FF80007F00001C000000000
00000000000000000000000000000000000000000000000000000000000000000001F800
7FF8007FF8007FF80007F80003F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80003FC00
FFFFE0FFFFE0FFFFE0133D7EBC19>I<0000700001FC0003FE0003FE0003FE0003FE0003
FE0001FC0000700000000000000000000000000000000000000000000000000000000000
000000000000000000FE003FFE003FFE003FFE0001FE0000FE00007E00007E00007E0000
7E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E0000
7E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E0000
7E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E0000
7E00007E00007E3C007E7E007CFF00FCFF00FCFF00F8FF01F8FE01F07803E03E07C00FFF
0001FC00175084BC1C>I<01F800FFF800FFF800FFF80007F80003F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80003FC00FFFFF0FFFFF0FFFFF0143F7EBE19>108
D<01F803FC0001FE0000FFF80FFF8007FFC000FFF83C0FC01E07E000FFF8F003E07801F0
0007F9C003F0E001F80003FB8001F9C000FC0001FB0001F98000FC0001FF0000FF80007E
0001FE0000FF00007E0001FE0000FF00007E0001FC0000FE00007E0001FC0000FE00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0003FC0001FE0000FF00FFFFF07FFFF83FFFFCFFFFF07FFFF83FFFFCFFFFF07FFFF83FFF
FC46287EA74B>I<01F803FC0000FFF80FFF8000FFF83C0FC000FFF8F003E00007F9C003
F00003FB8001F80001FB0001F80001FF0000FC0001FE0000FC0001FE0000FC0001FC0000
FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D287EA7
32>I<0001FE0000000FFFC000003F03F000007C00F80001F0003E0003E0001F0007C000
0F8007C0000F800F800007C01F800007E01F000003E03F000003F03F000003F07E000001
F87E000001F87E000001F87E000001F8FE000001FCFE000001FCFE000001FCFE000001FC
FE000001FCFE000001FCFE000001FCFE000001FCFE000001FC7E000001F87E000001F87E
000001F87F000003F83F000003F03F000003F01F800007E00F800007C00FC0000FC007C0
000F8003E0001F0001F0003E0000FC00FC00003F03F000000FFFC0000001FE0000262A7D
A82D>I<01F807F80000FFF81FFF0000FFF8780FC000FFF9E003F00003FB8001F80001FF
0000FC0001FE00007E0001FC00007F0001FC00003F8001F800001F8001F800001FC001F8
00001FC001F800000FE001F800000FE001F800000FE001F800000FF001F8000007F001F8
000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8
000007F001F8000007F001F800000FE001F800000FE001F800000FE001F800000FE001F8
00001FC001F800001FC001F800003F8001FC00003F0001FE00007F0001FE0000FE0001FF
0001FC0001FB8003F80001F9C007E00001F8F81F800001F83FFE000001F807F0000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000003FC00000000FFFFF0000000FFFFF0000000FFFFF00000002C3A7EA732>I<00
00FF000C000007FFC01C00001F80F01C00007E00381C0000FC001C3C0003F8000E3C0007
F000077C0007E000037C000FC00003FC001FC00001FC003F800001FC003F800000FC007F
000000FC007F000000FC007F000000FC007F000000FC00FE000000FC00FE000000FC00FE
000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE
000000FC00FF000000FC007F000000FC007F000000FC007F000000FC003F800000FC003F
800001FC001FC00001FC000FC00003FC000FE00003FC0007E00007FC0003F0000EFC0001
F8001CFC00007E0078FC00003F01E0FC00000FFFC0FC000001FE00FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000001FE000000007FFFF80000007FFFF80000007FFFF82D3A7DA730>I<03F00FC0FFF0
3FF0FFF0F0F8FFF1C3FC07F183FC03F383FC01F703FC01F603FC01F601F801FE006001FC
000001FC000001FC000001FC000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000003FC0000FFFF
F800FFFFF800FFFFF8001E287EA723>I<007FC06003FFF8E007C03DE01E000FE03C0003
E0780001E0780001E0700000E0F00000E0F0000060F0000060F8000060F8000060FC0000
60FF0000007FC000007FFE00003FFFE0001FFFFC0007FFFE0003FFFF80007FFFC00007FF
E000003FE000000FF0C00003F0C00001F8C00000F8E00000F8E0000078E0000078F00000
78F0000078F8000078F80000F0FC0000F0FC0001E0FE0001C0F7800780F1E01F00E0FFFC
00C01FE0001D2A7DA824>I<001800000018000000180000001800000018000000180000
00380000003800000038000000380000007800000078000000F8000000F8000001F80000
03F8000007F800001FFFFFC0FFFFFFC0FFFFFFC001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8006001F80060
01F8006001F8006001F8006001F8006001F8006001F8006001F8006000FC00E000FC00C0
00FC00C0007E01C0003F0380001F87000007FE000001F8001B397EB723>I<01F80000FC
00FFF8007FFC00FFF8007FFC00FFF8007FFC0007F80003FC0003F80001FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80001FC0001F80001FC
0001F80001FC0001F80003FC0000F80003FC0000FC0007FC0000FC000EFE00007C001CFF
00003E0038FFF8001F80F0FFF80007FFE0FFF80000FF00FC002D297EA732>I<FFFFC007
FFE0FFFFC007FFE0FFFFC007FFE007FC0001FF0003F800007C0003F80000780001F80000
700001FC0000700000FC0000600000FC00006000007E0000C000007E0000C000007F0001
C000003F00018000003F00018000001F80030000001F80030000001FC0070000000FC006
0000000FC00600000007E00C00000007E00C00000007F01C00000003F01800000003F018
00000001F83000000001F83000000001FC7000000000FC6000000000FC60000000007EC0
000000007EC0000000007FC0000000003F80000000003F80000000001F00000000001F00
000000001F00000000000E00000000000E0000002B287EA630>I<FFFFC007FFE0FFFFC0
07FFE0FFFFC007FFE007FC0001FF0003F800007C0001F80000780001F80000700001FC00
00700000FC0000600000FE00006000007E0000C000007E0000C000003F00018000003F00
018000003F80038000001F80030000001F80030000000FC0060000000FC0060000000FE0
0E00000007E00C00000007E00C00000003F01800000003F01800000003F83800000001F8
3000000001FC3000000000FC6000000000FC60000000007EC0000000007EC0000000007F
C0000000003F80000000003F80000000001F00000000001F00000000001F00000000000E
00000000000E00000000000C00000000000C00000000001C000000000018000000000018
0000000000300000000000300000000000600000003800600000007C00E0000000FE00C0
000000FE01C0000000FE0180000000FE03000000007C0700000000700E00000000383C00
0000001FF80000000007E0000000002B3A7EA630>121 D<00000E000000001F00000000
3F000000007F00000000FF00000001FE00000003FC00000007F00000000FC00000001F80
0000003E0000000078000000007000000000400000000000000000000000000000000000
000003FC0000001FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E00
0FC0003F001F80001F001F80001F803F00001F803F00000F807F00000F807F00000FC07E
00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE00
000000FE00000000FE00000000FE00000000FE000000007E000000007F000000007F0000
00007F000000003F000000C03F800000C01F800001C00FC00001800FC000038007E00007
0003F0000E0001F8001C0000FC003800003F01F000000FFFC0000001FE0000223B7DB928
>233 D<0001C00003E00007F0000FF0001FE0003FC0007F80007E0000FC0001F00003E0
0007800007000004000000000000000000000000000001F8007FF8007FF8007FF80007F8
0003F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80003FC00FFFFE0FFFFE0FFFFE0143A
7EB919>237 D<000001C000000003E000000007E00000000FE00000001FE00000003FC0
0000007F80000000FE00000001F800000003F000000007C00000000F000000000E000000
00080000000000000000000000000000000000000001FE0000000FFFC000003F03F00000
7C00F80001F0003E0003E0001F0007C0000F8007C0000F800F800007C01F800007E01F00
0003E03F000003F03F000003F07E000001F87E000001F87E000001F87E000001F8FE0000
01FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001
FCFE000001FC7E000001F87E000001F87E000001F87F000003F83F000003F03F000003F0
1F800007E00F800007C00FC0000FC007C0000F8003E0001F0001F0003E0000FC00FC0000
3F03F000000FFFC0000001FE0000263B7DB92D>243 D<0000003800000000007C000000
0000FC0000000001FC0000000003FC0000000007F8000000000FF0000000001FC0000000
003F00000000007E0000000000F80000000001E00000000001C000000000010000000000
000000000000000000000000000000000000000000000001F80000FC00FFF8007FFC00FF
F8007FFC00FFF8007FFC0007F80003FC0003F80001FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80001FC0001F80001FC0001F80001FC0001
F80003FC0000F80003FC0000FC0007FC0000FC000EFE00007C001CFF00003E0038FFF800
1F80F0FFF80007FFE0FFF80000FF00FC002D3B7EB932>250 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecrm1728 17.28 10
/Fi 10 112 df<0000000000FFF0000000C0000000000FFFFF000001C0000000007FFFFF
E00001C000000003FFFFFFF80003C00000000FFFE003FE0003C00000003FFC00007F0007
C0000000FFE000000FC007C0000003FF80000003E00FC0000007FE00000001F01FC00000
0FFC00000000781FC000003FF0000000003C3FC000007FE0000000001E3FC00000FFC000
0000000F7FC00001FF800000000007FFC00003FF000000000003FFC00007FE0000000000
03FFC0000FFC000000000001FFC0001FF8000000000000FFC0001FF0000000000000FFC0
003FF00000000000007FC0007FE00000000000003FC000FFC00000000000003FC000FFC0
0000000000001FC001FF800000000000001FC001FF800000000000000FC003FF00000000
0000000FC003FF000000000000000FC007FE0000000000000007C007FE00000000000000
07C00FFC0000000000000007C00FFC0000000000000003C01FFC0000000000000003C01F
F80000000000000003C01FF80000000000000003C03FF80000000000000003C03FF80000
000000000001C03FF00000000000000001C03FF00000000000000001C07FF00000000000
000001C07FF00000000000000000007FF00000000000000000007FF00000000000000000
007FE0000000000000000000FFE0000000000000000000FFE0000000000000000000FFE0
000000000000000000FFE0000000000000000000FFE0000000000000000000FFE0000000
000000000000FFE0000000000000000000FFE0000000000000000000FFE0000000000000
000000FFE0000000000000000000FFE0000000000000000000FFE0000000000000000000
FFE0000000000000000000FFE0000000000000000000FFE0000000000000000000FFE000
00000000000000007FE00000000000000000007FF00000000000000000007FF000000000
00000000007FF00000000000000000007FF00000000000000000003FF000000000000000
00003FF00000000000000001C03FF80000000000000001C03FF80000000000000001C01F
F80000000000000001C01FF80000000000000001C01FFC0000000000000001C00FFC0000
000000000003C00FFC00000000000000038007FE00000000000000038007FE0000000000
0000038003FF00000000000000038003FF00000000000000078001FF8000000000000007
0001FF800000000000000F0000FFC00000000000000F0000FFC00000000000000E00007F
E00000000000001E00003FF00000000000001C00001FF00000000000003C00001FF80000
000000007800000FFC00000000000078000007FE000000000000F0000003FF0000000000
01E0000001FF800000000003C0000000FFC00000000007C00000007FE0000000000F8000
00003FF0000000001F000000000FFC000000003E0000000007FE00000000FC0000000003
FF80000001F00000000000FFF0000007E000000000003FFC00003F8000000000000FFFE0
03FF00000000000003FFFFFFFC000000000000007FFFFFF0000000000000000FFFFF8000
00000000000000FFF800000000526679E361>67 D<FFFFFC000000000000001FFFFF80FF
FFFC000000000000001FFFFF80FFFFFC000000000000001FFFFF80FFFFFE000000000000
003FFFFF8000FFFE000000000000003FFF8000003FFE000000000000003FFE0000001DFF
0000000000000077FC0000001DFF0000000000000077FC0000001CFF80000000000000E7
FC0000001CFF80000000000000E7FC0000001CFF80000000000000E7FC0000001C7FC000
0000000001C7FC0000001C7FC0000000000001C7FC0000001C7FC0000000000001C7FC00
00001C3FE000000000000387FC0000001C3FE000000000000387FC0000001C3FE0000000
00000387FC0000001C1FF000000000000707FC0000001C1FF000000000000707FC000000
1C0FF800000000000E07FC0000001C0FF800000000000E07FC0000001C0FF80000000000
0E07FC0000001C07FC00000000001C07FC0000001C07FC00000000001C07FC0000001C07
FC00000000001C07FC0000001C03FE00000000003807FC0000001C03FE00000000003807
FC0000001C03FE00000000003807FC0000001C01FF00000000007007FC0000001C01FF00
000000007007FC0000001C00FF8000000000E007FC0000001C00FF8000000000E007FC00
00001C00FF8000000000E007FC0000001C007FC000000001C007FC0000001C007FC00000
0001C007FC0000001C007FC000000001C007FC0000001C003FE0000000038007FC000000
1C003FE0000000038007FC0000001C003FE0000000038007FC0000001C001FF000000007
0007FC0000001C001FF0000000070007FC0000001C000FF80000000E0007FC0000001C00
0FF80000000E0007FC0000001C000FF80000000E0007FC0000001C0007FC0000001C0007
FC0000001C0007FC0000001C0007FC0000001C0007FC0000001C0007FC0000001C0003FE
000000380007FC0000001C0003FE000000380007FC0000001C0003FE000000380007FC00
00001C0001FF000000700007FC0000001C0001FF000000700007FC0000001C0000FF8000
00E00007FC0000001C0000FF800000E00007FC0000001C0000FF800000E00007FC000000
1C00007FC00001C00007FC0000001C00007FC00001C00007FC0000001C00007FC00001C0
0007FC0000001C00003FE00003800007FC0000001C00003FE00003800007FC0000001C00
003FE00003800007FC0000001C00001FF00007000007FC0000001C00001FF00007000007
FC0000001C00000FF8000E000007FC0000001C00000FF8000E000007FC0000001C00000F
F8000E000007FC0000001C000007FC001C000007FC0000001C000007FC001C000007FC00
00001C000007FC001C000007FC0000001C000003FE0038000007FC0000001C000003FE00
38000007FC0000001C000003FE0038000007FC0000001C000001FF0070000007FC000000
1C000001FF0070000007FC0000001C000001FF0070000007FC0000001C000000FF80E000
0007FC0000001C000000FF80E0000007FC0000001C0000007FC1C0000007FC0000001C00
00007FC1C0000007FC0000001C0000007FC1C0000007FC0000001C0000003FE380000007
FC0000001C0000003FE380000007FC0000001C0000003FE380000007FC0000001C000000
1FF700000007FC0000001C0000001FF700000007FC0000001C0000001FF700000007FC00
00001C0000000FFE00000007FC0000001C0000000FFE00000007FC0000003E00000007FC
00000007FC0000003E00000007FC00000007FC0000007F00000007FC00000007FC000000
7F00000003F800000007FC000001FFC0000003F80000000FFE000007FFF0000003F80000
003FFF8000FFFFFF800001F000003FFFFFFF80FFFFFF800001F000003FFFFFFF80FFFFFF
800001F000003FFFFFFF80FFFFFF800000E000003FFFFFFF80696277E17C>77
D<00003FE0000000000003FFFE00000000000FFFFF80000000003FC03FE0000000007C00
0FF800000000F00003FC00000001E00001FE00000003C00000FF000000078000007F8000
000F0000003FC000000F8000003FC000000FF000001FE000001FF800001FE000001FFC00
000FF000001FFC00000FF000001FFC00000FF000001FFC000007F800001FFC000007F800
001FFC000007F800000FF8000007F8000003E0000007F800000000000007F80000000000
0007F800000000000007F800000000000007F800000000000007F800000000000007F800
00000000007FF800000000007FFFF8000000000FFFFFF8000000007FF807F800000001FF
8007F800000007FC0007F80000001FF00007F80000007FC00007F8000000FF800007F800
0003FE000007F8000007FC000007F800000FFC000007F800000FF8000007F800001FF000
0007F800003FE0000007F800003FE0000007F800007FC0000007F801C07FC0000007F801
C07FC0000007F801C0FFC0000007F801C0FF80000007F801C0FF80000007F801C0FF8000
000FF801C0FF8000000FF801C0FF8000000FF801C0FF8000001FF801C0FFC000001BF801
C07FC000003BF801C07FC0000073F801C07FE0000073F801803FF00000E1FC03801FF000
03C1FC03800FF8000780FE070007FE000F00FF0F0001FF807C007FFE00007FFFF8003FFC
00001FFFE0001FF8000003FF000007E0003A4179BF43>97 D<0003C000000000000007FF
C0000000000000FFFFC0000000000000FFFFC0000000000000FFFFC0000000000000FFFF
C000000000000001FFC0000000000000007FC0000000000000007FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0000000000000003FC0000000000000003FC0000000000000003FC0000000000000003F
C0007FC0000000003FC007FFFC000000003FC01FFFFF000000003FC07F007FC00000003F
C0F8000FF00000003FC3E00007F80000003FC7800001FC0000003FCF000000FE0000003F
DE0000007F0000003FFC0000003F8000003FF80000003FC000003FF00000001FE000003F
F00000000FE000003FE00000000FF000003FE000000007F800003FC000000007F800003F
C000000003FC00003FC000000003FC00003FC000000003FE00003FC000000001FE00003F
C000000001FE00003FC000000001FF00003FC000000001FF00003FC000000001FF00003F
C000000000FF00003FC000000000FF80003FC000000000FF80003FC000000000FF80003F
C000000000FF80003FC000000000FF80003FC000000000FF80003FC000000000FF80003F
C000000000FF80003FC000000000FF80003FC000000000FF80003FC000000000FF80003F
C000000000FF80003FC000000000FF80003FC000000000FF00003FC000000001FF00003F
C000000001FF00003FC000000001FF00003FC000000001FF00003FC000000001FE00003F
C000000003FE00003FC000000003FC00003FC000000003FC00003FC000000007FC00003F
C000000007F800003FE000000007F000003FE00000000FF000003FF00000001FE000003F
F80000001FC000003FB80000003FC000003F3C0000007F8000003F1E000000FF0000003F
0F000001FE0000003E07800003FC0000003E03C0000FF00000003C01F0001FE00000003C
007E00FF800000003C003FFFFE0000000038000FFFF800000000000000FF800000004165
7CE34B>I<0000000000001E000000000000003FFE00000000000007FFFE000000000000
07FFFE00000000000007FFFE00000000000007FFFE000000000000000FFE000000000000
0003FE0000000000000003FE0000000000000001FE0000000000000001FE000000000000
0001FE0000000000000001FE0000000000000001FE0000000000000001FE000000000000
0001FE0000000000000001FE0000000000000001FE0000000000000001FE000000000000
0001FE0000000000000001FE0000000000000001FE0000000000000001FE000000000000
0001FE0000000000000001FE0000000000000001FE0000000000000001FE000000000000
0001FE0000000000000001FE0000000000000001FE0000000000000001FE000000000000
0001FE0000000000000001FE0000000000000001FE0000000000000001FE000000000000
0001FE0000000000000001FE0000000000FF8001FE000000000FFFF801FE000000003FFF
FE01FE00000000FF803F81FE00000003FC0007C1FE00000007F80001E1FE0000001FE000
00F9FE0000003FC000007DFE0000007F8000003DFE000000FF0000001FFE000001FE0000
000FFE000001FC00000007FE000003FC00000007FE000007F800000003FE000007F00000
0001FE00000FF000000001FE00001FF000000001FE00001FE000000001FE00001FE00000
0001FE00003FE000000001FE00003FC000000001FE00007FC000000001FE00007FC00000
0001FE00007FC000000001FE00007FC000000001FE00007F8000000001FE0000FF800000
0001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF800000
0001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF800000
0001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF800000
0001FE00007F8000000001FE00007FC000000001FE00007FC000000001FE00007FC00000
0001FE00003FC000000001FE00003FC000000001FE00003FE000000001FE00001FE00000
0001FE00001FE000000001FE00000FF000000003FE00000FF000000003FE000007F80000
0007FE000003F800000007FE000003FC0000000FFE000001FE0000001FFE000000FE0000
003DFE0000007F0000003DFE0000003F800000F9FF0000001FC00001F1FF0000000FF000
03C1FFC0000007F8000F81FFFF800001FF007F01FFFF8000007FFFFC01FFFF8000001FFF
E001FFFF80000001FF0001FF000041657BE34B>100 D<000003FE00000000001FFFE000
000000FFFFF800000001FE03FE00000007F0007F8000000FE0003FC000003FC0001FE000
007F00000FF00000FF000007F80000FE000003F80001FC000003FC0003F8000001FC0007
F8000001FE0007F0000000FE000FF0000000FF000FF00000007F001FE00000007F001FE0
0000007F803FE00000007F803FC00000003F803FC00000003F807FC00000003FC07FC000
00003FC07FC00000003FC07F800000003FC07F800000003FC0FF800000003FC0FFFFFFFF
FFFFC0FFFFFFFFFFFFC0FFFFFFFFFFFFC0FF800000000000FF800000000000FF80000000
0000FF800000000000FF800000000000FF800000000000FF800000000000FF8000000000
00FF8000000000007F8000000000007FC000000000007FC000000000007FC00000000000
3FC000000000003FC000000000003FE000000000001FE000000000001FE000000001C00F
F000000001C00FF000000003C007F8000000038007F8000000038003FC000000078001FC
0000000F0001FE0000000E0000FF0000001E00007F8000003C00003FC000007800001FE0
0000F0000007F00003E0000003FC0007C0000000FF803F000000003FFFFC000000000FFF
F00000000001FF80000032417BBF3C>I<0078000001FE000003FF000007FF800007FF80
0007FF800007FF800007FF800007FF800003FF000001FE00000078000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000780000FFF8000FFFF8000FFFF8000FFFF8000FFFF800003FF800000FF800000FF80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F800000FFC00001FFE000FFFFFF80FFFFFF80FFFFFF80FFFFFF
80195F7BDE25>105 D<0003C0007FE0000001FF80000007FFC003FFFC00000FFFF00000
FFFFC00FFFFF00003FFFFC0000FFFFC03F00FFC000FC03FF0000FFFFC078001FE001E000
7F8000FFFFC0F0000FF003C0003FC00001FFC1C00007F80700001FE000007FC3800007FC
0E00001FF000007FC7000003FC1C00000FF000003FCE000003FE3800000FF800003FCE00
0001FE38000007F800003FDC000001FE70000007F800003FD8000001FE60000007F80000
3FF8000000FFE0000003FC00003FF0000000FFC0000003FC00003FF0000000FFC0000003
FC00003FF0000000FFC0000003FC00003FE0000000FF80000003FC00003FE0000000FF80
000003FC00003FE0000000FF80000003FC00003FC0000000FF00000003FC00003FC00000
00FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003F
C0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC
00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF0000
0003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000
FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0
000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00
003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF000000
03FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF
00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC000
0000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC0000
3FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003
FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00
000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00007FE00000
01FF80000007FE0000FFF0000003FFC000000FFF00FFFFFFF003FFFFFFC00FFFFFFFFFFF
FFF003FFFFFFC00FFFFFFFFFFFFFF003FFFFFFC00FFFFFFFFFFFFFF003FFFFFFC00FFFFF
FF683F7CBE71>109 D<0003C0007FE000000007FFC003FFFC000000FFFFC00FFFFF0000
00FFFFC03F00FFC00000FFFFC078001FE00000FFFFC0F0000FF0000001FFC1C00007F800
00007FC3800007FC0000007FC7000003FC0000003FCE000003FE0000003FCE000001FE00
00003FDC000001FE0000003FD8000001FE0000003FF8000000FF0000003FF0000000FF00
00003FF0000000FF0000003FF0000000FF0000003FE0000000FF0000003FE0000000FF00
00003FE0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF00
00003FC0000000FF0000003FC0000000FF0000007FE0000001FF800000FFF0000003FFC0
00FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFFFF
C0423F7CBE4B>I<000001FF80000000000FFFF0000000007FFFFE00000000FF00FF0000
0003F8001FC0000007E00007E000001FC00003F800003F800001FC00007F000000FE0000
FE0000007F0000FC0000003F0001F80000001F8003F80000001FC007F00000000FE007F0
0000000FE00FE000000007F00FE000000007F01FE000000007F81FC000000003F83FC000
000003FC3FC000000003FC3FC000000003FC7FC000000003FE7F8000000001FE7F800000
0001FE7F8000000001FE7F8000000001FEFF8000000001FFFF8000000001FFFF80000000
01FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001
FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FF7F8000000001FE
7F8000000001FE7FC000000003FE7FC000000003FE7FC000000003FE3FC000000003FC3F
C000000003FC1FC000000003F81FE000000007F81FE000000007F80FE000000007F00FF0
0000000FF007F00000000FE003F80000001FC003F80000001FC001FC0000003F8000FE00
00007F00007F000000FE00003F800001FC00001FC00003F800000FE00007F0000003F800
1FC0000001FF00FF800000007FFFFE000000000FFFF00000000001FF80000038417BBF43
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj ecrm1200 12 8
/Fj 8 226 df<000030000000F0000001F0000003F000001FF00000FFF000FFFFF000FF
E7F000FF07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
0FF800001FFC007FFFFFFF7FFFFFFF7FFFFFFF204278C131>49 D<FFFFFFFFFC0000FFFF
FFFFFFC000FFFFFFFFFFF80001FFC0000FFC00007F800001FF00007F8000007F80007F80
00001FE0007F8000000FE0007F80000007F0007F80000007F8007F80000003FC007F8000
0003FC007F80000003FE007F80000001FE007F80000001FE007F80000001FF007F800000
01FF007F80000001FF007F80000001FF007F80000001FF007F80000001FF007F80000001
FF007F80000001FE007F80000001FE007F80000003FE007F80000003FC007F80000003FC
007F80000007F8007F80000007F0007F8000000FE0007F8000001FC0007F8000007F8000
7F800001FE00007F80000FFC00007FFFFFFFF000007FFFFFFF8000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
00000000007F8000000000007F8000000000007F8000000000007F8000000000007F8000
000000007F8000000000007F8000000000007F8000000000007F8000000000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F800000000001FFE000000000FFFFFFC0000000FFFFFFC0000000FFFFFFC000000038
447CC342>80 D<0007FC000000003FFF80000000F80FE0000003C003F00000070001F800
000E0000FC00000FC0007E00001FE0007F00001FF0003F80001FF0003F80001FF0003F80
001FF0001FC0001FF0001FC0000FE0001FC0000380001FC0000000001FC0000000001FC0
000000001FC0000000001FC00000000FFFC0000001FFFFC000000FFE1FC000003FC01FC0
0000FF001FC00003FC001FC00007F8001FC0000FF0001FC0001FE0001FC0003FC0001FC0
007FC0001FC0007F80001FC0007F80001FC060FF00001FC060FF00001FC060FF00001FC0
60FF00003FC060FF00003FC060FF00003FC060FF80007FC0607F8000EFC0607FC000C7E0
C03FC001C7E0C01FE00783F1C007F81E03FF8001FFFC01FF00001FE0007C002B2E7CAC31
>97 D<00007F80000003FFF000000FC07C00003F000F0000FC00038001F80001C003F800
0FC007F0001FE007E0003FE00FE0003FE01FC0003FE01FC0003FE03F80003FE03F80001F
C07F800007007F800000007F800000007F00000000FF00000000FF00000000FF00000000
FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF
000000007F000000007F800000007F800000003F800000003F800000303FC00000301FC0
0000700FE00000600FE00000E007F00000C003F80001C001F800038000FC000700003F00
1E00001FC078000007FFF0000000FF8000242E7DAC2B>99 D<01E00007F80007F8000FFC
000FFC000FFC000FFC0007F80007F80001E0000000000000000000000000000000000000
0000000000000000000000000000000000000000000001FC00FFFC00FFFC00FFFC0007FC
0003FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC
0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC
0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0003FE
00FFFFF8FFFFF8FFFFF815437DC21C>105 D<03F803F0FFF81FFCFFF83C3EFFF8707F07
F8E0FF03F9C0FF01F980FF01FB80FF01FB007E01FB003C01FF000001FE000001FE000001
FE000001FE000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001
FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001
FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000003
FF0000FFFFFE00FFFFFE00FFFFFE00202C7DAB26>114 D<000600000006000000060000
0006000000060000000E0000000E0000000E0000000E0000001E0000001E0000001E0000
003E0000007E0000007E000000FE000001FE000007FE00001FFFFFF0FFFFFFF0FFFFFFF0
00FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000C00FE000C00FE000C00FE000C00FE000C
00FE000C00FE000C00FE000C00FE000C00FE000C007E001C007F0018007F0018003F0038
001F8030001FC0700007E0E00001FFC000007F001E3E7EBC26>116
D<000001E00000000003F00000000007F8000000000FF8000000001FF0000000003FF000
0000007FC000000000FF8000000000FE0000000001F80000000003F00000000007C00000
00000F00000000000E000000000008000000000000000000000000000000000000000000
000000000000000007FC000000003FFF80000000F80FE0000003C003F00000070001F800
000E0000FC00000FC0007E00001FE0007F00001FF0003F80001FF0003F80001FF0003F80
001FF0001FC0001FF0001FC0000FE0001FC0000380001FC0000000001FC0000000001FC0
000000001FC0000000001FC00000000FFFC0000001FFFFC000000FFE1FC000003FC01FC0
0000FF001FC00003FC001FC00007F8001FC0000FF0001FC0001FE0001FC0003FC0001FC0
007FC0001FC0007F80001FC0007F80001FC060FF00001FC060FF00001FC060FF00001FC0
60FF00003FC060FF00003FC060FF00003FC060FF80007FC0607F8000EFC0607FC000C7E0
C03FC001C7E0C01FE00783F1C007F81E03FF8001FFFC01FF00001FE0007C002B417CBF31
>225 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 118 118 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 118 118 a 118 118 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 118
118 a 0 TeXcolorgray 218 -372 a
SDict begin H.S end
 218 -372 a 0 TeXcolorgray
0 TeXcolorgray 218 -372 a
SDict begin H.R end
 218 -372 a 218 -372 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 218 -372
a Black 0 TeXcolorgray Black 0 TeXcolorgray 109 -175
a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 109 -175 a 109 -175 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 109 -175 a 109 -175 a
SDict begin H.S end
 109 -175
a 109 -175 a
SDict begin 14.96008 H.A end
 109 -175 a 109 -175 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 109 -175 a 1202 87
a Fj(Pr\341ctica)32 b(1)847 331 y Fi(Cam)l(bio)46 b(de)e(Moneda)931
455 y Fh(29)31 b(de)f(no)m(viem)m(bre)i(de)f(2013)3168
-26 y Fg(Inform\341tica)3101 108 y Ff(A\361o)c(2013/2014)3056
243 y(F)-7 b(acultad)27 b(de)h(CC.)3188 352 y(Matem\341ticas)250
644 y Fh(El)36 b(problema)i(de)e(la)h Fe(devoluci\363n)i(de)f(mone)-5
b(da)37 b Fh(consiste)f(en)g(encon)m(trar)i(el)f(m\355nimo)g(n)m
(\372mero)h(de)109 769 y(monedas)i(que)g(tenemos)g(que)g(dev)m(olv)m
(er)h(a)e(una)h(p)s(ersona)g(que)g(nos)f(ha)m(y)m(a)i(hec)m(ho)g(un)f
(determinado)109 893 y(pago.)109 1017 y Fd(Ejemplo)89
b Fh(Si)36 b(una)g(p)s(ersona)f(nos)g(pagase)h(un)f(p)s(eri\363)s
(dico,)h(que)f(cuesta)h(1,25)15 b Fc(e)p Fh(,)36 b(con)g(un)f(billete)i
(de)109 1141 y(5)15 b Fc(e)p Fh(,)23 b(tendr\355amos)h(que)e(dev)m(olv)
m(er)i(3,75)15 b Fc(e)p Fh(,)24 b(p)s(ero)e(p)s(o)s(dr\355amos)h
(elegir)h(diferen)m(tes)f(cam)m(bios,)h(p)s(or)f(ejemplo:)p
0 TeXcolorgray 253 1332 28 28 v 0 TeXcolorgray 336 1340
a(375)31 b(monedas)g(de)f(0,01)15 b Fc(e)p 0 TeXcolorgray
253 1531 V 0 TeXcolorgray 336 1539 a Fh(3)30 b(monedas)h(de)g(1)15
b Fc(e)30 b Fh(y)g(15)h(monedas)g(de)f(0,05)15 b Fc(e)p
Fh(.)p 0 TeXcolorgray 253 1730 V 0 TeXcolorgray 336 1738
a(3)30 b(monedas)h(de)g(1)15 b Fc(e)p Fh(,)31 b(1)f(moneda)h(de)g(0,50)
15 b Fc(e)p Fh(,)31 b(1)f(moneda)i(0,20)15 b Fc(e)31
b Fh(y)f(1)g(moneda)h(de)g(0,05)15 b Fc(e)p Fh(.)109
1937 y(Si)42 b(quisi\351semos)g(que)g(el)h(n)m(\372mero)g(de)g(monedas)
g(fuese)f(el)g(m\355nimo)h(p)s(osible,)g(la)f(soluci\363n)h(ser\355a:)g
(1)109 2061 y(moneda)37 b(de)f(2)15 b Fc(e)p Fh(,)36
b(1)h(moneda)g(de)f(1)15 b Fc(e)p Fh(,)36 b(1)g(moneda)i(de)e(0,50)15
b Fc(e)p Fh(,)37 b(1)f(moneda)h(0,20)15 b Fc(e)37 b Fh(y)e(1)h(moneda)i
(de)109 2185 y(0,05)15 b Fc(e)p Fh(.)109 2203 y
SDict begin H.S end
 109 2203
a 109 2203 a
SDict begin 14.96008 H.A end
 109 2203 a 109 2203 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.1) cvn /DEST pdfmark
end
 109 2203 a 225 x Fb(1)112
b(Dev)m(oluci\363n)36 b(sin)h(restricciones)109 2575
y Fh(Considerando)22 b(que)e(no)g(tenemos)h(ninguna)h(limitaci\363n)g
(en)e(el)h(n)m(\372mero)g(de)g(monedas)g(de)g(que)f(disp)s(onemos)109
2700 y(para)31 b(hacer)g(la)f(dev)m(oluci\363n,)j(escrib)s(e)d(un)h
(programa)h(que)e(solucione)h(el)g(problema)h(de)f(la)f(dev)m
(oluci\363n)109 2824 y(de)g(moneda.)109 2824 y
SDict begin H.S end
 109 2824
a 109 2824 a
SDict begin 14.96008 H.A end
 109 2824 a 109 2824 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.2) cvn /DEST pdfmark
end
 109 2824 a 242 x Fb(2)112
b(Dev)m(oluci\363n)36 b(con)h(l\355mite)d(de)k(monedas)109
3214 y Fh(La)46 b(soluci\363n)h(basada)f(en)g(la)g(premisa)h(de)f(que)g
(siempre)g(tenemos)h(las)f(monedas)h(su\034cien)m(tes)g(de)109
3338 y(cualquier)41 b(tip)s(o)f(para)h(hacer)g(la)g(dev)m(oluci\363n)h
(no)e(es)g(m)m(uy)h(realista.)g(Resuelv)m(e)g(el)f(problema)i(de)f(la)
109 3462 y(dev)m(oluci\363n)28 b(de)f(moneda,)h(sup)s(oniendo)f(que)g
(puede)g(hab)s(er)g(limitaciones)h(en)f(el)g(n)m(\372mero)h(de)f
(monedas)109 3587 y(de)j(las)g(que)h(disp)s(onemos)f(para)h(dar)g(el)f
(cam)m(bio.)250 3814 y Fg(Comen)m(tario:)g Ff(El)k(algoritmo)c(con)j
(el)f(que)h(has)f(resuelto)f(las)h(cuestiones)g(an)n(teriores)f(puede)h
(que)h(sirv)-5 b(a)109 3924 y(para)21 b(el)i(sistema)f(monetario)g
(espa\361ol,)f(p)r(ero)i(que,)f(en)h(general,)f(no)g(sirv)-5
b(a)22 b(para)f(cualquier)h(sistema)g(monetario.)109
4033 y(Piensa)37 b(p)r(or)h(ejemplo,)f(en)h(un)g(sistema)f(monetario)g
(en)h(el)f(que)h(tuvi\351semos)f(monedas)g(de)h(v)-5
b(alor)36 b(6,)i(4)f(y)g(1)109 4143 y Fa(doblones.)d
Ff(\276Cu\341l)f(ser\355a)f(la)g(soluci\363n)g(seg\372n)g(tu)h
(algoritmo)e(si)i(tuvi\351semos)f(que)h(dev)n(olv)n(er)e(8)h
Fa(doblones)p Ff(?)j(\276Es)109 4253 y(mejor)27 b(esa)g(soluci\363n)f
(que)i(2)f(monedas)g(de)g(4)g Fa(doblones)p Ff(?)109
4558 y Fd(F)-9 b(ec)m(ha)36 b(l\355mite)e(de)h(en)m(trega:)c
Fh(Semana)h(del)e(9)h(al)f(13)h(de)f(Diciem)m(bre.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: practica4.dvi
%%CreationDate: Thu Apr  3 11:47:15 2014
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMMI10 CMR8 CMSY10 CMR10 LASY10 CMMI8 CMEX10 CMSY8
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o practica4.ps practica4.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.04.03:1147
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!
% PostScript prologue for pst-coil.tex.
% Version 1.00, 2006/11/05
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 } def
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Created the     : Sat 20 March 2004
% Last Mod        : $Date: 2009/08/27 $
% Version         : 0.5 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 107 2009-03-12 17:25:46Z herbert $
% PostScript prologue for pstricks-add.tex.
% Version 0.21, 2008/10/15
% For distribution, see pstricks.tex.
%
%       HISTORY -> see file Changes
%
/tx@addDict 410 dict def tx@addDict begin
%%
123 srand 			   	% set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 54 /negationslash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF0F096DC5DB0696208F8543514A437E397416E28B11F692521A6C01140D481
213BF1E96355950EA688F3F008193DD61970FF4E5518814287AC06CC61F27C9C
18E9427E1B368FE81FD75D5BF4C13CF381A7861A824A5746B5BCF0A4333AFDDA
5A76A9CE9489F815CDA35E075BBC41E8AF580640B71A0128542B2D4C415360C8
081081030F7311F827F2E102FF958B671C2225375F6353B69484D973F3D41972
BE8816F409C6B5405CAA027C97B776169D5FD8F4B99D381F84269B3ACAB002E2
C5B7793D52695DACE733AFA6D2E14D2F773F9A84225D393ABBEA7D36D018E04E
10AEA759030780C3DE3F13B907CC7A9AFE7DD55A81759AC209D58F697F09BD51
1B557E27F1AD07BB4B125C9A754B9739EA5345330CD3B864E21B271553D85436
024B611B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /summationdisplay put
dup 89 /productdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F4EA9934F170D87D1F0D90CE8F3EAE863FB027
FB5969E37145C8D881AAA4E0464F52F3EDDF47DE80E64E5F88C94AC12BA8B150
9F51BE7C828B8A1C16FCE9471B5CBB2A1044B616C6A566C8D6695CBD9A12370D
1A819D656695996B605695DE8CA4DD9F27860A1F6455296336BF62FE3A14A616
3C33F381FF1A0555A88D2CC01A12AE00463B07618D88455546DF88FFF7022523
118F4BC087EC4C8C1CF084F4BC839D55F3CC2EF009DD15C1E3346B5A91972358
851D25F634BF5FFCD4A84487E9210C65091479C44934B531AA4D88E4F54BEEF0
7BC9A327079589C92F1A718A32859E34B60ACDA971EB0C5040FBB0BF9FF00EE0
07FDD5A348FB7D60AAFA4E615C2367FCA050F2FC5659BCD30958F338B8CD0597
06BE1481A6109D1BAF5736FC47EDFD54C4340F456EF1F96D168467764665E853
200DC81A88FA4D91906B4796C8CC1F03986CAD53986DF47193B4F427C4F7FCEA
AD2B94D71EB820D384FA3FED40980500D49324A2F5A642FCDB35E590F9B9B083
51E48A279F80B807FE935C4D5CCF3286411798DCC491BA989061312565884967
DB038CB06F026D5AECFBDCB6B911487ED20E40F8EAA86B8F73C36BF3E1C6DA2E
60429DE261BC91061BB7939BC344CC642A040C75DD191714BC52278A8E889952
C6A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 105 /i put
dup 106 /j put
dup 107 /k put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA473A1FD2E01CB1197
990EDF8444CC83F1AF738200D6B01348FC84249D77FD2C3792BE507B455AA8C4
8A47C53FF9832AE74389132337E4FEB6F45B5BB29D6F597BA179C6592145F301
A46ACFAB07818BBBF40FFCBD118D4DD0F87D65E1D0E9B88EC830AFE34BAD1526
2CE90D193D88877AE17FF093AFF181232A335E7A2B13520FE2DFDF2600CDDAC6
68C0665D9A85BE2D2CB92AA47DBC9DC58C73FE498C0188AB7FECB942C019740E
545F68F08079FD03A1DEB0AD06E09E0C5C6BE9B73A31D0A70686D49EA5911646
257A9994B419FF72868FC470EDFDC8446F3C649E5E03CC615DED7D69B44C70AC
6623114C86FAEBE972A2A3E0337C2F8845B4F05A1EF6102909E534773F52012D
ED597971F2B090AB6FAADC1AE50D4D8F490674198CEE8A889879F9F16E975704
63006E2CF2CD241C811C235FA634F542804658712C23734ABB8ADA466873DB18
E90A921955AA58413488745DD2B9F194E8FC8B9E732244BA9400BE690B6B39CB
31CEA237008D8F6A94FE92284B7C655AAA8FCBF5C790D105D3EE27FC271467BF
C05E30E4423210AC3201B7F570313C1B22E165B1D45CD850F46D68AF5CFF2E0B
03C20D04375C1F3E99C47D9AC17BD9C07A114807E0BA4A1BE7DD371EECDA5E03
B22A864A3EC022A691162F757538115F3392D8FBE5D49844704962CEF1BD6854
66057943451FC86914F8A5B2135D1997C21F555BDACBA14DDC031A7D97177CE3
5E3CA0BB6D66D9B4F83566C455B73092CD24CBD816D1F0B707A96972DB016A80
D6D5967C23313AD539635D570E5EDAE4869B1B6A5EAD5705E1D7A38C0565D73E
0BA2BDD98AD281D85B146D38B3B222F354A6FB88E306BB1B664EBB0A8B6BE0F8
9AAEBE69EEC4ED1D61DC38A0B67277029D93309A05CD916CFBDBE1FC6EBB45A9
89A64B1AE85E4E4C5547701B502ECCB68BEC8D9FA39AD6BC8D433A887A42FD81
11D70CCEAC3915EBE18CF09FB60290D7B9AC64E4940EE65392E0169247B373B0
0F47E4274BA9B14F45A863A39344E7E4D18051E7697033B494EDFFEA2BCC0A29
C23CC7E30B497D752C5E4F64346E6A684A9230ED34600987F8ABA729D8D9600B
635EE4AE36E13948BC2AD996943C06DE1D492BED04DEBD67683829C85A72C022
21ADBEB78793AFE0DBEAD8C08002E740F354FF1B9A1EDD30B76C5B46B11DC419
34A65D479AF0E902470B9D744BB7DC97112FB20B75CE9B4837A76D464AF4D0AB
64D172B04C60F6B73DF508480417265625A71AE9E33A3D77BF0EE8923C802A4D
0BB637
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LASY10
%!PS-AdobeFont-1.0: LASY10 003.002
%%Title: LASY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name LASY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/LASY10 known{/LASY10 findfont dup/UniqueID known{dup
/UniqueID get 5011949 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /LASY10 def
/FontBBox {-19 -192 944 683 }readonly def
/UniqueID 5011949 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name LASY10.) readonly def
/FullName (LASY10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /a59 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943C32EE4E8BADB2F86ADB978E
619A13A5C67ECEA27D4E62CFF3966D3A4E0A1A6176EF98B80B6D0D058D40E65D
5E926884E6087D7F3DFA72F7D84E737A7D25926C41E8E7C41B199ADA56C9990B
864AAEAD220BB05DFE73EFE83F295D8DB124332F4D4D784AFB2495C7D522C46E
DCA9744AAB2E9297EBD2DC3F3C303B0FB7C1335D948F7E144108D893525D8F7D
8C28C202AA4F8E55AE16CDEFB45991408E0BC31F841A9D8DF341ADD2E8824B22
C2FF4D706DA4E44CF2DB67FBBEEEC5B55B05FAC2E707EE02A6092012C727E7F9
020CD04D06B66770C4E12B5BB23D82B187228AE3D98936D2CFDF56F1786D8C2C
D06697D220F3438AD22AFB7636462674FC6786B63944F3FE245059C3997074FD
3E7243387FEDA4A96EE92627A8E926912F81026E2DFB827897F1B690617F852B
637B46CCCA442B679D4F660326AADC0838153B82EED447FFAED4D402DE4302EC
8FCA18CEFAC9357A529E31602EE2A57D52CD45C5456F523FD87705036575957D
08B797B3EFFB97D4834D0395754AB3F22D6495D2144087D448616FA1E863855E
B353567C05F9D644DDFC8C8164382483961AA43A81FDB622DD26D4047E861804
C55C760CD1EB2FE7A66491C24D3EF88AA0B0485341D142B1CE5D260D902A50ED
3E39DD9A047AFD3DE8E557D2A8065DF41D9B13C5D7FA1C345748A744846EE054
C313FE21BC148A68787F7FDF346286C5C2C38207189C0CC2DE290E15C1259463
797697899D4874B8467D7851D5E046828D9E7CEA2D3AB65AD9B85A96D7322AFE
B40D805A31F7B9DCD1030AF29DEF3692AF46D0D174215256226653C90D944B92
94B2C21E9ABC75E6BB0CFFCB0A927800E7F92274C9BA0A6EBE38E561D108E05D
64EDAE07CC1C8B140415D905EC7B00FA482BEFB1750AFCDC3BE78470F63124A5
4B0576C1BD511D5B9CA5798FA938749F3F90C42EB95E7D642CDCFF934694F8E6
143EBE4677F3C69C45BEC539B234709344EDBEEF51113D7AB747AE3925D85869
FECB2948FA592BD2424924DBADF52B6090BFD6552BC772958D27EF296B52FC59
67427AFD674CED18D97C4AA4C708709577F2A195AEA9B94FA0525682C5F055ED
509ADBBDA22C318A983C61A36D34859254A715ACEB251704703A25C868A8A3EE
3ED1E908FB4862BB98347DA98CD2294AEDACBAFA2CF16D28C2259F74DB616DFE
650EE129655BA176D094A8CD729BAA03175E2E4552A82713BB3A72ECC0409BDF
3730E3E59E27A9CC0A5E65942000262C4AFC61A70052FEBB363DB7993DC2AFF0
E8BDF619977011C5D3F2F7DF3B1113141FA0231AFFC95C3A1AF2B76BC627726C
DE6B36785E25243787632A4E494EFC538D47B4D9E566348DB6D7CEC4701AA16F
E0556F16F8FFAFCAC0C48CAEE1F17A4AA50C45CA5A402026EECF289CFA214798
AEE85CF9E1BAFF93A2A2E70CF33FA223AF56659D418B72940E82D617CBDB2E08
37D3A7A4C09B3F0C96849BC68FA6710098C6FA7A33483EB20DE8538EBED6E469
CC5E987B77B87D71E9F1FF64C7C45D129762EB0F4A2C2F102C70BEACD1CD6ABA
43C98A4D8AD1C91F98E9CACD8DCB4CB70BEB992F74CACA80C2CE885DD191F62D
894638AF714AD95F313A97FE77BBE0FF326771975A13336A2F08D1C18A770B27
89D51894EFAEB90A9C69CE5ABD93C2AF712116F2751508E0B1AB41BEA2F6C5F7
0B3D85F1D6140C6F15E6360260A37D726CBDAF1C18194EC919298A3384D75393
9897703907AE86AB72DDBFEE565614747B0A6C04AF9D26A8AFCD7D234C7EF261
A494B0FCBFE60AD5C110612BF398E2DEEE6F83698B35AE2D42B5D4F03144DB3E
B97EAA71EDF36492D265B92CE58BF2177CED942A650F376885191A78ACC4169A
23A137D4AE920FA38D27482C9F1C19B540E1FE096353F1855DE3ED9F77B23D26
DBFDA239B33B51E8DC02A7BD8028BF973B0F210BDD080351D536CE4BBC9FD837
28B4A4A1CF3CDB3873BF4F96483A9FDF482761006B2825A99A448B9700C2630E
504AD0C7F98DA3A935546CF0CDBE44D06A765EF5182A2DF1F6ACEA6CB85E47F0
1A34DA34071796F6EC974B0F7DCAC94F9E20C04255C34A2F67A5B03E25D93B3B
92B95A41B7BF83C3E98402F660D8384F73349312D2FAD52E679412289B557C8B
10A952507B0627752D09BEF48B2A8926211745BA77A184ADB19FDF0215F52DA1
EAC26AEA4A240A1E1D778BD4A893E3E25421A999A746D70F49503154AA1360C8
15CF7DBABA4C6D687F6448340AEDFE5E7DFEDE604124A714F7B8171DE5028BD6
ACBB3B71A6740F81B45C0F7E2698E8C2FB0F42A48AFBFB9BA03522971BF5F310
5C610A1424955DF15B8D1F4147DDBCFF667F1C371CA578165BC6843B761AAF72
9818C5537B481D1FBE3E651B3D9637626B8D83139FE7B58A52D2AE3640E7870E
677B39C11EAA9704EE7C2C41BDE43469A424717860369F4F8BB0B28E9F9A082A
EDCB4CC9EF45B061122E6E2EAA31438219147070733735E7592575DBB4357DDD
AD47B273C471861CA37F31556B79773D01D771348A24552077D0B63B3246E3F5
66072EAA1C9D503E94378A5D52F882663A34DD2208E4BAF2EC48841CED64BD41
C6BFD0E42D699CC869AB21DE2B22041F72E1BAC7FC5D75BA8A569DCC001F3AA4
782D041EC9205D19461CEF8B867EB42AAA11D39F1ADE4DD0BEF082C694F6B7F9
481118450A94BAA2DED9DA57E70210E41C13C5E986904CD69E6294619A926FD2
C9520320AE0660EE4E3C11AC3D60828585F0C94E07EC2BC41FABA6043E4F76DF
D2D3F3F07F9428E2D0B154DFC555419918CEDBE8E5D0BE456056DE320DA8EBF6
F80F27866CD8983F4A175BD20C0A1B06362A62B47EBFA7DD7A14390F29ADB17B
E5BC276889942ABF76EA0D8BAEFD8B8EA9918F9B48593218730B5EE91463B088
C32993378510E9CBC5E68B44987FB4B9C9149BC82A63956CC622E968E97DDDCF
BE5CE6C1C98561753381859B0C1FAEFFA05BAFD7E2D1FF67D183CB1AE4AFA600
8D93C52058D40090068ED4DD464F17B402EB57907F6355E5402C407C86F02DFD
4CD994F17DC48EAE1B759B65783F2FD9ED3AACB0AA8A5D0633CC7FED9570EFD3
75ACCC6F1CABE01AD983066109E6EB3B2B88C2854389904A3766189AF3AFCEF7
943BA18EE45F16CB13577E2454AF478074E1891CA9493612E0D0467AC7D9F941
AD62324144D7E2456B8C26494B200464CCDA045A7E8E96F3B429E5B6629C7037
931B7C5661B0D1C6BE5096303660C55B7A2DDB59206BA3000F6D31DCFE816E3C
94BA8C778ED3909083DAF6CAF010467C8E291FC7F4D8728A23BA2A5AC6704C4E
E6C0C48E230DEC3BB1B00E40D7FB944CDBFE44664A8B0962FE912C392553F5C8
4E59F531C9590C19B32149D7361A37F03E1EA971BDF8F8E1356912FE23AA0FCA
DE524614089CB51DAA76B17BA767661E7544390AD07A8E827CC250BC0E36BB07
77F8FD5CB13A0A915BEF9947517E3C60CEDA9EF81282FAB01C65762FA801A60C
2F1A4798E78BB5BA701DC49C05B3F9264094A2C3DA81655CF67EB76245275B68
EF18B597B896CBA357F74AD123796F5C6644CDB5FE466B9D35728D8FC092BE5E
82FC73B9E42DF56B40A7014A5C0E4A605A68DC8C2DD26E0911C4C9C5487083D2
9E4C18B6552BAEB134DD211A708650CEA939084BD50957C59C65D176D772B9A0
346D4D6179A83D4AEDAAAF3A713EAAB2892F5BC5EE34D2555609867CC2260956
77AB34FA284E50A6036CDB8C4FA6462BA41DACB5961CC6EE0B14B65766431489
0F5BF7C0747BA18398C779F4EDAA1557F21E501FFD574652C5A1D97D21A6E441
128E4DDECECD57028CFEEC1BFEAB376F8B8A69CB8F3B2B29D2FC46BC486468F0
BE8F1FC2C5ED90A4D317739C0759C5F26CDFB5FCE6588D381249448FF2F4ABF4
4622A7ACBED487D2CC9C10ABAAEABF38AEE4D25AC5FFE791DDEF98C4605EF67F
DB1EBF9247072DC5C8503312423D5C017CF065975F1DD3F1D1AEE9061CA406A1
444570B648711DEE1197C8CE1D9A27625E328A3099E3B98BEFD1513333A2F096
1C9D913F5A909BB9121527A3CE23BA565A84175B85A7CA17E1A848321152B5C2
929F350900CBEEEDA790D2FCDA520FF328B5826AE2D658675C451A20F9DF08F8
C4F38F5965239B0D1597A87326A2416C56265E3407A9B00F4BD39032B10A5A18
A53623107B24702593809DCE75A33FB6A10E7F82F1A15C84DAB8824645D142A5
62504AD080B2A36600B07C013D9164A3ADE3E8DFA4F658DFED559B3A2E5AFA5B
40C09E12F0523A90EFEC40BC1C2C427A43FDABCCB5348B1DAEF51BBB482631F8
86CF200894ADB278F40ED305E7FA40CF51A2E4736FD174F699A6E26FF3E80CB0
5A70D6B0A9B41704599EC89276BEC937FEF78F62C36F030DF5936E12ADFA4EB9
8FC8D742D2A1178C1DD181CC4BF69F8F533E66FCED7585758419EE2AFCB0D15C
E5A5064C7258F1DCDAC6D86050A5186B4B451649D62E34A5AD383010DBC60A2E
EB071084E27FC222F7451665818379A0B65E7CD199A67B8240D5EBDC545AC45A
1DD7EBAA7DB6034D5754E55BD5C05E17A50B7097B6A36C8A9B56B07B3048DCFA
899E526B6C43B2C557CFD65548D1BA3EA2F2616973E1B682D90C1B42AB821FD7
0608E0467F0B12DF3D902F997F7CD19B28E595F110A81F657CC231D793B6EDCE
D5022690A608D78598CDCBCA416F2BF5C86B6495C5C820757C4743F1464B300F
47EC054EA29215AD2F2F17F55AB920169919577ADF4BACE5695986055FC4730E
531FE82E9D926B1B03A8C204F6FB4A391C94C310E6D5F2F53D41BBDF76848CC2
47C89D4CCE56EE40FADFF0FBB48804C01823A8A70992C265A469576F47CA3418
10FFC1B8B58ABE8EB762567DA328B25BA9D4F3472428AE0FC180543D29B8E437
6D7EC48D25A411991924FFC2DF520BF690A7B08513D2A6B42F2AA51B0E3E5F2F
6FD57E63BD1736482F303A13D6E0EAED1761211598B1F2AB26DDD5D45ED47717
2287BDA7062E8AF61D232473EC060F6831A225E0AF2E6A5BE2D8604384359C53
F880B0A503B5DF5C98D2D657D14663906736B42A24D1DBE55ACAEF4C5058DE5A
CCE069D39746488D6AA244BEFE1F32D1BF65D0EC3FADF515EE45E672AAC72040
A1E1065DB5A52FC889E1650487BC4C7977D55ACD9D726C74B6249277B0DF721A
DB3293098639658F6796F7A012416C147C694BA55C734A527ABA0C9E6363C2C0
0633058B69261961658CDC29A477784C90517818017B6BF89580BC66BF157574
90F131D9470A323287091DF45DF490B19328CCAE434A9637E0E7D3A63A418989
384C98463294D25CB07883B8637AC81657A0AB17C4BB9891599D2B8398DC08A1
3B73A2DCBB9A79218C161AEF14D238A08D00C90ABDCC18B11AF05A54621B1929
4D09A4B533A7F1D4F0BF2E637BF5E72353AAC5785828293988797F37B8F14C7C
D165E8587E48A876C96D701F464383490DDF52FB12DE623F786F13D9BCF2D5BF
BBB9D5A16E3FBBB5E6A9C34494FA3F6DB81C12FF86521554113D1AED9A894E5B
E1E7225A9B98D4980AE902A8DB3DF1AB5D48B334C4476EE4FAE42C2CFFFD1BCF
D99D82AB3992D3CE1F8642FCF7BBEE3D5840F516EE8F6E87B5294DC8BF2DF4A0
B7A380CF7A2BECF45CE0B0F8A996A463E6193879C8E25724BF182AEF116B7FFE
8BF1A1C7FB6FEDCA86965D325538AE1F2863A49700469ECD3BEC3D75AC255984
373E4A5A621AFE445A10B8D97EF1BCBB61263A4A2009650770801C386AC6F95F
02870DEC62FD6C556A084FD4C165AB0CA52DF2633B01DCAC757F614FFBE09CE2
17092414A7C0FDC43FB02DD311A700632E594A67C9F8D8CD037020C074BFE241
68E810C8804EB53F16CB67ABD8C9F99F80D65C981C4221E857378C4EA79E5CF8
8CD53B841C2CEB7C58581AD1C3EE79FF6B07BD35895A8843393EA65FD48BD248
DE0E7799845B1B568189EE76445A58E142ADE3CC51747B8B97E031CD51E90C75
880B6EB5D7729BC29EC0AFA8690955C4AA5E809DE62E0AC18C5F1A6FE5E5F767
B70C8DC44C965E7E2E8077938B4EA3CEF119F7F824DAB88946A3BD00FEE7D8CF
68B5A35614F864473C24A95F13C7BDC200F018B5BD313629E0BF5A5E35D0A340
00BA338653FEB7040C3D5A43DEFC7FB25999A596BB7A701E8E03E8D3D35FDE11
BC8421E8283EBC327F7C9F6D457E573D073755A97EC24BCC4C33D93D72F62790
E732CE02320F8D7B385DFE2230418B1E70AFA7DF7D83D7E04A2F657CA6C2410A
63F9B45C562B7736A272349BBB18E462A02BCF7CBCD049B2FA692445C13C4B28
C1762DD4A632CD41A8196DBB26075B7E9708EA316266289D910151A6F7FD5F47
55E7A41DCC3AADEFEFA2F28D241DC4D70AD828E18F7541FAD3C51FF4938FFD04
8E1EFFA5A6E443049FCA2472FD9CD0D300A0AB032E36C43ACE958C75B2772BEE
E4327A53F279FA49DF38E5A3BEC64EBF7677CCD8EC1B972B65FC2643DC5064EB
8A66A777124B70F2DC6FE62030EA59CF9E328396317798C1074AF49EE9698EC5
B3A0DF1112669CB2EB0E2B6948DE7DB4B136C23C5D0B2DEB49808EDCD5A3B68E
161ACCDFA41C8FEDDA50942F8D2E75ECEC36EB127AA8656B0EFCDEE65748D322
20E16F296B8D06AEF513E272CAE380EC17A1A2B0F235FC70D479A606B33AFF70
D324C6FF178A38DBFF6F2BA86115FC2B7237BCD1325690F655B912C30BC069B2
0095279D01D4AFDADEA0E9FBFAC0B22E60E377515AF3012FD9069DE25DC4FA52
7AB6B2EA9CA5420243D815C95E0F4D51FD84FDC5341F20BA6BF1520C684788BA
2801A7CF3B95932EDB3D8693ECE35D703666A19F6348D59155A89FF25E119B37
D5AF6635843E4FDCBBC413F4A6031F4C615AA55A257FDF806FD0CC1A65FC78F1
427DEDFBC1FC71408978F46E3F32E8C996FFE6AB284538B37213D6B88AEA47E9
9DD73D9AD4369B428EC913CBB75FF2BED9D9C51701D2D0559632530D6231586A
667F3A530FF2F6227EA4CDC10BAB9FE0E313D378C933138BEFE6D0639DE34F45
A5CE2049F5DB6E28A70246877C55DDF2079FB885DDA5C02313345CE0D2373638
BA9990A6911978264D314CF74DF6351757EE8699DEECC391365AFED7C1329813
024B3ADC3565E28D754217B5B1EE6BF7AF11791FC1BEB8E6835BE35B05CCF299
2ED7EB12909C9D10E89DDF362036ECA9FFDA4DCA0A6B1485F4C4B8A9BA588C70
8DEE0286A83FBBC77B9E9B8DEA69E54CD7DA907064DFD9C45D3CEA56AE750349
3D5F4BE359D3F1669F0B4722B2171811C8C58B922FB5A692314BBE92730DD235
964A7CE0DA5F79507D659EF04BAAA9ED372D08CA888C6640CDDF10C3811BF967
9C6340418C89C8A56E50467C11FD1BF7D7A58A97F117F511B5BDA0F10AA18F32
C4A6A2B7AD54974DA8E693381243AC521BF222A8CF93A087FCA2CBF3C036E803
B2A5FE026072BDEF9A6AB04B50A9AF0BC78CB24EAD3C4C6C1043F6701FBEDC2B
16C73B0220B1226E8CF1C4AE76A77D50A4F2FB0D95866FC447A648A6E9548113
4C882B3CFC3CD9CD8BE6B0D25A1CEAC0E1CA4591E98EACE52EE14B5FE74A4A72
9CD3E5580A9B0D0473AA2ECE3C05B9D3F253C0B613BA7CE0AC4D16FD02C19C53
6AAC90E5511DFABD5837A3B800C49239871F61F40EBB75EE3024F37818ECDA10
6D09D2647CCC4E6AC34F49B8FFF4238EDC8441F3D1D4C3FF4E50AE5282E8F13A
E6FC9A73CAC242F862726D530EAAF7C20F88943A5D20C4D45F80486CDD86B71C
B3ADF8F09D9BE88E641BD18215AF416609639E9BF4589055983CCDFE7390962B
B7A2D65E5D1F65296D31729ABC87E712A501A69274FCA2A68BA478D6699BD5F8
E92796BC6BE0EA66941030BD6F664795DC782B0C5B8C447EE75524210DCC064D
197C2BA2AC42093E2C579498084F53901304F00D92734E33AC45C6F82460B1AC
A8C564D9BA901B81E8F7073A2338203AB1299AF88E1EE3986FAFD24274B9D519
C843DC8CC73BE2FDDEA85AF318972483E54C4156A9621639561B40AEBE071546
A15198766EC6A3A3E29C1F563871AD2EB3FD63FAF78F67156A51A0EE843DEF32
7A993F9CE35E81924829796723A509A4ED74BFFA593A27487819DABB918F338F
F5594D24B588BE65C3E65761C9E52F04DF3D8EC76967FD99CB4849D66CAE18B3
5133446A85475330700E33019E6E43B5DCE9A9A73AC6BBC2597B607A20525BAE
CECC48AB6A71CA6EBC0FCBF31B8E2D3EF53C31592A45C9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E70A7911CEF46D4A4074EBEC25F55A638011A4E0F2D07A01A042436C62962A50
973F9AB79BDDF1747CA2F970953AD5128331F2715D093DF035D882BFFD0E0C65
4D9E97727C8B4CC50778EDDB5E0A210C9E0A9B95B37EDB25A80BF2A045583389
847B65D114CAFF0FCF67585A6BCBE22DA41D479902960F7C0D013CCE81F60F3D
DF36E91F8276940F08464405DF7352069A414D615BA09E156C449C172832EA2C
E38EA97B9A576B444E00C0B19C9E751336898EFCD4847F7B5095BACD95228E1F
6EDD85621B9643624E6CE80610BFB320B3D0914BE2359C910FCEF969AFD599B7
8545A1AA4E33EF3F14EDECCFD82F9975DCD18BC1B687408F072FA39164340543
5A09C1257CF81A066CBCBA4B3FCF3BC8D6A3496230AAF1232518D07135C7823C
AC45513B2A9911B39603B415168A1FFBED834B271794C994A3F9821E4E9B9023
B08C7CE8D31B5FCFBBFBB71AE71A47B9E18E48F5BDA5D89F2EE08A2784F150B9
180ECCCC77586E39586DB7CB534D1806D9A3A0D376856B2036634A72710FC8DA
959A66289DBD2D073A400E7CA0B870EE6EBF02A0707CEABD8D44A32F85209065
B61A9E7C56EEFE751F19938EF2050F231708623163ED2DB636BA33208269330C
24A4E0B645E707523349225E6B8EB758ECEDE8173B87B4AE6A33F17030AAA7B0
A2CEB87A0360124FD1504C60DE14C8EAAAC52FF900289981316BC60E07B9A6F3
40CECD891D8706212848304E170D27F17330A29CFEA10E80FAA7A0837A0DD1EA
D10B0A7A3F70DB740709CF3330E44DD04F6367E04C3CBB3400BA3C1943B874CF
B4B611D58AD532395FD31FDC361BBAA07179A3D6215C9819796ACC66B0571229
E5D0EE470B9811A0F3B2A4D09B78866901235C66B0B7591265D226C571F25415
55DF310B9923F6206B6845D9D4835F7F36499A9C4BC39F35AC5F1F4360654A09
D9049D73DB6FFE7FB882642CB8D369C6F870BCA1E1753FF36E4D58E1E10A9648
D098A3FEDACD1A2C502230FCD961D0CCA425E6DED4A66CDAA69C13C313F273B8
54D4B38FD38C1237142EC3575FA9E198685DBE5378D15F1D89ED4C66EF889DC6
EF388E0ACA13BD96CF64AD87EFBD2DFFC55D2C530DF2AEA90187FB00EB3F50B0
752EB0EFF7BE8B680A28C13D4D3536689800D4501AF3EFBCFCAED58C6704095D
4CC919ACE44690D4AAEBB32269769992CF0B72A7D42CFE4B88A6238CDB046CE1
A91168DBE19ECFC27B24F7E4734452BC5AB5E1603F10CD4788E04C5ED21EA984
38FB7B67D90E898195D52E847B341934EDCFC344B43878CA604A80871A0F30E6
DF47D472027FA2669AEAEF21B2830876E2AE5CF330F372233247DFD7F551F5DB
0B265FDD57193B8EB073B2EB66F90C4EFB31D4CDF9BAD48A368374C92D116143
B79CEEA54970A9B8A3EC87A846BE643FAA0D1A7F988BDA011ACF2418B7CF3CDB
2BF7D633F0ADBDE8C80B75BE77ED44129FB709BDA15CB2558E59CC1CE5A628EE
2984BAE63D42772A0254458C71F3F157E1CCFC22A3B875D102A88A03A5801002
B9CA9E265C3F13054982EA8E8F6E46FCF583ECE83495DBD5FA0B3F0CC8A8EAF7
F1BDB3BDD06DFDE3825B59C562F9A2107F35F466CD419C16FE23A97974351438
451817BB52E8A5E46CA93C84D231331A7D95E9674719207838B009D75E8DB781
7D24E63117DAE0B467F3CDF0CD5848B7AF39B331D8F5FAB31E09811ECF39758B
93997C08129C96307768A10AAE49EAE00BB8F7218C8AD4B0569F639BF4549D29
4504F43806377B89BFFB2B3799DF8158FF387F39A973439FE2E282F12C510289
99117F1997278649EBF80DCD6AA3B6D481FEEF16221B4FFA77AE2106508866B2
4E2A2E011698EC036DC452D8AF5335EAB48FFFF891FACBE17BADCBEACD49DD9F
C36776E3E5E58C6EB2350CE3B1F6940FD7C92643EB7B22FB90B74C6501EE15E9
4DCA01A0531649F20A4F6FF5A78E8B854B5D2C73887D0A33DA3754FB4CEFA697
BD7C8DEE437FB938EFA067788741064FE32D727224B057639101AACD02D50771
8A92DB9641600A4ADAC2A5259A4DDABFAD90AD425FC360F3EEE3911514ED8423
52E274C6FAFA4CDFFF1788B4F9C778C9202632212542A546787E21C21EBC033E
0B17F3F63D5A57CFAAAFCF520947222240A7FA1FFF52AA65E09738AD2C7346F7
43C59E5DAF797281899C4477B20DE1A7263095931B6589E7E6CEEA0613665417
3009BE793AF4598A0CD669D7EB51C6C072141ED95BE57F463D35C6CCB3800612
6FE423D96C6F9EC1FBD193F6EB244B924F15F12EDCC1EED844D48E34BC385780
06A81DCC610BDF7F70E80FC0CF7E40CD9887E478BAC978C00368B0BA42D94533
B8EFC3022A680B493BBF07519B0502EE33F9B38B23A0B3A27EB8312031E9DF65
C2FBB258E0A99BA219D7B463F9C930EB65265DE000B0B3ECC0E2845EE271FDCC
D8714B27047D7A78C78BC1201520AB77250A9C540E447AA0C974C153A1FD77ED
C834636108A040FB4810552C024F58A2C18DA56FFCCFB13355F0BE180C52E51B
61E4220872DE26AB585C11A08A3EFBE264C8AF473AAECE78507EAD83316D00FC
63D1C04F446A674C1470E1A71C29CE5575769AD12A457CBFA5714F2AFCD205C9
9F4ADCE9A943768F84E8898B24A6C5FC8229E0353B36AA35FB4D2D9158998B73
47EF610F3D069D655D64E348B33692A948E699FD3D163D7C748373BED7C0D002
545F23784EF80F6BC35BD239BE34C35932DDA5286D5CC8AEE103BFD9A86C197A
29433A2231F2B00AD8C08949CE7064A61B70F9189586
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 20 /lessequal put
dup 54 /negationslash put
dup 56 /universal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC4784A97D5A8F1249B04B949EA49CE82498C9CF0E72AB1B6A29
CD235A99A72019D29CB8C5CE21AAD45E0DDB18E2BAA3766D9E544286BF1E4AF8
9319F6B060A9785E543F75CA0E47693F237C7C4B4AF0A43B2CBBE2C0E8EF1A52
E7E50AE889687EEB596903A3DAC04B864403D27E99089AA9411C22AC565E0B1A
0B6BF2F41ECD5C2CED3A01136381CE7F27B8E9F7E0D3687F32EA35A62B0A2C57
E01204523A1FA899BA9BEE3C30EF34446C2BDF5B410F585F7500106390169389
1685EC418F2926916FB30966FDE4B5E704766BAD0B6ECA12898B7AEB0C55662D
DB55BBF10D65A178D06081FA5318A91D1829E1B36630655E352A73817167D2E3
CBB85D22090F024C25B6B3D3E5985519B57D93E2F88E5BB6101759C4443E6F1B
FD6DF31634695128FA05BEFB300DC80D95AC38EA92DEC4552D4285017A1D8F18
AB27561B05A2048535A3660EC59A1D6C86EBFB6CFEA0CD444C737D1A7ED1C8C9
36017ED1EE9EA9F2ED2788B1E99B193E3FC6F4E56DD3571FA5DFFCC555A36397
6E22993C86DAE126FCFA21B0AC72213665E4CFB5C4F31857E817198C60489D95
54093C4BA6941CBDC278A7398ECB34FA1A14599BAE3C44D8064A88A8D0AFA990
0217D93217320771CD95B920AFF9E627A8176E1AC9B1E6B949ACBE686BE1C781
B5EFCF2AD1982F7C27D92DD3002BF3220A67D930C232FF922BE5B1A3BC896403
A712FF73A90ED0ACD523079C8444DB7D3BC120636BE94A40CF2297DA26CD2E52
CC1F7074B047B3E46B56E45AE0BFF262F840023C06B0CB8DD0913DEF3A060096
47A92497AFDE55B6281D9EEF9708AEB841C23881015EF6D1BE78C47440F20CE3
87466827DA04654A06C0CAB4197FC41200
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DB0D9D5F76C5C5A730FED59C1D9DF5D5FBAEF7A48A4C36D6963515A43C
743589C85EFAE287122D75543C4D2C674E40E612FAF47F1FDDB27FE8CCA96B6A
1BFFF85925827C601F5A7D65931A97B4DE824FE201AFF641F2E18A6AE16E0ADD
D3E2FCAE04F092E9252D49E836DA1725CAA0596610CFD3DD8FB0C8A815D5384A
9B74188DFB4135AA18AB54D6F0B2D2CE58B70B5143AB000FA771CC7480E19E00
6ADF59B0E292178FA07A67CDC2804EA744A860281C7B9CFEB533ED9A4EDB3CE6
3C8C28724B202942541B31C438DD113E0C02DFC7506006C49D7674C84856DB9C
9140530A87CCBD88024B8BF7AE85B6B55D6E4FDE3A43683AC9DE7F30ECFEB485
4D504A363EE2ABCB56806F08FFFD89DBED8C6EE81DF1D562A30830AA0432C38C
95806CE91A678CCDD76629BAE8DFF404BD5BBA25C5606D8FD42CF3F49B9B778B
722610421424B269CAE6BC5F1178654F9505C3DB667219852608FA89935331C0
AE176613053F0762442E323942CC8BC1483BF2CAE8A90D2C1EEA9A0763C49751
6DE6ED66925AFAB2E3DA750E4EFB6AB0247B620F3A354837E99BFB76491879EC
78AF0EAC59509797A17004FFE18731E7557513257120412A1C32B1F578446354
78B5C98E0F87C512F26DEAA8CE1E6099DAD342BDE454C4D6430B9B421EF17BFA
04D5FCBF04978E239327A83D2A9D2C642FD776A46D58DE1A368A6B693A52CCB2
EB537F0D3BBE2A9CA2BF2BD82FC865385781B9293FA544DDCB42B90B6DD4C463
BD00837ECF8A981FB07C7913308780856139AC254B5012DDB1F0D724407B7F40
603BA2021AF4844C397D8184E4D8DEA1712C0FC63ED2C38C772723718B8D9241
B6D604347A37A4C6AE05D3F16B70B9909951D9602B59776DE9BA5477BA408431
CE73402AB9DCE4FFDF51CD99D0D864D67C8B6DD7D854681DA006B3EE4738BF2C
C3425B13A96F90EE9F37DC1097AA7D9DBBD6BCAC2C97D13C7640748567FE7284
2C36987968434EF5BE5C820EADA0409CEFD43A0457462DA301D153A066E25AAE
11829CD792D7AAD675EE83A73539C7549F112DB16D5BD73918AA9B0455DB5B19
8C694B8CE0C1BB83ABCDF1D92887013E3A43E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 76 /L put
dup 88 /X put
dup 96 /lscript put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455596FD630BF9FA4967FAD0D848DE7F7DC36D8
B3E4AE909CF3893CB2E0B4C75AEDBBA228A6153D8E14CF85D69C13F84CC37AF6
D05DEE8D9DD494595AFE735E87FA1D6780C1F84FB83E0A2D5086611075E3A016
F785A92DFB5FBD099953805D03ACA6D23E5EF556554328C9BC2AB97C2982EEB8
A8DC00247C0778E947C4EF7D042669C7D5EED03CBC5245BFF3CA08418D9532CA
DAD907076117A8072F3F7AC69D1CD266B8F48AFDAD2FD3E6379B9127298FFECA
C3DCB561BAC5FA27C0A0A8FCFA9464AE6EA2E0D0B4A92E511BDC9AD9DF4202E2
F06CE745120B01210134F1260A78EA1708C466EFE5210979A18FAA7CDA59EF80
CA35F78DA8ED4CC33DA0B162AAC8376A4644DD21BAFEA3B846CF397FE3E89C44
0E56554D0925AD665D29B2EAC6FB4A789EB88FDB0F871A9086B4B62D4FF2C62A
3CC0985B791E620B641C924150B59D617DE5C5E3B75A37E0F9CADD6B93A5BD55
87BDE565BE6F32A29F4F2743A0683B2A7EA94FD563EEEB85C8B673CB6EBD3059
1E2F8873932EC3E4C19AE79D935DD1741B08DF793CE472D42FD8C68250AE7328
7DC30679DBE01E241DE97CACE111E0821514BF96E5932BFF0126D0018E2D3310
4C4A6058CB87A30B0C5ADA08F17398FC99B52E43831A8A2559D0A09A44296813
99D0BC2605D75DB17A61B6597EF59D3C876D8D5F223E972548B12D475588C6D6
04BC34EF4110B46C3AD0B531C2A851B1E39D4781F74155288F93D8F8848D4DFC
4C5B4ADF0E0E032BFE7EEA5EE503770FE38D45DB6F6B5B10847AB5CE03EF06B0
2C1A6CC92B290EF896D3353846883C29AC4CFE37AB24D326CB8A0F89E2EE15CE
C646705B77F8C0EE459510B9C74EC6067CA0E609B6ABC6181C498CB622D17C90
DA8C182D34047A56C26208517676B773A4FAC34797B6A72B22B26D4AF115723B
FCF3573E575D64463A15EBD845A96ED804952D58CB8E871953AA1E78D3050CE3
C83489ACEE2EDDB4EB2A7D7E36B295B2E489C6DEA1204D87B618387CFD4FB757
B47E5C68CD9C9B3108487E700DEEAF8ED4946D0023C9648CF5540F89DC0E0056
584B6A8ED7A0857615B0E45034A01DA88AF44B1F22EC7585C23273129002193B
F4B356291B293888993B7149051F61D89BAAEBE140EF9920D4822AF58AAE2FB9
40E28D9AED6D165365A0FFC1B55A47C5E8130F0C53B9C761AAF748B8D21AA723
95E7FA42A846439A1C4FDDA5B131F3A579512FE0E3D17B5B0A5F0FC10D029A68
1B80F7A6BA547940A01C5B6B131AF04507FA779B881E3282CC21ABC56DD02A3E
94EF6EF202366F9CD6B6F009DB3D9244882A7E1EED592CD0DB2D32BBBA798A25
78469CD48ADA124479B7205EF81BA66FFFE7E90B7F44D0A676E4EE46EF5AA4B2
FB18388F6DCA33655F8E748526A2EA93067DDCD538EE961BAEB3A73F1AA5B8C1
A3A1A387C54ABF1F4294C9C4327CC21F3DE7B8721DC0FECE969639BF2C227E8B
66A7141D17B00EA3DF126B09BDC52327ED9A146F5E4A1EAC9551820686AB1252
9DFDBDCCF9B63EA07531A9B6C6755683DF6797E6A36438ADEEB109A297DE9CB2
AAA274D3EC94366223A89A5850860B8BE14490FF39B29BF522CD339DBBEC64B3
C4E7EAC31A032A18CEE3445DEAFC5EDD91195E4AB81AE4DC1E317D4CEB71D6E6
6FBA4D036C517CAE3D8BC906D08149E3E2B675DA65E43D499B7AA72F5327A95F
D9FB4A0BA3127C474E504A2E35E8A9A25891BF786FAC7B19E05B28D8121A2675
BF12FBE53F160CD0D4B9A34A83EE2F720E0632D5ABF0F7C45CEE67F84452010C
39C53DDABD1A79EDFFD6633411FAFC319E1316C8DF37DF07F429AA8E6D03DF76
9231BEF890240C606276C6C6BAEB83D716A64E6CAC7BF361D99CC7CBACC309C7
7E811AACCB64F02E9024BE20DC990AE8C9ABD300160DB63203578BB1AF46027B
67507BE920ABA424E2FF14301AE139F363F4E733AB6D103B96BB283749AA51C8
DF1150DB350B03F90E481946A7B780A14A05FCA2C19DA71D7FD75484146514A4
AD026279E60B5D3F87A8BDF66C586155352D2E54502E7E1C48A307A83874B5AC
9AEAFB407AFBBF61C28E5D6B25D76FDF0DAF7877F9B2740C1F31774F8EBD9EC6
81F76664B0573FB64C0756E3586D3556E44D9C8666B625B7023C16BD613D1263
2218FA77931E5ED4BCE66721BE32FC67570CB46B879200C0215B095F9B0DF514
D12F28DE74CA3A66624F0017D51726140ACE5DA312FDE21B5C9C4C9C482AF1FD
1C6F2ABF2504648A5401D7F0AFE77C80A789A5DC605CB2A5D60D7FFB7A72F959
9555E77A0D20AC4830EA6C41DAF4665433BD86145727BAD037CFD1D57EA95074
EB61D9EAB4E878681DBE43ADF50A8F29460C0B0EB7D29D067397380F0F97E4D0
243362E76B6DC6A1E86DFDF9CE0F5802DA15616FCE0280C871C2CF6E20341EB4
73E18955672F0AFC38E4344DCF3F3ED9F920B629FB24BB0B10A81B9A27574AA7
B18B4BE3185DF2B0C6DF1A07DA4673004C4E302B082426278081359C75434159
8437B9C001305F1F2328B4E6A13185595FE13C4EB0A08CD4E4444DFD3237625A
BAE3BC6857240EB926D2524FAFF790DB3F4BB8AC654A75ED42729532D18EB057
F9B9AC8A7FA3BC71F9FA8B01139CDCCACDD227DA4FEE630C824E172E199B1929
58FFC2A13B1841D94E2497443248CAC4741495EA5F22B79A6C7BD0A8B4F79929
F6F9FBEA83A48E7449755650301CADEC0E39FCE504B0352D37BAE356DE374A21
D397C1F08B0A5F02E82E64A796152C637242E54AFA5CC2922220A20C5A12ECC2
E09C5620F73BA0E13DE274E786DC10152EE1ED0CC5B0ACB34CD3CD1FAA9BFB8F
37C04BFA4E0FD043D754D695C92A045889D2C93EAB944C66D1BDD14718CBE880
C0CEC48E578EBD230A983B9EF9477AB1C17400A46DEE9C9FF82BB099884AAAF9
0A4FFA273B38C7ACECE463CD52D2B8B86C96AA8E49CAD41D19DCB1D131041972
241EB5709A531C69647C9EE37BAB16AAED2A4CFCE66DF0E8038F7560EA459AE0
B34ADBDFD38E5B4AF26F22119A8B54C89BBC169211A00E16D84B34C1E38F14B4
7AE24905D7C5EA2A4D6F12E01C57F49E7BF6B621B1E06AE8580AAAECEA79301C
758518AB652F9E8BCA586D3D2021CA860F84DC0A2F61A93B6B44F08A7F7C5F36
FEE9F5D450D19F72C09580DDE2B3747D8A1054981BAEF31D6C42040D7D5F37DE
6DE019849E7C7754DD27E9511F9A9AFA4FB727695444F739448F3D2021
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (practica4.dvi)
@start
%DVIPSBitmapFont: Fa ecbx1095 10.95 15
/Fa 15 238 df<07801FE03FF07FF8FFFCFFFCFFFCFFFCFFFCFFFC7FF83FF01FE0078000
000000000000000000000000000000000000000000000007801FE03FF07FF8FFFCFFFCFF
FCFFFCFFFCFFFC7FF83FF01FE007800E2879A71D>58 D<FFFFFFFFFFFFF8FFFFFFFFFFFF
F8FFFFFFFFFFFFF8FFFFFFFFFFFFF8007FFC0000FFFC007FFC00001FFC007FFC000007FC
007FFC000001FC007FFC000000FC007FFC000000FC007FFC0000007C007FFC0000007E00
7FFC0000003E007FFC0000003E007FFC0000001E007FFC0000001E007FFC0000001E007F
FC0000001E007FFC001E001F007FFC001E000F007FFC001E000F007FFC001E000F007FFC
001E0000007FFC001E0000007FFC003E0000007FFC003E0000007FFC007E0000007FFC00
FE0000007FFC03FE0000007FFFFFFE0000007FFFFFFE0000007FFFFFFE0000007FFFFFFE
0000007FFC03FE0000007FFC00FE0000007FFC007E0000007FFC003E0000007FFC003E00
00007FFC001E0000007FFC001E0000007FFC001E0000007FFC001E0000007FFC001E0000
007FFC001E0000007FFC00000000007FFC00000000007FFC00000000007FFC0000000000
7FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007F
FC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000FFFFFF
FFC00000FFFFFFFFC00000FFFFFFFFC00000FFFFFFFFC00000383E7CBD41>70
D<0007FF800000003FFFF0000001FFFFFC000003FC03FF000007E000FFC0000FF8007FE0
001FF8003FF0001FFC003FF0001FFC001FF8001FFC001FF8001FFC000FFC001FFC000FFC
000FF8000FFC0007F0000FFC0001C0000FFC000000000FFC000000000FFC000000000FFC
00000003FFFC000001FFFFFC00000FFFFFFC00007FFF8FFC0001FFF00FFC0007FF800FFC
000FFF000FFC001FFC000FFC003FF8000FFC007FF8000FFC007FF0000FFC00FFF0000FFC
00FFE0000FFC00FFE0000FFC00FFE0000FFC00FFE0001FFC00FFE0001FFC00FFF0003FFC
007FF0003FFC007FF8007FFF003FFC01F7FFFC1FFE07E3FFFC07FFFF81FFFC01FFFE007F
FC001FF80000002E2B7DA932>97 D<00007FF0000003FFFF00001FFFFFC0007FE01FE000
FF8003F001FF000FF803FE000FFC07FE001FFC0FFC001FFC1FFC001FFC1FF8001FFC3FF8
001FFC3FF8000FF87FF80007F07FF00001C07FF0000000FFF0000000FFF0000000FFF000
0000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF00000
00FFF00000007FF00000007FF00000007FF80000007FF80000003FF800001E3FFC00001E
1FFC00003E0FFC00003C0FFE00007C07FF0000F803FF8001F000FFC003E0007FF00FC000
1FFFFF000007FFFC0000007FE000272B7DA92E>99 D<0000000007F80000000007FFF800
00000007FFF80000000007FFF80000000007FFF800000000003FF800000000001FF80000
0000001FF800000000001FF800000000001FF800000000001FF800000000001FF8000000
00001FF800000000001FF800000000001FF800000000001FF800000000001FF800000000
001FF800000000001FF800000000001FF800000000001FF800000000001FF80000007FE0
1FF8000003FFFC1FF800001FFFFF1FF800007FF00FDFF80000FFC003FFF80003FF0000FF
F80007FE00007FF8000FFE00003FF8000FFC00001FF8001FFC00001FF8003FF800001FF8
003FF800001FF8007FF800001FF8007FF000001FF8007FF000001FF8007FF000001FF800
FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FF
F000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF8007FF0
00001FF8007FF000001FF8007FF000001FF8007FF800001FF8003FF800001FF8003FF800
001FF8001FF800001FF8001FFC00003FF8000FFC00007FF80007FE0000FFF80003FF0001
FFFC0001FF8007FFFFE0007FE01F9FFFE0001FFFFE1FFFE00007FFF81FFFE000007FC01F
E00033407DBE3A>I<0000FFE0000007FFFC00003FFFFF00007FE0FF8001FF803FC003FF
001FE007FE000FF00FFC000FF80FFC0007FC1FF80007FC3FF80003FE3FF80003FE3FF800
03FE7FF00003FE7FF00003FF7FF00003FFFFF00001FFFFF00001FFFFF00001FFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFF0000000FFF0000000FFF0000000FFF0000000FFF0000000
7FF00000007FF00000007FF00000003FF80000003FF800000F1FF800000F1FFC00001F0F
FC00001E07FE00003E03FE00007C01FF0000F800FFC003F0007FF01FE0001FFFFFC00007
FFFE0000007FF000282B7DA92F>I<0003FF8003F0003FFFF81FFC00FFFFFE7FFE03FF01
FFFCFE07FC007FE1FE0FFC007FE0FE1FF8003FF0FE3FF8003FF87C3FF0001FF8003FF000
1FF8007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF000
1FFC007FF0001FFC003FF0001FF8003FF0001FF8003FF8003FF8001FF8003FF0000FFC00
7FE00007FC007FC00007FF01FF800007FFFFFE00000F3FFFF800000F03FF8000001E0000
0000001E00000000001F00000000001F00000000001F00000000001F80000000001FC000
0000001FFFFFFF00000FFFFFFFF0000FFFFFFFFC0007FFFFFFFF0007FFFFFFFF8003FFFF
FFFFC003FFFFFFFFE00FFFFFFFFFE01FC00001FFF03F8000001FF07F0000000FF87F0000
0007F8FE00000007F8FE00000003F8FE00000003F8FE00000003F8FE00000003F8FF0000
0007F87F00000007F07F8000000FF03FC000001FE01FE000003FC00FF80000FF8003FF80
0FFE0000FFFFFFF800001FFFFFC0000001FFFC00002F3D7DA834>103
D<00FF0000000000FFFF0000000000FFFF0000000000FFFF0000000000FFFF0000000000
07FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF00
0000000003FF000000000003FF003FF0000003FF00FFFE000003FF03FFFF800003FF0FC0
FFC00003FF1E007FE00003FF3C003FF00003FF78003FF00003FFF0003FF00003FFE0001F
F80003FFC0001FF80003FFC0001FF80003FF80001FF80003FF80001FF80003FF80001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF800FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07
FFFFE0FFFFFC07FFFFE0333F7CBE3A>I<01F80003FC0007FE000FFF001FFF801FFF801F
FF801FFF801FFF801FFF800FFF0007FE0003FC0001F80000000000000000000000000000
000000000000000000000000000000FF00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFFF8FFFFF8FFFFF815407CBF1D>I<
00FF00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFFC
FFFFFCFFFFFCFFFFFC163F7CBE1D>108 D<01FE003FF00001FF8000FFFE00FFFE0007FF
F000FFFE03FFFF801FFFFC00FFFE0FC0FFC07E07FE00FFFE1E007FE0F003FF0007FE3C00
3FF1E001FF8003FE78003FF3C001FF8003FEF0003FF78001FF8003FFE0001FFF0000FFC0
03FFC0001FFE0000FFC003FFC0001FFE0000FFC003FF80001FFC0000FFC003FF80001FFC
0000FFC003FF80001FFC0000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF
00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000
FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF0000
1FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC0
03FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF8
0000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF
00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC0FFFFFC07FFFFE03F
FFFFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFF50297CA8
57>I<01FE003FF00000FFFE00FFFE0000FFFE03FFFF8000FFFE0FC0FFC000FFFE1E007F
E00007FE3C003FF00003FE78003FF00003FEF0003FF00003FFE0001FF80003FFC0001FF8
0003FFC0001FF80003FF80001FF80003FF80001FF80003FF80001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF0000
1FF80003FF00001FF800FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FF
FFE033297CA83A>I<01FE01FC00FFFE07FF80FFFE0FFFE0FFFE3F1FF0FFFE3C1FF007FE
783FF803FEF03FF803FEE03FF803FFE03FF803FFC03FF803FFC01FF003FF800FE003FF80
038003FF80000003FF80000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FFFFFF0000FFFFFF00002529
7DA82B>114 D<0007800000078000000780000007800000078000000F8000000F800000
0F8000000F8000001F8000001F8000001F8000003F8000007F8000007F800000FF800001
FF800007FF80001FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC01FF800001FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF801E01
FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E00FF803C00
FFC03C00FFC03C007FE078003FF0F0001FFFE00007FFC00000FF001F3B7EB928>116
D<0000600001F80003FC0007FC000FFE001FFE003FFE007FFE00FFFC01FFFC03FFF007FF
800FFE0007F00007800002000000000000000000000000FF00FFFF00FFFF00FFFF00FFFF
0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFFF8FFFFF8FFFF
F8173C7CBB1D>237 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb ectt1095 10.95 33
/Fb 33 120 df<07C00001E00FE00003E01FF00007F03FF80007F03FF8000FF07FFC000F
F07EFC001FE0FC7E001FE0FC7E001FC0F83E003FC0F83E003FC0F83E007F80F83E007F80
F83E007F00F83E00FF00FC7E00FF00FC7E00FE007EFC01FE007FFC01FE003FF803FC003F
F803FC001FF003F8000FE007F80007C007F80000000FF00000000FF00000000FE0000000
1FE00000001FE00000003FC00000003FC00000003F800000007F800000007F80000000FF
00000000FF00000000FE00000001FE00000001FE00000001FC00000003FC00000003FC00
000007F800000007F800000007F00000000FF00000000FF003E0001FE007F0001FE00FF8
001FC01FFC003FC01FFC003FC03FFE007F803F7E007F803E3E007F007E3F00FF007C1F00
FF007C1F00FE007C1F01FE007C1F01FE007C1F03FC007C1F03FC007C1F03F8007E3F07F8
003E3E07F8003F7E0FF0003FFE0FF0001FFC0FE0001FFC0FE0000FF807C00007F003C000
03E028477DBE2F>37 D<1F003F807FC0FFE0FFE0FFE0FFE0FFE07FC03F801F000B0B6E8A
2F>46 D<00000000E000000001F000000003F000000003F000000007F000000007E00000
000FE00000000FC00000001FC00000001F800000003F800000003F000000007F00000000
7E00000000FE00000000FC00000000FC00000001FC00000001F800000003F800000003F0
00000007F000000007E00000000FE00000000FC00000001FC00000001F800000003F8000
00003F000000003F000000007F000000007E00000000FE00000000FC00000001FC000000
01F800000003F800000003F000000007F000000007E00000000FE00000000FC00000000F
C00000001FC00000001F800000003F800000003F000000007F000000007E00000000FE00
000000FC00000001FC00000001F800000003F800000003F000000003F000000007F00000
0007E00000000FE00000000FC00000001FC00000001F800000003F800000003F00000000
7F000000007E00000000FE00000000FC00000000FC00000000F800000000780000000024
477BBE2F>I<0001FE00000007FF8000001FFFE000003FFFF000007FFFF80000FFFFFC00
01FF03FE0003FC00FF0003F8007F0007F0003F800FE0001FC00FC0000FC01FC0000FE01F
800007E01F800007E03F000003F03F000003F03F000003F07E000001F87E000001F87E00
0001F87E000001F8FC000000FCFC000000FCFC000000FCFC000000FCFC000000FCFC0000
00FCFC000000FCFC000000FCFC000000FCFC000000FCFC000000FCFC000000FCFC000000
FCFE000001FC7E000001F87E000001F87E000001F87F000003F83F000003F03F000003F0
3F800007F01F800007E01FC0000FE01FC0000FE00FE0001FC00FE0001FC007F0003F8003
F8007F0003FC00FF0001FF03FE0000FFFFFC00007FFFF800003FFFF000001FFFE0000007
FF80000001FE0000263A7CB82F>I<000380000007C0000007C000000FC000000FC00000
1FC000003FC000003FC000007FC00001FFC00003FFC0007FFFC000FFFFC000FFFFC000FF
CFC000FF8FC0007E0FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC0003FFFFFF87FFFFFF87FFFFFFC7FFFFFFC7FFFFFF87FFFFFF81E3977B82F>I<000F
FC0000003FFF800000FFFFE00003FFFFF80007FFFFFC000FFFFFFE001FF80FFF003FE001
FF803F80007F807F00003FC07E00001FC07E00000FE0FE000007E0FE000007F0FF000007
F0FF000003F0FF000003F0FF000003F07E000003F018000003F000000003F000000003F0
00000007F000000007E00000000FE00000000FC00000001FC00000001FC00000003F8000
00007F00000000FF00000001FE00000003FC00000007F80000000FF00000001FE0000000
3FC00000007F80000000FF00000001FE00000007FC0000000FF80000001FF00000003FE0
0000007F80000000FF00000001FE00000003FC0001E00FF80003F01FF00003F03FE00003
F07FFFFFFFF0FFFFFFFFF0FFFFFFFFF0FFFFFFFFF0FFFFFFFFF07FFFFFFFE024397BB82F
>I<0007FF0000003FFFE00001FFFFF80003FFFFFE0007FFFFFF000FFFFFFF801FFC01FF
C01FE0003FC03F80001FE03FC00007E03FC00007F03FC00003F03FC00003F01F800003F0
0F000003F000000003F000000007F000000007E00000000FE00000000FE00000001FC000
00007FC0000000FF8000000FFF00000FFFFE00001FFFFC00001FFFF800001FFFF800001F
FFFE00000FFFFF00000001FF800000003FC00000001FE000000007F000000003F0000000
03F800000001F800000001FC00000000FC00000000FC18000000FC7E000000FCFF000000
FCFF000000FCFF000001FCFF000001F8FE000003F8FE000003F87F000007F07F80001FE0
3FE0003FE01FFE01FFC00FFFFFFF8007FFFFFF0003FFFFFE0000FFFFF800003FFFE00000
03FF0000263A7CB82F>I<0FFFFFFF001FFFFFFF801FFFFFFF801FFFFFFF801FFFFFFF80
1FFFFFFF001F800000001F800000001F800000001F800000001F800000001F800000001F
800000001F800000001F800000001F800000001F800000001F800000001F800000001F80
0000001F83FE00001F9FFFC0001FFFFFF0001FFFFFF8001FFFFFFC001FFFFFFE001FFE03
FF001FF000FF801FE0003F801F80001FC01F80000FC00F00000FE000000007E000000007
E000000007F000000003F000000003F000000003F000000003F03C000003F07E000003F0
FF000003F0FF000007F0FF000007E0FF00000FE0FE00000FE07E00001FC07F00003FC07F
80007F803FC001FF001FF80FFE001FFFFFFC000FFFFFF80003FFFFF00001FFFFC000007F
FF0000000FF8000024397BB72F>53 D<00001FE0000000FFFC000003FFFF00000FFFFF80
001FFFFF80003FFFFFC0007FF03FC000FF800FE001FE001FE003FC001FE007F8001FE007
F0001FE00FE0000FC00FC00007801FC00000001F800000003F800000003F000000007F00
0000007F000000007E001000007E07FF80007E1FFFE000FE7FFFF800FCFFFFFC00FDFFFF
FE00FFFFFFFF00FFFC01FF00FFF0007F80FFC0003FC0FF80001FC0FF00000FE0FF00000F
E0FE000007E0FE000007F0FE000003F0FE000003F0FE000003F07E000003F07E000003F0
7E000003F07E000003F07F000003F03F000007F03F000007E03F800007E01F80000FE01F
C0001FC00FE0003FC00FF0007F8007F800FF0003FE03FF0003FFFFFE0001FFFFFC0000FF
FFF800003FFFE000000FFF80000003FE0000243A7BB82F>I<0003FF0000001FFFE00000
7FFFF80001FFFFFE0003FFFFFF0007FFFFFF800FFE01FFC01FF0003FE01FE0001FE03F80
0007F03F800007F07F000003F87E000001F87E000001F87E000001F87E000001F87E0000
01F87F000003F83F000003F03F800007F01FC0000FE00FE0001FC00FF8007FC003FF03FF
0001FFFFFE00007FFFF800001FFFE000003FFFF00000FFFFFC0003FFFFFF0007FC00FF80
0FF0003FC01FC0000FE03F800007F03F000003F07F000003F87E000001F8FE000001FCFC
000000FCFC000000FCFC000000FCFC000000FCFC000000FCFC000000FCFE000001FC7E00
0001F87F000003F87F800007F83FC0000FF01FE0001FE01FF0003FE00FFE01FFC007FFFF
FF8003FFFFFF0001FFFFFE00007FFFF800001FFFE0000003FF0000263A7CB82F>56
D<1F003F807FC0FFE0FFE0FFE0FFE0FFE07FC03F801F0000000000000000000000000000
0000000000000000000000000000000000000000001F003F807FC0FFE0FFE0FFE0FFE0FF
E07FC03F801F000B276EA62F>58 D<7FFFFFE000FFFFFFFC00FFFFFFFF00FFFFFFFF80FF
FFFFFFC07FFFFFFFE003F0001FF003F0000FF003F00003F803F00003F803F00001F803F0
0001FC03F00000FC03F00000FC03F00000FC03F00000FC03F00000FC03F00001FC03F000
01F803F00003F803F00003F003F00007F003F0001FE003F0007FC003FFFFFF8003FFFFFF
0003FFFFFC0003FFFFFF0003FFFFFFC003FFFFFFE003F0000FF003F00003F803F00001FC
03F00000FC03F00000FE03F000007E03F000007E03F000003F03F000003F03F000003F03
F000003F03F000003F03F000003F03F000007F03F000007E03F00000FE03F00000FE03F0
0001FC03F00007FC03F0001FF87FFFFFFFF8FFFFFFFFF0FFFFFFFFE0FFFFFFFF80FFFFFF
FF007FFFFFF80028387EB72F>66 D<00007F80380003FFE07C000FFFF8FC001FFFFCFC00
3FFFFFFC007FFFFFFC00FFC0FFFC01FF003FFC03FE000FFC07F8000FFC07F00007FC0FE0
0003FC0FE00003FC1FC00001FC1F800001FC3F800001FC3F000000FC3F000000FC7F0000
00FC7E000000FC7E000000787E00000000FE00000000FC00000000FC00000000FC000000
00FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000
FC00000000FC00000000FE000000007E000000007E000000007E000000787F000000FC3F
000000FC3F000000FC3F800000FC1F800000FC1FC00001FC0FE00001F80FF00003F807F0
0003F807F80007F003FE000FF001FF001FE000FFC07FC0007FFFFF80003FFFFF00001FFF
FE00000FFFFC000003FFF00000007F8000263A7CB82F>I<7FFFFFFEFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFF7FFFFFFE0007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0007FFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFE203879B7
2F>73 D<7FFFF000007FFFF80000FFFFF80000FFFFF800007FFFF800007FFFF0000001F8
00000001F800000001F800000001F800000001F800000001F800000001F800000001F800
000001F800000001F800000001F800000001F800000001F800000001F800000001F80000
0001F800000001F800000001F800000001F800000001F800000001F800000001F8000000
01F800000001F800000001F800000001F800000001F800000001F800000001F800000001
F800000001F800000001F800000001F800000001F800000001F800001E01F800003F01F8
00003F01F800003F01F800003F01F800003F01F800003F01F800003F01F800003F01F800
003F7FFFFFFFFF7FFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFF7FFFFFFFFE28387DB7
2F>76 D<7FFFFFFFE07FFFFFFFE0FFFFFFFFF0FFFFFFFFF0FFFFFFFFF07FFFFFFFE07FFF
FFFFE024077B7D2F>95 D<007FF000000003FFFE00000007FFFF8000000FFFFFC000001F
FFFFE000003FFFFFF000003FC01FF800003FC003FC00003FC001FC00003FC000FE00001F
80007E00000F00007F00000000003F00000000003F00000000003F00000000003F000000
007FFF00000007FFFF0000003FFFFF000001FFFFFF000007FFFFFF00000FFFF83F00001F
FE003F00003FF0003F00007FC0003F00007F00003F0000FE00003F0000FC00003F0000FC
00003F0000FC00003F0000FC00003F0000FC00007F0000FE00007F00007F0000FF00007F
8003FF80003FE01FFFFF003FFFFFFFFF801FFFFFFFFF800FFFFFDFFF8007FFFF0FFF8001
FFFC01FF00007FE0000000292A7BA82F>97 D<0003FFC000000FFFF800003FFFFC0000FF
FFFE0001FFFFFF0003FFFFFF8007FF007F800FF8007F800FF0007F801FE0007F801FC000
3F003F80001E003F000000007F000000007E000000007E00000000FE00000000FC000000
00FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000
FE000000007E000000007E000000007F000000007F000007803F80000FC03FC0000FC01F
E0001FC01FF0001F800FFC007F8007FF81FF0003FFFFFF0001FFFFFE0000FFFFFC00003F
FFF000000FFFC0000003FE0000222A79A82F>99 D<000003FF8000000007FFC000000007
FFC000000007FFC000000007FFC000000003FFC0000000000FC0000000000FC000000000
0FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000000000
0FC0000000000FC0000003FC0FC000001FFF0FC000007FFFCFC00000FFFFEFC00001FFFF
FFC00003FFFFFFC00007FE07FFC0000FF801FFC0001FF0007FC0001FC0003FC0003F8000
3FC0003F80001FC0007F00001FC0007F00000FC0007E00000FC000FE00000FC000FE0000
0FC000FC00000FC000FC00000FC000FC00000FC000FC00000FC000FC00000FC000FC0000
0FC000FC00000FC000FC00000FC000FE00000FC0007E00001FC0007E00001FC0007F0000
1FC0003F80003FC0003F80007FC0001FC0007FC0001FE000FFC0000FF801FFC00007FE07
FFFF0007FFFFFFFF8003FFFFEFFF8001FFFFCFFF80007FFF8FFF80001FFE07FF000007F8
00000029397DB72F>I<0003FE0000000FFF8000003FFFE00000FFFFF00001FFFFF80003
FFFFFC0007FE07FE000FF800FF000FF0007F001FC0003F803FC0001F803F80001FC03F00
000FC07F00000FC07E00000FC07E00000FE0FE000007E0FC000007E0FFFFFFFFE0FFFFFF
FFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFC0FC00000000FE000000007E000000
007E000000007F000000003F800003C03F800007E01FC00007E01FE0000FE00FF8001FC0
07FE003FC007FF80FF8003FFFFFF8001FFFFFF00007FFFFC00003FFFF800000FFFE00000
01FF0000232A7BA82F>I<0003F801FE00001FFF07FF80007FFFDFFF8000FFFFFFFFC001
FFFFFFFFC003FFFFFFFFC003FE0FFF0F8007F803FC07000FF001FE00000FE000FE00000F
C0007E00001FC0007F00001F80003F00001F80003F00001F80003F00001F80003F00001F
80003F00001F80003F00001FC0007F00000FC0007E00000FE000FE00000FF001FE000007
F803FC000003FE0FF8000003FFFFF8000007FFFFF0000007FFFFE000000FFFFFC000000F
9FFF0000000F83F80000000F80000000000F80000000000F80000000000FC00000000007
E40000000007FFFFF0000003FFFFFF000007FFFFFFC0000FFFFFFFE0001FFFFFFFF0003F
C0001FF8003F000001FC007E000000FE007C0000007E00FC0000003E00F80000003F00F8
0000001F00F80000001F00F80000001F00F80000001F00FC0000003F007C0000003E007F
000000FE003F800001FC003FE00007FC001FFE007FF8000FFFFFFFF00007FFFFFFE00001
FFFFFF800000FFFFFF0000001FFFF800000003FFC000002A3E7DA72F>103
D<7FF000000000FFF800000000FFF800000000FFF800000000FFF8000000007FF8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80FF0000001F83FFC00
0001F8FFFE000001FBFFFF000001FFFFFF800001FFFFFF800001FFF03FC00001FFC01FC0
0001FF800FE00001FF000FE00001FE0007E00001FC0007E00001FC0007E00001FC0007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E0007FFFE07FFF80FFFFF0FFFFC0FFFFF0FFFFC0FFFFF0FFFF
C0FFFFF0FFFFC07FFFE07FFF802A387EB72F>I<0003800000000FE00000000FE0000000
1FF00000001FF00000001FF00000000FE00000000FE00000000380000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00003FFFE000007FFFF000007FFFF000007FFFF000007FFFF000003FFFF000000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000007FFFFFFF00FFFFFFFF00FFFFFF
FF80FFFFFFFF80FFFFFFFF007FFFFFFF00213979B82F>I<7FF000000000FFF800000000
FFF800000000FFF800000000FFF8000000007FF80000000000F80000000000F800000000
00F80000000000F80000000000F80000000000F80000000000F80000000000F800000000
00F80000000000F80000000000F80000000000F807FFFF0000F80FFFFF0000F80FFFFF80
00F80FFFFF8000F80FFFFF0000F807FFFF0000F8003F800000F8007F000000F800FE0000
00F801FC000000F803F8000000F807F0000000F80FE0000000F81FC0000000F83F800000
00F87F00000000F8FF00000000F9FF80000000FBFF80000000FFFFC0000000FFE7E00000
00FFC7F0000000FF83F0000000FF01F8000000FE00FC000000FC00FE000000F8007E0000
00F8003F000000F8001F800000F8001F800000F8000FC00000F80007E00000F80007F000
7FFFF03FFFC0FFFFF87FFFC0FFFFF87FFFE0FFFFF87FFFE0FFFFF87FFFC07FFFF03FFFC0
2B387EB72F>107 D<7FFFF000007FFFF80000FFFFF80000FFFFF800007FFFF800007FFF
F800000001F800000001F800000001F800000001F800000001F800000001F800000001F8
00000001F800000001F800000001F800000001F800000001F800000001F800000001F800
000001F800000001F800000001F800000001F800000001F800000001F800000001F80000
0001F800000001F800000001F800000001F800000001F800000001F800000001F8000000
01F800000001F800000001F800000001F800000001F800000001F800000001F800000001
F800000001F800000001F800000001F800000001F800000001F800000001F800000001F8
00000001F800007FFFFFFFE07FFFFFFFE0FFFFFFFFF0FFFFFFFFF07FFFFFFFE07FFFFFFF
E024387BB72F>I<0001F801F8007F8FFC0FFC00FFDFFE1FFE00FFFFFF3FFF00FFFFFFFF
FF80FFFFFFFFFF807FFE1FFE1F8007FC0FFC0FC007F80FF80FC007F007F007C007E007E0
07C007E007E007C007E007E007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C07FFC3FFC
3FFCFFFE3FFE3FFEFFFE7FFE7FFEFFFE7FFE7FFEFFFE3FFE3FFE7FFC3FFC3FFC2F2880A7
2F>I<00000FF000007FF03FFC0000FFF8FFFE0000FFFBFFFF0000FFFFFFFF8000FFFFFF
FF80007FFFF03FC00001FFC01FC00001FF800FE00001FF000FE00001FE0007E00001FC00
07E00001FC0007E00001FC0007E00001F80007E00001F80007E00001F80007E00001F800
07E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F800
07E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F800
07E00001F80007E00001F80007E00001F80007E00001F80007E0007FFFE07FFF80FFFFF0
FFFFC0FFFFF0FFFFC0FFFFF0FFFFC0FFFFF0FFFFC07FFFE07FFF802A287EA72F>I<0003
FC0000001FFF8000003FFFC00000FFFFF00001FFFFF80003FFFFFC0007FE07FE000FF801
FF000FE0007F001FC0003F801F80001F803F80001FC03F00000FC07F00000FE07E000007
E07E000007E0FC000003F0FC000003F0FC000003F0FC000003F0FC000003F0FC000003F0
FC000003F0FC000003F0FC000003F0FE000007F07E000007E07E000007E07F00000FE07F
00000FE03F80001FC03F80001FC01FC0003F801FE0007F800FF801FF0007FE07FE0003FF
FFFC0001FFFFF80000FFFFF000007FFFE000001FFF80000003FC0000242A7BA82F>I<00
000FF000007FF03FFC0000FFF8FFFF0000FFFBFFFFC000FFFFFFFFE000FFFFFFFFF0007F
FFF03FF00001FFC00FF80001FF8003FC0001FF0001FC0001FE0000FE0001FC0000FE0001
FC00007F0001F800003F0001F800003F0001F800003F8001F800001F8001F800001F8001
F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001
F800003F8001F800003F8001FC00003F0001FC00007F0001FC00007F0001FE0000FE0001
FE0000FE0001FF0001FC0001FF8007FC0001FFC00FF80001FFF03FF00001FFFFFFE00001
FFFFFFC00001FBFFFF800001F9FFFF000001F87FFC000001F81FE0000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F8000000007F
FFE0000000FFFFF0000000FFFFF0000000FFFFF0000000FFFFF00000007FFFE000000029
3C7EA72F>I<0000000FF0007FFF007FFE007FFF81FFFF00FFFF87FFFF00FFFF8FFFFF80
7FFF9FFFFF807FFFBFF87F80001FFFC07F80001FFF003F00001FFE001E00001FFC000000
001FF8000000001FF0000000001FF0000000001FE0000000001FC0000000001FC0000000
001FC0000000001FC0000000001F80000000001F80000000001F80000000001F80000000
001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000
001F80000000001F80000000001F80000000001F80000000001F800000007FFFFFF80000
7FFFFFFC0000FFFFFFFC0000FFFFFFFC00007FFFFFFC00007FFFFFF8000029287EA72F>
114 D<001FFC0E0001FFFF9F0007FFFFFF000FFFFFFF001FFFFFFF003FFFFFFF007FF007
FF007F8000FF00FE00007F00FE00007F00FC00003F00FC00003F00FC00003F00FE00003F
007F00001E007FC00000003FFC0000001FFFF000000FFFFF800003FFFFE00000FFFFF800
001FFFFE0000007FFF00000001FF800000007F807800001FC0FC00000FC0FC000007E0FC
000007E0FE000007E0FE000007E0FF000007E0FF80000FE0FFC0001FC0FFE0003FC0FFFC
01FF80FFFFFFFF80FFFFFFFF00FFFFFFFE00F8FFFFF800F83FFFE0007007FF0000232A7A
A82F>I<000F000000001F800000001F800000001F800000001F800000001F800000001F
800000001F800000001F800000001F800000001F8000007FFFFFFFC0FFFFFFFFE0FFFFFF
FFE0FFFFFFFFE0FFFFFFFFE07FFFFFFFC0001F800000001F800000001F800000001F8000
00001F800000001F800000001F800000001F800000001F800000001F800000001F800000
001F800000001F800000001F800000001F800000001F800000001F800000001F80000000
1F8000F0001F8001F8001F8001F8001F8001F8001F8001F8001F8001F8001FC003F8001F
C007F0000FE00FF0000FF81FE00007FFFFC00007FFFFC00003FFFF800001FFFE0000007F
F80000001FE00025337EB12F>I<7FFF801FFFE07FFFC03FFFE0FFFFC03FFFF0FFFFC03F
FFF07FFFC03FFFE07FFF801FFFE007C000003E0007C000003E0007C000003E0007E00000
7E0003E000007C0003E000007C0003E000007C0003E000007C0003E000007C0001F00000
F80001F00F80F80001F01FC0F80001F03FE0F80001F03FE0F80001F03FE0F80000F87FF0
F00000F87DF1F00000F87DF1F00000F8FDF1F00000F8FDF9F00000F8F9F9F0000078F8F9
E0000079F8F9E000007DF8F9E000007DF8F9E000007DF079E000007DF07BE000003FF07F
C000003FE07FC000003FE03FC000003FE03FC000003FC01FC000001F800F80002C277FA6
2F>119 D E
%EndDVIPSBitmapFont
/Fc 201[0 53[55{}2 66.4176 /CMSY8 rf /Fd 166[116 131
88[{}2 90.9091 /CMEX10 rf /Fe 148[37 29 24 45[20 59[{}4
66.4176 /CMMI8 rf
%DVIPSBitmapFont: Ff ecbx1200 12 32
/Ff 32 244 df<000003C000000007C00000001FC00000007FC0000003FFC000003FFFC0
00FFFFFFC000FFFFFFC000FFFFFFC000FFFFFFC000FFC3FFC0000003FFC0000003FFC000
0003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC00000
03FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003
FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FF
C0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0
000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC000
0003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC00000
03FFC0000003FFC0000003FFC0000003FFC000FFFFFFFFFCFFFFFFFFFCFFFFFFFFFCFFFF
FFFFFCFFFFFFFFFC264177C038>49 D<0000FFE00000000FFFFE0000003FFFFF800000FF
FFFFE00003FFFFFFF80007FC03FFFE000FE0007FFF001F80003FFF803F00000FFFC07F00
0007FFC07FC00007FFE07FF00003FFE0FFF00001FFF0FFF80001FFF0FFF80001FFF8FFF8
0000FFF8FFF80000FFF8FFF80000FFF8FFF80000FFF87FF00000FFF83FE00000FFF81FC0
0000FFF800000000FFF800000000FFF000000001FFF000000001FFF000000001FFE00000
0003FFE000000003FFC000000007FF800000000FFF000000000FFF000000001FFC000000
003FF8000000003FF0000000007FE000000000FFC000000001FF0000000003FE00000000
07FC000000000FF0000000001FE0000000003F80000000007F0000780000FE0000780001
FC0000780003F80000F80007E00000F0000FC00000F0001F800000F0003F000000F0007C
000001F000F8000003F001FFFFFFFFF003FFFFFFFFE007FFFFFFFFE00FFFFFFFFFE01FFF
FFFFFFE03FFFFFFFFFE07FFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFC0FFFFFFFFFFC0FFFF
FFFFFFC0FFFFFFFFFFC02D417BC038>I<0000FFF000000007FFFF0000001FFFFFC00000
7FFFFFF00000FF007FF80003F8003FFE0007E0001FFF0007E0000FFF000FF80007FF800F
FE0007FF801FFE0007FFC01FFF0007FFC01FFF0007FFC01FFF0007FFC01FFF0007FFC01F
FF0007FFC01FFF0007FFC00FFE0007FFC007FC0007FF8003F8000FFF800000000FFF0000
00001FFF000000001FFE000000003FFC000000007FF800000000FFF000000001FFE00000
000FFF80000007FFFE00000007FFF800000007FFFF00000007FFFFC000000000FFF00000
00003FFC000000000FFE000000000FFF8000000007FF8000000003FFC000000003FFE000
000003FFE000000001FFF000000001FFF000000001FFF800000001FFF800000001FFF80F
C00001FFF83FF00001FFF87FF80001FFF87FF80001FFF8FFFC0001FFF8FFFC0001FFF8FF
FC0001FFF0FFFC0001FFF0FFFC0003FFF0FFFC0003FFE07FF80003FFE07FF00007FFC07F
E00007FFC03F80000FFF801FF0001FFF000FFE00FFFE0007FFFFFFF80001FFFFFFF00000
7FFFFFC000001FFFFE00000001FFE000002D427BC038>I<000000003F0000000000003F
0000000000007F000000000000FF000000000001FF000000000003FF000000000003FF00
0000000007FF00000000000FFF00000000001FFF00000000003FFF00000000003FFF0000
0000007FFF0000000000FFFF0000000001F7FF0000000003E7FF0000000007E7FF000000
0007C7FF000000000F87FF000000001F07FF000000003E07FF000000007E07FF00000000
7C07FF00000000F807FF00000001F007FF00000003E007FF00000007E007FF00000007C0
07FF0000000F8007FF0000001F0007FF0000003E0007FF0000007C0007FF0000007C0007
FF000000F80007FF000001F00007FF000003E00007FF000007C00007FF00000FC00007FF
00000F800007FF00001F000007FF00003E000007FF00007C000007FF0000FC000007FF00
00FFFFFFFFFFFF80FFFFFFFFFFFF80FFFFFFFFFFFF80FFFFFFFFFFFF80FFFFFFFFFFFF80
0000000FFF00000000000FFF00000000000FFF00000000000FFF00000000000FFF000000
00000FFF00000000000FFF00000000000FFF00000000000FFF00000000000FFF00000000
000FFF00000000000FFF000000007FFFFFFF8000007FFFFFFF8000007FFFFFFF8000007F
FFFFFF8000007FFFFFFF8031417DC038>I<07000000030007E000003F0007FF0007FF00
07FFFFFFFF0007FFFFFFFE0007FFFFFFFC0007FFFFFFF80007FFFFFFF00007FFFFFFE000
07FFFFFF800007FFFFFE000007FFFFFC000007FFFFE0000007FFFF00000007C000000000
07C00000000007C00000000007C00000000007C00000000007C00000000007C000000000
07C00000000007C00000000007C00000000007C03FF0000007C1FFFF000007C7FFFFC000
07DFFFFFF00007FFE03FFC0007FF000FFE0007FC0007FF0007F00003FF8007E00003FFC0
07C00001FFC003800001FFE000000001FFE000000000FFF000000000FFF000000000FFF0
00000000FFF800000000FFF800000000FFF800000000FFF80F800000FFF83FE00000FFF8
7FF00000FFF8FFF00000FFF8FFF80000FFF8FFF80000FFF8FFF80000FFF8FFF80000FFF0
FFF00000FFF0FFF00001FFF07FE00001FFE07FC00001FFE07E000003FFC03E000003FFC0
3F000007FF801FC0000FFF000FF0001FFE0007FE00FFFC0003FFFFFFF00000FFFFFFE000
003FFFFF8000000FFFFC00000001FFC000002D427BC038>I<000001FF800000001FFFF0
0000007FFFFC000001FFFFFF000007FF807F80000FFC001F80003FF0001FC0007FE0007F
C000FFC000FFE001FF8001FFE003FF8001FFE003FF0001FFE007FE0001FFE00FFE0001FF
E00FFE0001FFE01FFC0000FFC01FFC00007F801FFC00001E003FFC000000003FFC000000
003FF8000000007FF8000000007FF8000000007FF807FC00007FF81FFF8000FFF87FFFE0
00FFF8FFFFF800FFF9F01FFC00FFFBC007FE00FFFF8003FF00FFFF8003FF80FFFF0001FF
C0FFFE0001FFC0FFFE0000FFE0FFFE0000FFE0FFFC0000FFF0FFFC0000FFF0FFFC0000FF
F0FFFC0000FFF8FFF80000FFF8FFF80000FFF8FFF80000FFF8FFF80000FFF87FF80000FF
F87FF80000FFF87FF80000FFF87FF80000FFF87FF80000FFF83FF80000FFF83FF80000FF
F83FF80000FFF03FFC0000FFF01FFC0000FFF01FFC0000FFF00FFC0001FFE00FFC0001FF
E007FE0001FFC007FF0003FF8003FF8003FF0001FFC007FE0000FFE01FFC00007FFFFFF8
00001FFFFFF0000007FFFFC0000001FFFF000000003FF000002D427BC038>I<FFFFFFFF
FFFF00000000FFFFFFFFFFFFF0000000FFFFFFFFFFFFFE000000FFFFFFFFFFFFFF800000
FFFFFFFFFFFFFFE00000003FFE00001FFFF80000003FFE000001FFFC0000003FFE000000
3FFF0000003FFE0000000FFF8000003FFE00000007FFC000003FFE00000003FFE000003F
FE00000001FFF000003FFE00000000FFF000003FFE000000007FF800003FFE000000003F
FC00003FFE000000003FFC00003FFE000000001FFE00003FFE000000001FFE00003FFE00
0000000FFF00003FFE000000000FFF00003FFE000000000FFF80003FFE000000000FFF80
003FFE0000000007FF80003FFE0000000007FFC0003FFE0000000007FFC0003FFE000000
0007FFC0003FFE0000000007FFC0003FFE0000000007FFC0003FFE0000000007FFE0003F
FE0000000007FFE0003FFE0000000007FFE0003FFE0000000007FFE0003FFE0000000007
FFE0003FFE0000000007FFE0003FFE0000000007FFE0003FFE0000000007FFE0003FFE00
00000007FFE0003FFE0000000007FFE0003FFE0000000007FFE0003FFE0000000007FFE0
003FFE0000000007FFE0003FFE0000000007FFC0003FFE0000000007FFC0003FFE000000
0007FFC0003FFE0000000007FFC0003FFE0000000007FFC0003FFE0000000007FF80003F
FE000000000FFF80003FFE000000000FFF80003FFE000000000FFF00003FFE000000001F
FF00003FFE000000001FFE00003FFE000000003FFE00003FFE000000003FFC00003FFE00
0000007FF800003FFE00000000FFF800003FFE00000000FFF000003FFE00000001FFE000
003FFE00000007FFC000003FFE0000000FFF8000003FFE0000003FFF0000003FFE000001
FFFE0000003FFE00000FFFF80000FFFFFFFFFFFFFFF00000FFFFFFFFFFFFFFC00000FFFF
FFFFFFFFFE000000FFFFFFFFFFFFF0000000FFFFFFFFFFFF000000004B447CC356>68
D<FFFFFFFFF0000000FFFFFFFFF0000000FFFFFFFFF0000000FFFFFFFFF0000000FFFFFF
FFF0000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE00000000
00003FFE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE
0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE00000000
00003FFE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE
0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE00000000
00003FFE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE
0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE00000000
00003FFE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE
0000000780003FFE0000000780003FFE0000000780003FFE0000000780003FFE0000000F
80003FFE0000000F00003FFE0000000F00003FFE0000000F00003FFE0000000F00003FFE
0000001F00003FFE0000001F00003FFE0000001F00003FFE0000003F00003FFE0000003F
00003FFE0000007E00003FFE0000007E00003FFE000000FE00003FFE000001FE00003FFE
000003FE00003FFE000007FE00003FFE00001FFE00003FFE00007FFE00003FFE0003FFFE
00FFFFFFFFFFFFFC00FFFFFFFFFFFFFC00FFFFFFFFFFFFFC00FFFFFFFFFFFFFC00FFFFFF
FFFFFFFC0039447CC343>76 D<FFFFFE0000000000007FFFFF80FFFFFF000000000000FF
FFFF80FFFFFF000000000000FFFFFF80FFFFFF800000000001FFFFFF80FFFFFF80000000
0001FFFFFF80003FFF800000000001FFFE0000003DFFC00000000003DFFE0000003DFFC0
0000000003DFFE0000003CFFE000000000079FFE0000003CFFE000000000079FFE000000
3C7FF0000000000F1FFE0000003C7FF0000000000F1FFE0000003C3FF8000000001E1FFE
0000003C3FF8000000001E1FFE0000003C1FFC000000003C1FFE0000003C1FFC00000000
3C1FFE0000003C1FFC000000003C1FFE0000003C0FFE00000000781FFE0000003C0FFE00
000000781FFE0000003C07FF00000000F01FFE0000003C07FF00000000F01FFE0000003C
03FF80000001E01FFE0000003C03FF80000001E01FFE0000003C01FFC0000003C01FFE00
00003C01FFC0000003C01FFE0000003C01FFC0000003C01FFE0000003C00FFE000000780
1FFE0000003C00FFE0000007801FFE0000003C007FF000000F001FFE0000003C007FF000
000F001FFE0000003C003FF800001E001FFE0000003C003FF800001E001FFE0000003C00
1FFC00003C001FFE0000003C001FFC00003C001FFE0000003C001FFC00003C001FFE0000
003C000FFE000078001FFE0000003C000FFE000078001FFE0000003C0007FF0000F0001F
FE0000003C0007FF0000F0001FFE0000003C0003FF8001E0001FFE0000003C0003FF8001
E0001FFE0000003C0001FFC003C0001FFE0000003C0001FFC003C0001FFE0000003C0000
FFE00780001FFE0000003C0000FFE00780001FFE0000003C0000FFE00780001FFE000000
3C00007FF00F00001FFE0000003C00007FF00F00001FFE0000003C00003FF81E00001FFE
0000003C00003FF81E00001FFE0000003C00001FFC3C00001FFE0000003C00001FFC3C00
001FFE0000003C00000FFE7800001FFE0000003C00000FFE7800001FFE0000003C00000F
FE7800001FFE0000003C000007FFF000001FFE0000003C000007FFF000001FFE0000003C
000003FFE000001FFE0000003C000003FFE000001FFE0000003C000001FFC000001FFE00
00003C000001FFC000001FFE0000003C000000FF8000001FFE0000003C000000FF800000
1FFE0000FFFFFF0000FF80007FFFFFFF80FFFFFF00007F00007FFFFFFF80FFFFFF00007F
00007FFFFFFF80FFFFFF00003E00007FFFFFFF80FFFFFF00001C00007FFFFFFF8061447C
C36A>I<FFFFFFFFFFFF000000FFFFFFFFFFFFF00000FFFFFFFFFFFFFE0000FFFFFFFFFF
FFFF8000FFFFFFFFFFFFFFE000001FFF00000FFFF000001FFF000001FFF800001FFF0000
007FFC00001FFF0000003FFE00001FFF0000001FFF00001FFF0000000FFF80001FFF0000
000FFF80001FFF0000000FFFC0001FFF00000007FFC0001FFF00000007FFC0001FFF0000
0007FFE0001FFF00000007FFE0001FFF00000007FFE0001FFF00000007FFE0001FFF0000
0007FFE0001FFF00000007FFE0001FFF00000007FFE0001FFF00000007FFE0001FFF0000
0007FFE0001FFF00000007FFC0001FFF00000007FFC0001FFF0000000FFF80001FFF0000
000FFF80001FFF0000000FFF00001FFF0000001FFF00001FFF0000003FFE00001FFF0000
007FFC00001FFF000001FFF800001FFF00000FFFF000001FFFFFFFFFFFC000001FFFFFFF
FFFF0000001FFFFFFFFFFC0000001FFFFFFFFFC00000001FFF000000000000001FFF0000
00000000001FFF000000000000001FFF000000000000001FFF000000000000001FFF0000
00000000001FFF000000000000001FFF000000000000001FFF000000000000001FFF0000
00000000001FFF000000000000001FFF000000000000001FFF000000000000001FFF0000
00000000001FFF000000000000001FFF000000000000001FFF000000000000001FFF0000
00000000001FFF000000000000001FFF000000000000001FFF000000000000001FFF0000
00000000001FFF000000000000001FFF000000000000001FFF000000000000FFFFFFFFE0
00000000FFFFFFFFE000000000FFFFFFFFE000000000FFFFFFFFE000000000FFFFFFFFE0
0000000043447DC34D>80 D<0000FFE0001C000007FFFE003C00003FFFFF807C0000FFFF
FFE0FC0001FFFFFFF9FC0003FF801FFFFC0007FC0001FFFC000FF800007FFC001FF00000
3FFC003FE000000FFC003FC0000007FC007FC0000003FC007F80000003FC007F80000001
FC007F80000000FC00FF80000000FC00FF800000007C00FF800000007C00FFC00000007C
00FFC00000007C00FFE00000003C00FFF00000003C00FFF80000003C00FFFC0000000000
7FFE00000000007FFFE0000000007FFFFE000000003FFFFFF00000003FFFFFFF0000001F
FFFFFFE000001FFFFFFFFC00000FFFFFFFFE000007FFFFFFFF800003FFFFFFFFC00001FF
FFFFFFE000007FFFFFFFF000001FFFFFFFF8000007FFFFFFFC000000FFFFFFFC0000000F
FFFFFE00000000FFFFFE0000000007FFFF00000000007FFF00000000003FFF0000000000
0FFF800000000007FF800000000003FF80F000000003FF80F000000001FF80F000000001
FF80F000000000FF80F000000000FF80F800000000FF80F800000000FF80F800000000FF
00FC00000000FF00FC00000000FF00FE00000001FF00FF00000001FE00FF80000003FE00
FFC0000003FC00FFE0000007FC00FFF800000FF800FFFF00003FF000FFFFF800FFE000FE
7FFFFFFFC000FC1FFFFFFF0000F807FFFFFC0000F000FFFFF00000E00007FF8000003146
7AC43E>83 D<3FFFFFFFFFFFFFFFE03FFFFFFFFFFFFFFFE03FFFFFFFFFFFFFFFE03FFFFF
FFFFFFFFFFE03FFFFFFFFFFFFFFFE03FFE000FFF8003FFE07FE0000FFF80003FF07FC000
0FFF80001FF07F00000FFF800007F07F00000FFF800007F07E00000FFF800003F07C0000
0FFF800001F07C00000FFF800001F07C00000FFF800001F07800000FFF800000F0780000
0FFF800000F07800000FFF800000F07800000FFF800000F0F800000FFF800000F8F00000
0FFF80000078F000000FFF80000078F000000FFF80000078F000000FFF80000078F00000
0FFF800000780000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000000000FFF80000000000000
0FFF800000000000000FFF800000000000000FFF800000000007FFFFFFFFFF00000007FF
FFFFFFFF00000007FFFFFFFFFF00000007FFFFFFFFFF00000007FFFFFFFFFF000045437C
C24E>I<FFFFFFFF80000FFFFFF8FFFFFFFF80000FFFFFF8FFFFFFFF80000FFFFFF8FFFF
FFFF80000FFFFFF8FFFFFFFF80000FFFFFF8003FFE0000000003E000003FFE0000000003
E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000003FFE00
00000003E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000
003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000003FFE000000
0003E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000003F
FE0000000003E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003
E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000003FFE00
00000003E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000
003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000003FFE000000
0003E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000003F
FE0000000003E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003
E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000003FFE00
00000003E000003FFE0000000003E000003FFE0000000003E000003FFE0000000003E000
001FFE0000000007E000001FFE0000000007C000001FFF0000000007C000001FFF000000
000FC000000FFF000000000F8000000FFF800000001F80000007FF800000001F00000003
FFC00000003F00000003FFC00000007E00000001FFE0000000FC00000000FFF0000003FC
000000007FFC000007F8000000003FFF00003FF0000000000FFFF003FFE00000000007FF
FFFFFF800000000001FFFFFFFF0000000000007FFFFFFC0000000000000FFFFFE0000000
000000007FFE000000004D457CC356>I<0001FFE0000000001FFFFE000000007FFFFF80
000001FFFFFFE0000003FE007FF8000007FC001FFC000007FE000FFE00000FFF0007FF00
000FFF0007FF00000FFF0003FF80000FFF0003FF80000FFF0003FF80000FFF0001FFC000
07FE0001FFC00003FC0001FFC00000F00001FFC00000000001FFC00000000001FFC00000
000001FFC00000000001FFC000000003FFFFC0000000FFFFFFC0000007FFFFFFC000003F
FFF1FFC00000FFFC01FFC00003FFE001FFC00007FF8001FFC0001FFE0001FFC0003FFC00
01FFC0003FF80001FFC0007FF80001FFC0007FF00001FFC000FFF00001FFC000FFE00001
FFC000FFE00001FFC000FFE00001FFC000FFE00003FFC000FFE00003FFC000FFF00007FF
C0007FF8000FFFC0007FF8001FFFF0003FFE003EFFFFC01FFF80FC7FFFC007FFFFF87FFF
C003FFFFE01FFFC0007FFF8007FFC0000FFC00000000322F7DAD36>97
D<00003FFC00000001FFFFC000000FFFFFF000003FFFFFFC00007FF003FE0000FFC001FF
0003FF8003FF0007FF0007FF8007FE0007FF800FFE0007FF801FFC0007FF801FFC0007FF
803FF80007FF803FF80003FF007FF80001FE007FF8000078007FF0000000007FF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
00FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF0000000
007FF8000000007FF8000000007FF8000000003FF8000000003FFC000003C03FFC000003
C01FFE000007C00FFE000007800FFF00000F8007FF80001F0003FFC0003E0001FFF0007C
00007FFC03F800003FFFFFF000000FFFFFC0000003FFFF000000003FF800002A2F7CAD32
>99 D<0000000003FE0000000007FFFE0000000007FFFE0000000007FFFE0000000007FF
FE0000000007FFFE00000000001FFE00000000000FFE00000000000FFE00000000000FFE
00000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE00
000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE0000
0000000FFE00000000000FFE00000000000FFE00000000000FFE0000003FE00FFE000003
FFFC0FFE00000FFFFF8FFE00003FFFFFCFFE0000FFF807FFFE0001FFC001FFFE0003FF80
007FFE0007FF00003FFE000FFE00001FFE000FFC00000FFE001FFC00000FFE003FF80000
0FFE003FF800000FFE003FF800000FFE007FF800000FFE007FF000000FFE007FF000000F
FE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE
00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00
FFF000000FFE00FFF000000FFE007FF000000FFE007FF000000FFE007FF000000FFE007F
F800000FFE003FF800000FFE003FF800000FFE001FFC00001FFE001FFC00001FFE000FFE
00003FFE0007FE00007FFE0003FF0000FFFF0001FFC003FFFFFC00FFF01FEFFFFC007FFF
FF8FFFFC001FFFFE0FFFFC0007FFF80FFFFC00007FC00FF80036467CC43E>I<00003FF8
00000003FFFF8000000FFFFFE000003FFFFFF000007FF83FF80000FFC007FC0001FF8003
FE0003FF0001FF0007FE0000FF800FFC0000FF801FFC00007FC01FF800007FC03FF80000
3FE03FF800003FE07FF800003FE07FF000003FE07FF000003FF07FF000001FF0FFF00000
1FF0FFF000001FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFF00000
0000FFF000000000FFF000000000FFF000000000FFF0000000007FF0000000007FF00000
00007FF8000000007FF8000000003FF8000000003FF8000000F01FFC000000F01FFC0000
01F00FFE000001E007FF000003E003FF800007C001FFC0000F8000FFF0003F00007FFE01
FE00001FFFFFFC000007FFFFF0000001FFFFC00000001FFE00002C2F7DAD33>I<0000FF
E0007E00000FFFFE03FF80003FFFFF8FFF8000FFFFFFFFFFC001FFC07FFF3FC003FF001F
F83FC007FE000FFC3FC00FFC0007FE1F801FFC0007FF0F001FF80003FF00001FF80003FF
00003FF80003FF80003FF80003FF80003FF80003FF80003FF80003FF80003FF80003FF80
003FF80003FF80003FF80003FF80003FF80003FF80001FF80003FF00001FF80003FF0000
1FFC0007FF00000FFC0007FE000007FE000FFC000003FF001FF8000001FFC07FF0000003
FFFFFFE0000003FFFFFF800000078FFFFE0000000780FFE00000000F8000000000000F80
00000000000F8000000000000F8000000000000FC000000000000FE000000000000FF000
000000000FFFFFFFC000000FFFFFFFFC000007FFFFFFFF800007FFFFFFFFE00003FFFFFF
FFF00001FFFFFFFFFC0000FFFFFFFFFC0003FFFFFFFFFE000FFFFFFFFFFF001FF000007F
FF003FC0000007FF007F80000001FF807F80000000FF80FF00000000FF80FF000000007F
80FF000000007F80FF000000007F80FF000000007F80FF80000000FF807F80000000FF00
7FC0000001FF003FE0000003FE001FF0000007FC000FFE00003FF80007FFC001FFF00001
FFFFFFFFC000007FFFFFFF0000000FFFFFF8000000007FFF00000032427DAC38>103
D<007FC000000000FFFFC000000000FFFFC000000000FFFFC000000000FFFFC000000000
FFFFC00000000003FFC00000000001FFC00000000001FFC00000000001FFC00000000001
FFC00000000001FFC00000000001FFC00000000001FFC00000000001FFC00000000001FF
C00000000001FFC00000000001FFC00000000001FFC00000000001FFC00000000001FFC0
0000000001FFC00000000001FFC00000000001FFC00000000001FFC007FE000001FFC03F
FF800001FFC0FFFFE00001FFC1FFFFF80001FFC7F03FFC0001FFCF801FFC0001FFDF000F
FE0001FFDE000FFE0001FFFC000FFE0001FFF80007FF0001FFF00007FF0001FFF00007FF
0001FFE00007FF0001FFE00007FF0001FFE00007FF0001FFC00007FF0001FFC00007FF00
01FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FF
C00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC0
0007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC000
07FF0001FFC00007FF0001FFC00007FF00FFFFFF83FFFFFEFFFFFF83FFFFFEFFFFFF83FF
FFFEFFFFFF83FFFFFEFFFFFF83FFFFFE37457CC43E>I<007C0001FF0003FF8007FFC007
FFC00FFFE00FFFE00FFFE00FFFE00FFFE007FFC007FFC003FF8001FF00007C0000000000
0000000000000000000000000000000000000000000000000000007FC07FFFC07FFFC07F
FFC07FFFC07FFFC003FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001
FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001
FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001
FFC0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF18467CC520>I<007FC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC00003FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000
01FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC000FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF8019457CC420>108 D<007F8007FE00000FFC0000FFFF803F
FFC0007FFF8000FFFF80FFFFF001FFFFE000FFFF81FFFFF803FFFFF000FFFF87F01FFC0F
E03FF800FFFF8FC00FFE1F801FFC0003FF9F000FFF3E001FFE0001FF9E0007FF3C000FFE
0001FFBC0007FF78000FFE0001FFF80003FFF00007FF0001FFF80003FFF00007FF0001FF
F00003FFE00007FF0001FFE00003FFC00007FF0001FFE00003FFC00007FF0001FFE00003
FFC00007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF8000
07FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF00
01FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC0
0003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF
800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007
FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001
FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC000
03FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF00FFFFFF81FFFFFF
03FFFFFEFFFFFF81FFFFFF03FFFFFEFFFFFF81FFFFFF03FFFFFEFFFFFF81FFFFFF03FFFF
FEFFFFFF81FFFFFF03FFFFFE572D7CAC5E>I<007F8007FE0000FFFF803FFF8000FFFF80
FFFFE000FFFF81FFFFF800FFFF87F03FFC00FFFF8F801FFC0003FF9F000FFE0001FF9E00
0FFE0001FFBC000FFE0001FFF80007FF0001FFF00007FF0001FFF00007FF0001FFE00007
FF0001FFE00007FF0001FFE00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF
0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00
01FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FF
C00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC0
0007FF0001FFC00007FF00FFFFFF83FFFFFEFFFFFF83FFFFFEFFFFFF83FFFFFEFFFFFF83
FFFFFEFFFFFF83FFFFFE372D7CAC3E>I<00001FFC0000000001FFFFC000000007FFFFF0
0000001FFFFFFC0000007FF80FFF000000FFC001FF800001FF8000FFC00003FE00003FE0
0007FE00003FF0000FFC00001FF8000FF800000FF8001FF800000FFC001FF800000FFC00
3FF800000FFE003FF0000007FE007FF0000007FF007FF0000007FF007FF0000007FF007F
F0000007FF00FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0
000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF000
0007FF807FF0000007FF007FF0000007FF007FF0000007FF007FF0000007FF003FF80000
0FFE003FF800000FFE001FF800000FFC001FFC00001FFC000FFC00001FF80007FE00003F
F00007FE00003FF00003FF8000FFE00001FFC001FFC000007FF80FFF0000003FFFFFFE00
00000FFFFFF800000001FFFFC0000000001FFC000000312F7DAD38>I<007FC00FF80000
FFFFC0FFFF8000FFFFC3FFFFE000FFFFCFFFFFF800FFFFDFC03FFC00FFFFFF001FFE0003
FFFC0007FF0001FFF80003FF8001FFF00003FFC001FFE00001FFE001FFC00001FFE001FF
C00000FFF001FFC00000FFF001FFC000007FF801FFC000007FF801FFC000007FF801FFC0
00007FF801FFC000003FFC01FFC000003FFC01FFC000003FFC01FFC000003FFC01FFC000
003FFC01FFC000003FFC01FFC000003FFC01FFC000003FFC01FFC000003FFC01FFC00000
3FFC01FFC000003FFC01FFC000003FFC01FFC000007FF801FFC000007FF801FFC000007F
F801FFC000007FF001FFC00000FFF001FFC00000FFF001FFC00001FFE001FFE00001FFC0
01FFF00003FFC001FFF80007FF8001FFFC000FFF0001FFFE001FFE0001FFDFC07FFC0001
FFCFFFFFF00001FFC3FFFFC00001FFC0FFFF000001FFC01FF0000001FFC00000000001FF
C00000000001FFC00000000001FFC00000000001FFC00000000001FFC00000000001FFC0
0000000001FFC00000000001FFC00000000001FFC00000000001FFC00000000001FFC000
00000001FFC000000000FFFFFF80000000FFFFFF80000000FFFFFF80000000FFFFFF8000
0000FFFFFF8000000036407DAC3E>I<007F807F00FFFF81FFE0FFFF83FFF0FFFF8FFFF8
FFFF8F8FFCFFFF9F1FFE03FFBE1FFE01FFBC1FFE01FFF81FFE01FFF81FFE01FFF01FFE01
FFF00FFC01FFE007F801FFE001E001FFE0000001FFE0000001FFE0000001FFC0000001FF
C0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0
000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC000
0001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC00000
FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000272D7DAC2E>114
D<001FFC038000FFFF878003FFFFFF800FFFFFFF801FF003FF803FC000FF803F80003F80
7F00001F807E00001F80FE00000F80FE00000F80FE00000780FF00000780FF00000780FF
80000780FFE0000000FFFE0000007FFFF000007FFFFF00003FFFFFC0003FFFFFF0001FFF
FFFC000FFFFFFE0003FFFFFF0001FFFFFF80007FFFFF80000FFFFFC000003FFFC0000003
FFE0000000FFE0F000003FE0F000003FE0F800001FE0F800000FE0F800000FE0FC00000F
E0FC00000FE0FE00000FC0FF00001FC0FF00001FC0FF80003F80FFE0007F00FFF803FE00
FFFFFFFC00FCFFFFF800F03FFFE000E007FE0000232F7CAD2C>I<0001E000000001E000
000001E000000001E000000001E000000003E000000003E000000003E000000003E00000
0007E000000007E00000000FE00000000FE00000001FE00000001FE00000003FE0000000
7FE0000000FFE0000003FFE000000FFFFFFF80FFFFFFFF80FFFFFFFF80FFFFFFFF80FFFF
FFFF8000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0
000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE000
0000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE00000
00FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000FFE001E000
FFE001E000FFE001E000FFE003E000FFF003C0007FF003C0007FF007C0003FF80F80001F
FC1F00000FFFFF000007FFFC000001FFF80000003FE00023407EBE2C>I<007FC00001FF
00FFFFC003FFFF00FFFFC003FFFF00FFFFC003FFFF00FFFFC003FFFF00FFFFC003FFFF00
03FFC0000FFF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FF
C00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC0
0007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC000
07FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007
FF0001FFC00007FF0001FFC0000FFF0001FFC0000FFF0001FFC0001FFF0001FFC0001FFF
0001FFC0003FFF0000FFC0003FFF0000FFE0007FFF80007FE001F7FFFE007FF807E7FFFE
003FFFFFC7FFFE000FFFFF07FFFE0003FFFE07FFFE00007FF007FC00372E7CAC3E>I<FF
FFFF0003FFFCFFFFFF0003FFFCFFFFFF0003FFFCFFFFFF0003FFFCFFFFFF0003FFFC01FF
E000003E0000FFE000003C0000FFF000003C00007FF000007800007FF800007800007FF8
0000F800003FF80000F000003FFC0001F000001FFC0001E000001FFE0003E000000FFE00
03C000000FFF0007C0000007FF000780000007FF800F80000003FF800F00000003FFC00F
00000003FFC01F00000001FFE01E00000001FFE03E00000000FFE03C00000000FFF07C00
0000007FF078000000007FF8F8000000003FF8F0000000003FFDF0000000001FFDE00000
00001FFFE0000000000FFFC0000000000FFFC0000000000FFFC00000000007FF80000000
0007FF800000000003FF000000000003FF000000000001FE000000000001FE0000000000
00FC000000000000FC00000000000078000000362C7EAB3B>I<FFFFFF0003FFFCFFFFFF
0003FFFCFFFFFF0003FFFCFFFFFF0003FFFCFFFFFF0003FFFC01FFE000003E0000FFE000
003C0000FFF000003C00007FF000007800007FF800007800007FF80000F800003FF80000
F000003FFC0001F000001FFC0001E000001FFE0003E000000FFE0003C000000FFF0007C0
000007FF000780000007FF800F80000003FF800F00000003FFC00F00000003FFC01F0000
0001FFE01E00000001FFE03E00000000FFE03C00000000FFF07C000000007FF078000000
007FF8F8000000003FF8F0000000003FFDF0000000001FFDE0000000001FFFE000000000
0FFFC0000000000FFFC0000000000FFFC00000000007FF800000000007FF800000000003
FF000000000003FF000000000001FE000000000001FE000000000000FC000000000000FC
0000000000007800000000000078000000000000F8000000000000F0000000000001F000
0000000001E00000001F0003E00000003F8003C00000007FC007C0000000FFE007800000
00FFE00F80000000FFE00F00000000FFE01F00000000FFE03E00000000FFC07C00000000
7FC1F8000000007F07F0000000003FFFE0000000001FFFC00000000007FF000000000001
FC000000000036407EAB3B>121 D<0000001F0000000000003F8000000000007FC00000
000000FFC00000000001FFE00000000003FFE00000000007FFE0000000000FFFE0000000
001FFFE0000000003FFFC0000000007FFF8000000000FFFC0000000001FFF00000000003
FF800000000001FC000000000001E0000000000000800000000000000000000000000000
000000000000000000000000001FFC0000000001FFFFC000000007FFFFF00000001FFFFF
FC0000007FF80FFF000000FFC001FF800001FF8000FFC00003FE00003FE00007FE00003F
F0000FFC00001FF8000FF800000FF8001FF800000FFC001FF800000FFC003FF800000FFE
003FF0000007FE007FF0000007FF007FF0000007FF007FF0000007FF007FF0000007FF00
FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FF
F0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF807FF0
000007FF007FF0000007FF007FF0000007FF007FF0000007FF003FF800000FFE003FF800
000FFE001FF800000FFC001FFC00001FFC000FFC00001FF80007FE00003FF00007FE0000
3FF00003FF8000FFE00001FFC001FFC000007FF80FFF0000003FFFFFFE0000000FFFFFF8
00000001FFFFC0000000001FFC00000031437DC138>243 D E
%EndDVIPSBitmapFont
/Fg 196[91 59[{}1 90.9091 /LASY10 rf /Fh 194[71 9[45
45 45 45 4[71 1[35 35 40[{}8 90.9091 /CMR10 rf /Fi 199[51
1[0 33[71 18[25 71{}5 90.9091 /CMSY10 rf /Fj 194[55 10[35
35 35 4[55 43[{}5 66.4176 /CMR8 rf /Fk 134[45 52 12[47
37 31 8[38 7[75 11[62 16[25 25 58[{}10 90.9091 /CMMI10
rf
%DVIPSBitmapFont: Fl ecrm1000 10 24
/Fl 24 242 df<1C007F00FF80FF80FF80FF80FF807F001C000909798817>46
D<00000006000000060000000E0000000C0000000C0000001C0000001800000038000000
3000000030000000700000006000000060000000E0000000C0000000C0000001C0000001
8000000180000003800000030000000700000006000000060000000E0000000C0000000C
0000001C00000018000000180000003800000030000000300000007000000060000000E0
000000C0000000C0000001C0000001800000018000000380000003000000030000000700
000006000000060000000E0000000C0000001C0000001800000018000000380000003000
000030000000700000006000000060000000E0000000C0000000C0000001C00000018000
000380000003000000030000000700000006000000060000000E0000000C0000000C0000
001C00000018000000180000003800000030000000700000006000000060000000E00000
00C0000000C00000001F537BBD2A>I<0003F80000001FFF0000007E0FC00000F803E000
01E000F00003C000780007C0007C000F80003E000F80003E001F00001F001F00001F003F
00001F803F00001F803F00001F807E00000FC07E00000FC07E00000FC07E00000FC07E00
000FC0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE0000
0FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000F
E0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE07E00000FC07E00000FC0
7E00000FC07E00000FC07F00001FC03F00001F803F00001F803F00001F801F00001F001F
00001F000F80003E000F80003E0007C0007C0003E000F80003F001F80000F803E000007E
0FC000001FFF00000003F8000023397DB62A>I<0001C0000003C0000007C000001FC000
00FFC000FFFFC000FFFFC000FF1FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000003FE0007FFFFFF07FFFFFF07FFFFFF01C3779B62A>I<000FF00000
007FFE000001FFFF800003E03FE0000F000FF0001E0007F8001C0003FC00380001FE0070
0001FE00700000FF00600000FF00FE0000FF00FF00007F80FF80007F80FF80007F80FF80
007F80FF80007F80FF80007F807F00007F801C00007F800000007F80000000FF00000000
FF00000000FE00000001FE00000001FC00000003FC00000003F800000007F00000000FE0
0000000FC00000001F800000003F000000007E00000000FC00000001F800000001E00000
0003C000000007800000000F000000001E000180003C000180007800018000F000038001
E000030003C0000300078000030007000007000FFFFFFF001FFFFFFF003FFFFFFF007FFF
FFFE00FFFFFFFE00FFFFFFFE00FFFFFFFE0021377CB62A>I<0007F80000003FFF000000
FFFFC00001F80FF00003C007F800078003FC000E0001FE000F8001FE001FE000FF001FF0
00FF001FF000FF001FF000FF001FF000FF001FF000FF000FE000FF0007C000FF00000001
FE00000001FE00000001FC00000003FC00000003F800000007F000000007E00000000F80
0000007F0000001FFC0000001FFF800000000FE000000007F000000001FC00000001FE00
000000FF000000007F800000007F800000007FC00000007FC00000003FC00000003FE000
00003FE01E00003FE07F80003FE07F80003FE0FFC0003FE0FFC0003FE0FFC0003FE0FFC0
003FC0FFC0007FC0FF80007F807E00007F80700000FF00380001FE001E0001FE000F8003
F80007F00FF00001FFFFC000007FFF0000000FF8000023397DB62A>I<00000038000000
0038000000007800000000F800000000F800000001F800000003F800000007F800000007
F80000000FF80000001FF80000001BF800000033F800000073F800000063F8000000C3F8
000001C3F800000183F800000303F800000703F800000603F800000C03F800001C03F800
001803F800003003F800007003F800006003F80000C003F80001C003F800038003F80003
0003F800070003F8000E0003F8000C0003F800180003F800380003F800300003F8006000
03F800E00003F800FFFFFFFFF8FFFFFFFFF8FFFFFFFFF8000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8
00000007FC000003FFFFF80003FFFFF80003FFFFF825387EB72A>I<0000003800000000
000038000000000000380000000000007C0000000000007C0000000000007C0000000000
00FE000000000000FE000000000000FE000000000001FF000000000001FF000000000001
FF0000000000037F8000000000037F8000000000077FC000000000063FC000000000063F
C0000000000E3FE0000000000C1FE0000000000C1FE0000000001C1FF000000000180FF0
00000000180FF000000000380FF8000000003007F8000000003007F8000000007007FC00
0000006003FC000000006003FC00000000C003FE00000000C001FE00000000C001FE0000
00018001FF000000018000FF000000018000FF000000030000FF8000000300007F800000
0300007F8000000600007FC0000007FFFFFFC0000007FFFFFFC000000FFFFFFFE000000C
00001FE000000C00001FE000001800000FF000001800000FF000001800000FF000003000
0007F8000030000007F8000030000007F8000060000003FC000060000003FC0000E00000
03FC0000E0000001FE0001E0000001FE0003F0000001FF000FFC000007FF80FFFF8000FF
FFFEFFFF8000FFFFFEFFFF8000FFFFFE373C7DBB3E>65 D<000001FF80018000000FFFE0
038000007FFFF803800001FF807E07800003FC000F0F80000FF000039F80001FE00001DF
80003F800000FF80007F0000007F8000FE0000003F8001FE0000003F8003FC0000001F80
07F80000000F8007F80000000F800FF000000007800FF000000007801FE000000007801F
E000000003803FE000000003803FC000000003807FC000000001807FC000000001807FC0
00000001807F800000000180FF800000000000FF800000000000FF800000000000FF8000
00000000FF800000000000FF800000000000FF800000000000FF800000000000FF800000
000000FF800000000000FF800000000000FF800000000000FF8000000000007F80000000
00007FC000000001807FC000000001807FC000000001803FC000000001803FE000000001
801FE000000003801FE000000003000FF000000003000FF0000000070007F80000000700
07F8000000060003FC0000000E0001FE0000001C0000FE0000001800007F000000380000
3F8000007000001FE00000E000000FF00003C0000003FC000F80000001FF803F00000000
7FFFFC000000000FFFF00000000001FF800000313D7BBA3C>67 D<FFFFFFFFFFF8FFFFFF
FFFFF8FFFFFFFFFFF801FF80001FF800FF000001F800FF000000FC00FF0000007C00FF00
00003C00FF0000001C00FF0000001C00FF0000000C00FF0000000C00FF0000000C00FF00
00000C00FF0000000E00FF0000000600FF0000000600FF0001800600FF0001800600FF00
01800000FF0001800000FF0001800000FF0001800000FF0003800000FF0003800000FF00
07800000FF001F800000FFFFFF800000FFFFFF800000FFFFFF800000FF001F800000FF00
07800000FF0003800000FF0003800000FF0001800000FF0001800000FF0001800000FF00
01800000FF0001800000FF0001800000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000001FFC0000000FFFFFFC00000FFFFFF
C00000FFFFFFC000002F397DB836>70 D<FFFF0000000007FFF8FFFF800000000FFFF8FF
FF800000000FFFF801FF800000000FFC0000DFC00000001BF80000DFC00000001BF80000
CFE000000033F80000CFE000000033F80000CFE000000033F80000C7F000000063F80000
C7F000000063F80000C7F000000063F80000C3F8000000C3F80000C3F8000000C3F80000
C1FC00000183F80000C1FC00000183F80000C1FC00000183F80000C0FE00000303F80000
C0FE00000303F80000C07F00000603F80000C07F00000603F80000C07F00000603F80000
C03F80000C03F80000C03F80000C03F80000C03F80000C03F80000C01FC0001803F80000
C01FC0001803F80000C00FE0003003F80000C00FE0003003F80000C00FE0003003F80000
C007F0006003F80000C007F0006003F80000C003F800C003F80000C003F800C003F80000
C003F800C003F80000C001FC018003F80000C001FC018003F80000C001FC018003F80000
C000FE030003F80000C000FE030003F80000C0007F060003F80000C0007F060003F80000
C0007F060003F80000C0003F8C0003F80000C0003F8C0003F80000C0001FD80003F80000
C0001FD80003F80000C0001FD80003F80000C0000FF00003F80000C0000FF00003F80000
C0000FF00003F80001E00007E00003F80003F00007E00003F8000FFC0003C00007FC00FF
FFC003C003FFFFF8FFFFC003C003FFFFF8FFFFC0018003FFFFF845397DB84C>77
D<001FE0000000FFFC000003E03F000007000F80000F8007E0001FC003F0001FE003F000
1FE001F8001FE001F8001FE000FC000FC000FC00078000FC00000000FC00000000FC0000
0000FC00000000FC0000007FFC000007FFFC00003FE0FC0000FE00FC0003F800FC000FF0
00FC001FC000FC003FC000FC007F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000
FC0CFE0000FC0CFE0001FC0CFE0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E
180FE0781FF003FFF00FE0007F8007C026277DA52A>97 D<0003FC00001FFF80007E03E0
01F8007003F000F807E001FC0FC003FC0FC003FC1F8003FC3F8003FC3F0001F87F0000F0
7F0000007F0000007E000000FE000000FE000000FE000000FE000000FE000000FE000000
FE000000FE000000FE000000FE0000007E0000007F0000007F0000003F0000063F800006
1F80000E1FC0000C0FC0001C07E0003803F0007001F800E0007C07C0001FFF000007F800
1F277DA525>99 D<0000000FC0000003FFC0000003FFC0000003FFC00000003FC0000000
0FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000F
C00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0
0000000FC00003F80FC0001FFF0FC0007E078FC000F801EFC003F0007FC007E0003FC00F
C0001FC00FC0001FC01F80000FC03F80000FC03F00000FC07F00000FC07F00000FC07E00
000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE0000
0FC0FE00000FC0FE00000FC0FE00000FC07E00000FC07F00000FC07F00000FC03F00000F
C03F00000FC01F80001FC01F80001FC00FC0003FC007E0007FC003F000EFF001F801CFFF
007C078FFF001FFE0FFF0007F80FC0283B7DB92E>I<0007F800001FFF00007C0FC001F8
03E003F001F007E001F80FC000F81F80007C1F80007C3F00007E3F00003E7F00003E7F00
003F7E00003FFE00003FFE00003FFE00003FFFFFFFFFFFFFFFFFFE000000FE000000FE00
0000FE000000FE0000007E0000007E0000007F0000007F0000003F0000033F8000031F80
00070FC0000607C0000E07E0001C01F0003800F80070007E03E0001FFF800003FC002027
7EA525>I<0380000FE0001FF0001FF0001FF0001FF0001FF0000FE00003800000000000
000000000000000000000000000000000000000000000000000003F000FFF000FFF000FF
F00007F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC012387EB717>
105 D<03F000FFF000FFF000FFF0000FF00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC0123A7E
B917>108 D<03F00FF0001FE000FFF03FFC007FF800FFF0F03F01E07E00FFF1C01F8380
3F000FF3800FC7001F8003F7000FCE001F8003FE000FDC001F8003FC0007F8000FC003FC
0007F8000FC003F80007F0000FC003F80007F0000FC003F80007F0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F0
0007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F0
0007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC007F8000FF0001FE0FFFFC1FFFF83FFFFFFFF
C1FFFF83FFFFFFFFC1FFFF83FFFF40257EA445>I<0003FE0000000FFF8000003E03E000
00F800F80001F0007C0003E0003E0007C0001F000F80000F801F80000FC01F000007C03F
000007E03F000007E07E000003F07E000003F07E000003F07E000003F0FE000003F8FE00
0003F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE0000
03F87E000003F07E000003F07F000007F03F000007E03F000007E01F80000FC00F80000F
800FC0001F8007E0003F0003F0007E0000F800F800007E03F000001FFFC0000003FE0000
25277EA52A>111 D<00FF030003FFE7000F80FF001E003F003C001F0078000F00700007
00F0000700F0000700F0000300F8000300F8000300FC000300FF0000007FE000007FFF00
003FFFE0001FFFF8000FFFFC0003FFFE0000FFFF000007FF8000007F8000001F80C0000F
C0C00007C0C00007C0E00003C0E00003C0E00003C0F00003C0F0000380F8000780FC0007
80FC000F00FF001E00F3C07C00E1FFF000C03F80001A277DA521>115
D<0018000000180000001800000018000000180000003800000038000000380000007800
00007800000078000000F8000001F8000003F8000007F800001FFFFF00FFFFFF00FFFFFF
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F800C001F800C001F800C001F800C001F800C001F800C001F800C001F800C001F800
C000FC01C000FC0180007C0380007E0300003F0700000FFE000001F8001A347FB220>I<
03F00007E000FFF001FFE000FFF001FFE000FFF001FFE0000FF0001FE00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F0000FE00003F0000FE00003F0000FE000
03F0001FE00001F0001FE00001F8003FE00000F80077F80000FC00E7FF80003F03C7FF80
001FFF87FF800003FC07E00029267EA42E>I<000003000000000F800000001FC0000000
3FC00000007FC0000000FF80000001FE00000003F800000007F00000000FC00000001F00
0000001C0000000010000000000000000000000000000000000000001FE0000000FFFC00
0003E03F000007000F80000F8007E0001FC003F0001FE003F0001FE001F8001FE001F800
1FE000FC000FC000FC00078000FC00000000FC00000000FC00000000FC00000000FC0000
007FFC000007FFFC00003FE0FC0000FE00FC0003F800FC000FF000FC001FC000FC003FC0
00FC007F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000FC0CFE0000FC0CFE0001
FC0CFE0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E180FE0781FF003FFF00F
E0007F8007C026377DB52A>225 D<0003C0008000000FF001C000001FFC038000003FFF
0F000000787FFE000000E01FFC000001C007F80000008001F00000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000003F00FF00000FFF03FFC0000FFF0F0
3F0000FFF1C01F80000FF3800FC00003F7000FC00003FE000FC00003FC0007E00003FC00
07E00003F80007E00003F80007E00003F80007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029387EB72E>241
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm ecbx1000 10 11
/Fm 11 226 df<FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC1E397DB824>73 D<003FFE00000003FFFF
E000000FFFFFF800001FF00FFE00003FF003FF00003FF801FF80003FF800FFC0003FF800
FFC0003FF8007FE0003FF8007FE0001FF0007FE0000FE0007FE0000380007FE000000000
7FE0000000007FE00000003FFFE000000FFFFFE000007FFFFFE00001FFF87FE00007FF80
7FE0000FFE007FE0003FF8007FE0003FF0007FE0007FE0007FE000FFE0007FE000FFC000
7FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC000FFE000FFE001FFE0007FE001
FFE0003FF007FFF8001FFC1FBFFFC00FFFFE1FFFC003FFF80FFFC0003FE003FFC02A257D
A42E>97 D<0001FFC000000FFFFC00007FFFFF0000FF80FF8003FE00FFC007FC01FFC00F
F801FFC01FF801FFC01FF001FFC03FF001FFC03FF000FF807FE0007F007FE0001C007FE0
000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE000
0000FFE0000000FFE00000007FE00000007FE00000007FF00000003FF00000003FF00001
E01FF80001E01FF80003E00FFC0007C007FE00078003FF001F8000FFC07E00007FFFFC00
000FFFF0000001FF800023257DA42A>99 D<00001FF0000001FFFC000007FFFF00001FF8
7F80003FE0FF8000FFC1FFC000FFC1FFC001FF81FFC001FF81FFC003FF01FFC003FF00FF
8003FF00FF8003FF003E0003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FFFFFF0000FFFFFF000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE0000223A7DB91D>102
D<01F00007FC000FFE000FFE001FFF001FFF001FFF001FFF001FFF000FFE000FFE0007FC
0001F00000000000000000000000000000000000000000000000000000000000FF007FFF
007FFF007FFF007FFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFFF8FFFFF8FFFFF8153B
7DBA1B>105 D<00FE007FE0000FFC0000FFFE01FFFC003FFF8000FFFE07FFFF00FFFFE0
00FFFE1F81FF83F03FF000FFFE3C00FF87801FF00007FE7800FFCF001FF80003FEF000FF
DE001FF80003FFE0007FFC000FFC0003FFC0007FF8000FFC0003FFC0007FF8000FFC0003
FF80007FF0000FFC0003FF80007FF0000FFC0003FF00007FE0000FFC0003FF00007FE000
0FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00
007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC
0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007F
E0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003
FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE000
0FFC0003FF00007FE0000FFC00FFFFFC1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF0FFFFFC
1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF04C257DA451>109 D<00FE007FC000FFFE03FF
F800FFFE0FFFFE00FFFE1F03FF00FFFE3C01FF8007FE7801FF8003FEF000FF8003FFE000
FFC003FFC000FFC003FFC000FFC003FF8000FFC003FF8000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC0FFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFF30257DA4
35>I<0001FFC00000000FFFF80000007FFFFF000000FF80FF800003FE003FE00007FC00
1FF0000FF8000FF8001FF00007FC001FF00007FC003FF00007FE003FE00003FE007FE000
03FF007FE00003FF007FE00003FF00FFE00003FF80FFE00003FF80FFE00003FF80FFE000
03FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF807FE000
03FF007FE00003FF007FE00003FF003FE00003FE003FF00007FE001FF00007FC001FF000
07FC000FF8000FF80007FC001FF00003FE003FE00001FF80FFC000007FFFFF0000001FFF
FC00000001FFC0000029257DA430>I<00FE03F000FFFE0FFE00FFFE3FFF00FFFE7C7F80
FFFEF8FFC007FEF0FFC003FFE0FFC003FFC0FFC003FFC0FFC003FF807F8003FF803F0003
FF800C0003FF80000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
00FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE000022257EA427>114
D<000F0000000F0000000F0000000F0000000F0000001F0000001F0000001F0000001F00
00003F0000003F0000007F000000FF000000FF000001FF000007FF00001FFFFFE0FFFFFF
E0FFFFFFE0FFFFFFE003FF000003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF007803FF007803FF007803FF007803FF007803FF007803FF00
7803FF007803FF00F801FF80F001FF81F000FFC3E0003FFFC0001FFF800003FE001D357E
B425>116 D<000007C0000000000FE0000000001FF0000000003FF8000000007FF80000
0000FFF800000001FFF800000003FFF000000007FFF00000000FFFC00000001FFE000000
000FF0000000000F80000000000400000000000000000000000000000000000000000000
000000000000003FFE00000003FFFFE000000FFFFFF800001FF00FFE00003FF003FF0000
3FF801FF80003FF800FFC0003FF800FFC0003FF8007FE0003FF8007FE0001FF0007FE000
0FE0007FE0000380007FE0000000007FE0000000007FE00000003FFFE000000FFFFFE000
007FFFFFE00001FFF87FE00007FF807FE0000FFE007FE0003FF8007FE0003FF0007FE000
7FE0007FE000FFE0007FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC0007FE000
FFC000FFE000FFE001FFE0007FE001FFE0003FF007FFF8001FFC1FBFFFC00FFFFE1FFFC0
03FFF80FFFC0003FE003FFC02A377DB62E>225 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn ecrm1095 10.95 62
/Fn 62 251 df<000003FE000000001FFFC0000000FE01E0000001F80078000007E0001C
00000FC0007C00001F8000FE00003F0001FE00007F0001FE00007E0001FE0000FE0001FE
0000FC0000FC0000FC0000780000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC00007E00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE0000FC0001FE
0000FC0000FE0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0001FE0000FF007FFFF83FFFFC7FFFF83FFFFC7FFFF83FFFFC2E407FBF32
>28 D<0000300000700000E00001C0000380000700000F00001E00003C00003C00007800
00F00000F00001E00001E00003C00003C00007C0000780000F80000F80000F00001F0000
1F00001E00003E00003E00003E00003C00007C00007C00007C00007C00007C00007C0000
780000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000
F80000F80000F80000F80000F80000F80000F800007800007C00007C00007C00007C0000
7C00007C00003C00003E00003E00003E00001E00001F00001F00000F00000F80000F8000
07800007C00003C00003C00001E00001E00000F00000F000007800003C00003C00001E00
000F000007000003800001C00000E0000070000030145A77C323>40
D<C00000E000007000003800001C00000E00000F000007800003C00003C00001E00000F0
0000F000007800007800003C00003C00003E00001E00001F00001F00000F00000F80000F
800007800007C00007C00007C00003C00003E00003E00003E00003E00003E00003E00001
E00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001
F00001F00001F00001F00001F00001F00001F00001E00003E00003E00003E00003E00003
E00003E00003C00007C00007C00007C0000780000F80000F80000F00001F00001F00001E
00003E00003C00003C0000780000780000F00000F00001E00003C00003C0000780000F00
000E00001C0000380000700000E00000C00000145A7BC323>I<1C007F00FF80FF80FFC0
FFC0FFC07FC01CC000C000C000C000C000C001C00180018003800300070006000E000C00
1C003800700060000A1B788819>44 D<FFFFFEFFFFFEFFFFFEFFFFFEFFFFFE17057F951E
>I<1C007F00FF80FF80FF80FF80FF807F001C000909788819>I<0003FC0000001FFF8000
003E07C00000F801F00001F000F80003E0007C0003C0003C0007C0003E000F80001F000F
80001F001F00000F801F00000F803F00000FC03F00000FC03F00000FC03F00000FC07E00
0007E07E000007E07E000007E07E000007E07E000007E0FE000007F0FE000007F0FE0000
07F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007
F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0
FE000007F0FE000007F0FE000007F0FE000007F07E000007E07E000007E07E000007E07E
000007E07F00000FE03F00000FC03F00000FC03F00000FC03F00000FC01F00000F801F80
001F800F80001F000F80001F0007C0003E0007C0003E0003E0007C0001F000F80000F801
F000003E07C000001FFF80000003FC0000243F7CBC2D>48 D<0000C0000003C0000007C0
00001FC000007FC00007FFC000FFFFC000FF9FC000F81FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00007FF000FFFFFFF8FFFFFFF8FFFFFFF81D3D78BC2D>I<0007FC0000003FFF800000FF
FFE00001F00FF800078003FC000F0001FE000E0000FF001C00007F803800003FC0300000
3FC07000001FE06000001FE06000001FE0FE00000FF0FF00000FF0FF80000FF0FF80000F
F0FF80000FF0FF80000FF0FF80000FF07F00000FF01C00000FF00000000FE00000001FE0
0000001FE00000001FC00000003FC00000003F800000007F800000007F00000000FE0000
0001FC00000001FC00000003F800000007F00000000FE00000000FC00000001F80000000
3E000000007C00000000F800000001F000000003E000000003C000000007800000000F00
0030001E000030003C000030007800003000F000006001E000006003C000006007800000
6007000000E00FFFFFFFE01FFFFFFFE03FFFFFFFE07FFFFFFFC0FFFFFFFFC0FFFFFFFFC0
FFFFFFFFC0243D7CBC2D>I<0007FC0000003FFF800000FFFFE00001F807F80007C003FC
000F0001FE000E0000FF001C00007F801F80007F803FC0003FC03FE0003FC03FE0003FC0
3FE0003FC03FE0003FC03FE0003FC01FC0003FC00700003FC00000003F800000007F8000
00007F800000007F00000000FF00000000FE00000001FC00000003F800000003F0000000
0FC00000003F0000001FFC0000001FFF800000000FE000000003F800000001FC00000000
FE000000007F000000007F800000003FC00000003FC00000003FE00000003FE00000001F
E00000001FF00000001FF00C00001FF03F00001FF07F80001FF0FFC0001FF0FFC0001FF0
FFC0001FF0FFC0001FF0FFC0003FE0FF80003FE07F00003FC07000003FC07000007F8038
00007F801C0000FF000F0001FE0007C003FC0003F80FF00000FFFFE000003FFF80000007
FC0000243F7CBC2D>I<0000000E000000000E000000001E000000003E000000003E0000
00007E00000000FE00000000FE00000001FE00000003FE00000003FE00000006FE000000
0EFE0000000CFE00000018FE00000038FE00000030FE00000060FE000000E0FE000000C0
FE00000180FE00000380FE00000300FE00000600FE00000E00FE00000C00FE00001800FE
00003800FE00003000FE00006000FE0000E000FE0000C000FE00018000FE00038000FE00
030000FE00060000FE000E0000FE000C0000FE00180000FE00380000FE00300000FE0060
0000FE00E00000FE00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE00000000FE00000001FF000001FFFFFF0001FFFFFF0001FFFFFF283E7EBD
2D>I<060000030007C0000F0007F800FE0007FFFFFC0007FFFFFC0007FFFFF00007FFFF
E00007FFFFC00007FFFF0000063FF8000006000000000600000000060000000006000000
000600000000060000000006000000000600000000060000000006000000000600000000
060000000006000000000601FE0000060FFF8000063E03E000067001F80006E000FC0007
C0007E000780003F000700003F800600001F800000001FC00000001FC00000001FE00000
000FE00000000FE00000000FE00000000FF00000000FF00000000FF00000000FF03E0000
0FF07F00000FF0FF80000FF0FF80000FF0FF80000FF0FF80000FF0FF00000FE0FE00001F
E0E000001FE06000001FC07000001FC03000003F803800003F801C00007F001E0000FE00
0F0001FC0007C003F80003F00FE00000FFFFC000003FFF00000007F80000243F7CBC2D>
I<00001FE0000000FFF8000003FFFE00000FF01F00001F800780003F000380007E000FC0
00FC001FC001F8003FC003F0003FC003F0003FC007E0003FC00FE0001F800FC0000F001F
C00000001FC00000001F800000003F800000003F800000003F800000007F800000007F00
0000007F01FE00007F07FF8000FF0E03E000FF1C01F000FF3800FC00FF70007E00FF6000
3E00FFE0003F00FFC0001F80FFC0001FC0FF80001FC0FF80001FE0FF80000FE0FF80000F
E0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF07F00000FF0
7F00000FF07F00000FF07F00000FF07F00000FF03F80000FF03F80000FE03F80000FE01F
80000FE01F80001FC01FC0001FC00FC0001F800FC0003F8007E0003F0003F0007E0001F8
00FC0000FC01F800007E07F000003FFFE000000FFF80000003FC0000243F7CBC2D>I<30
0000000038000000003E000000003FFFFFFFFC3FFFFFFFFC3FFFFFFFFC3FFFFFFFF87FFF
FFFFF87FFFFFFFF07FFFFFFFE070000000E060000001C060000003806000000300600000
0700C000000E00C000000C00C000001C00C00000380000000030000000007000000000E0
00000001C000000001800000000380000000070000000007000000000E000000000E0000
00001C000000001C000000003C00000000380000000078000000007800000000F8000000
00F000000001F000000001F000000001F000000003F000000003F000000003F000000007
F000000007E000000007E000000007E00000000FE00000000FE00000000FE00000000FE0
0000000FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE000
00001FE00000001FE00000001FE00000001FE00000000FC00000000780000026407BBD2D
>I<0003FC0000001FFF8000007FFFE00000FC03F80001E000FC0003C0003E000780001F
000F00000F000E00000F801E000007801C000007C03C000003C03C000003C03C000003C0
3E000003C03E000003C03F000003C03F000007C03F800007801FE0000F801FF0000F001F
FC001E000FFE003C000FFF80780007FFC0F00003FFF1E00001FFFF800000FFFF0000003F
FF0000001FFFC000000FFFE000001FFFF8000078FFFC0001F07FFE0003C01FFF0007800F
FF800F0003FFC01F0001FFC01E00007FE03C00003FE07C00000FE078000007F078000003
F0F8000003F0F0000001F0F0000001F0F0000000F0F0000000F0F0000000F0F0000000F0
F8000000E078000001E078000001E07C000001C03E000003C01E000007801F00000F000F
C0001E0007E0007C0001FC03F80000FFFFE000001FFF80000003FC0000243F7CBC2D>I<
0003FC0000001FFF0000003FFFC00000FE07F00001F801F80003F000FC0007E0007C000F
E0007E001FC0003F001F80003F003F80001F803F80001F807F80001F807F00001FC07F00
001FC0FF00001FC0FF00000FE0FF00000FE0FF00000FE0FF00000FE0FF00000FE0FF0000
0FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF07F00001FF07F00001F
F07F80001FF03F80001FF03F80003FF01F80003FF00FC0007FF007C0006FF007E000EFF0
03F001CFF000F8038FF0007C070FF0001FFE0FE00007F80FE00000000FE00000001FE000
00001FE00000001FC00000001FC00000001FC00000003F800000003F800F00003F001F80
007F003FC0007E003FC0007E003FC000FC003FC001F8003F8001F8003F0003F0001C0007
E0001E001FC0000FC07F000003FFFE000001FFF80000003FC00000243F7CBC2D>I<1C00
7F00FF80FF80FF80FF80FF807F001C000000000000000000000000000000000000000000
000000000000000000000000000000000000000000001C007F00FF80FF80FF80FF80FF80
7F001C00092778A619>I<00000007000000000000000700000000000000070000000000
00000F800000000000000F800000000000001FC00000000000001FC00000000000001FC0
0000000000003FE00000000000003FE00000000000003FE00000000000007FF000000000
00006FF00000000000006FF0000000000000CFF8000000000000C7F8000000000000C7F8
00000000000187FC00000000000183FC00000000000183FC00000000000301FE00000000
000301FE00000000000301FE00000000000600FF00000000000600FF00000000000E00FF
80000000000C007F80000000000C007F80000000001C007FC00000000018003FC0000000
0018003FC00000000030003FE00000000030001FE00000000030001FE00000000060001F
F00000000060000FF00000000060000FF000000000C00007F800000000C00007F8000000
00C00007F800000001800003FC00000001FFFFFFFC00000003FFFFFFFE00000003FFFFFF
FE00000003000001FE00000007000001FF00000006000000FF00000006000000FF000000
0C000000FF8000000C0000007F8000000C0000007F800000180000007FC0000018000000
3FC00000180000003FC00000300000001FE00000300000001FE00000700000001FE00000
700000000FF00000F00000000FF00001F00000000FF80003F80000000FF8000FFE000000
3FFE00FFFFC00007FFFFF8FFFFC00007FFFFF8FFFFC00007FFFFF83D417DC044>65
D<FFFFFFFFFC000000FFFFFFFFFF800000FFFFFFFFFFE0000000FFC0001FF80000007F80
0003FE0000007F800000FF0000007F8000003F8000007F8000001FC000007F8000000FE0
00007F80000007F000007F80000003F800007F80000001FC00007F80000001FC00007F80
000000FE00007F80000000FF00007F800000007F00007F800000007F80007F800000003F
80007F800000003FC0007F800000003FC0007F800000003FC0007F800000003FE0007F80
0000001FE0007F800000001FE0007F800000001FE0007F800000001FE0007F800000001F
F0007F800000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F80
0000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F800000001F
F0007F800000001FF0007F800000001FE0007F800000001FE0007F800000001FE0007F80
0000001FE0007F800000003FE0007F800000003FC0007F800000003FC0007F800000003F
80007F800000007F80007F800000007F80007F800000007F00007F80000000FE00007F80
000000FE00007F80000001FC00007F80000003F800007F80000007F800007F8000000FF0
00007F8000001FE000007F8000003FC000007F800000FF0000007F800003FE000000FFC0
001FF80000FFFFFFFFFFF00000FFFFFFFFFF800000FFFFFFFFFC0000003C3E7DBD45>68
D<FFFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFFFFFFFFC000FFC00001FFC0007F8000001FC0
007F8000000FE0007F80000003E0007F80000003E0007F80000001E0007F80000000E000
7F80000000E0007F80000000E0007F8000000060007F8000000060007F8000000060007F
8000000060007F8000000030007F8000300030007F8000300030007F8000300030007F80
00300030007F8000300000007F8000300000007F8000700000007F8000700000007F8000
F00000007F8001F00000007F8007F00000007FFFFFF00000007FFFFFF00000007FFFFFF0
0000007F8007F00000007F8001F00000007F8000F00000007F8000700000007F80007000
00007F8000300000007F8000300000007F8000300006007F8000300006007F8000300006
007F800030000C007F800000000C007F800000000C007F800000000C007F800000000C00
7F800000001C007F8000000018007F8000000018007F8000000038007F8000000038007F
8000000078007F8000000078007F80000000F0007F80000001F0007F80000003F0007F80
000007F0007F8000001FF000FFC00001FFF0FFFFFFFFFFFFE0FFFFFFFFFFFFE0FFFFFFFF
FFFFE0373E7DBD3D>I<FFFFFFFFFFFF80FFFFFFFFFFFF80FFFFFFFFFFFF8000FFC00003
FF80007F8000003F80007F8000001FC0007F80000007C0007F80000003C0007F80000003
C0007F80000001C0007F80000001C0007F80000001C0007F80000000C0007F80000000C0
007F80000000C0007F80000000C0007F8000000060007F8000000060007F800030006000
7F8000300060007F8000300060007F8000300000007F8000300000007F8000300000007F
8000700000007F8000700000007F8000F00000007F8001F00000007F8007F00000007FFF
FFF00000007FFFFFF00000007FFFFFF00000007F8007F00000007F8001F00000007F8000
F00000007F8000700000007F8000700000007F8000300000007F8000300000007F800030
0000007F8000300000007F8000300000007F8000300000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F8000000000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F800000000000FFE000000000FFFFFFF0000000FFFF
FFF0000000FFFFFFF0000000333E7DBD3B>I<FFFFFFC01FFFFFF8FFFFFFC01FFFFFF8FF
FFFFC01FFFFFF800FFC000001FF800007F8000000FF000007F8000000FF000007F800000
0FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF00000
7F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F800000
0FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF00000
7F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F800000
0FF000007F8000000FF000007F8000000FF000007F8000000FF000007FFFFFFFFFF00000
7FFFFFFFFFF000007FFFFFFFFFF000007F8000000FF000007F8000000FF000007F800000
0FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF00000
7F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F800000
0FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF00000
7F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F800000
0FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF00000
7F8000000FF000007F8000000FF00000FFC000001FF800FFFFFFC01FFFFFF8FFFFFFC01F
FFFFF8FFFFFFC01FFFFFF83D3E7DBD44>72 D<000FFFFFF8000FFFFFF8000FFFFFF80000
07FF00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001
FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE
00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00
000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE0000
0001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE000000
01FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001
FE003F0001FE007F8001FE00FFC001FE00FFC001FE00FFC001FE00FFC001FE00FFC003FC
00FF8003FC007F0003F8006C0007F800700007F00038000FE0001C001FC0000F003F8000
03C07E000000FFF80000003FC0000025407DBD2E>74 D<FFFFFFF00000FFFFFFF00000FF
FFFFF0000000FFE0000000007F80000000007F80000000007F80000000007F8000000000
7F80000000007F80000000007F80000000007F80000000007F80000000007F8000000000
7F80000000007F80000000007F80000000007F80000000007F80000000007F8000000000
7F80000000007F80000000007F80000000007F80000000007F80000000007F8000000000
7F80000000007F80000000007F80000000007F80000000007F80000000007F8000000000
7F80000000007F80000000007F80000000007F80000000007F80000000007F8000000000
7F80000003007F80000003007F80000003007F80000003007F80000003007F8000000700
7F80000006007F80000006007F80000006007F80000006007F8000000E007F8000000E00
7F8000000E007F8000001E007F8000001E007F8000003E007F8000007E007F800000FE00
7F800001FC007F800007FC00FFC0003FFCFFFFFFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFC30
3E7DBD38>76 D<FFFF8000007FFFF8FFFFC000007FFFF8FFFFE000007FFFF8007FE00000
03FF00007FF0000000FC00006FF80000007800006FFC00000030000067FC000000300000
63FE00000030000063FF00000030000061FF00000030000060FF800000300000607FC000
00300000607FC00000300000603FE00000300000601FF00000300000601FF00000300000
600FF800003000006007FC00003000006007FC00003000006003FE00003000006001FF00
003000006001FF00003000006000FF800030000060007FC00030000060007FE000300000
60003FE00030000060001FF00030000060001FF80030000060000FF800300000600007FC
00300000600007FE00300000600003FE00300000600001FF00300000600000FF80300000
600000FF803000006000007FC03000006000003FE03000006000003FE03000006000001F
F03000006000000FF83000006000000FF830000060000007FC30000060000003FE300000
60000003FE30000060000001FF30000060000000FFB0000060000000FFF0000060000000
7FF00000600000003FF00000600000003FF00000600000001FF00000600000000FF00000
6000000007F000006000000007F000006000000003F00000F000000001F00001F8000000
01F00007FE00000000F000FFFFF00000007000FFFFF00000007000FFFFF000000030003D
3E7DBD44>78 D<FFFFFFFFF00000FFFFFFFFFF0000FFFFFFFFFFC00000FFC0003FF00000
7F800007F800007F800001FE00007F800000FF00007F8000007F00007F8000007F80007F
8000003FC0007F8000003FC0007F8000001FE0007F8000001FE0007F8000001FF0007F80
00001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F8000
001FF0007F8000001FF0007F8000001FE0007F8000001FE0007F8000003FC0007F800000
3FC0007F8000007F80007F8000007F00007F800000FE00007F800003FC00007F800007F8
00007F80003FE000007FFFFFFF8000007FFFFFFC0000007F8000000000007F8000000000
007F8000000000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
00000000007F8000000000007F8000000000007F8000000000007F8000000000007F8000
000000007F8000000000007F800000000000FFC000000000FFFFFFC0000000FFFFFFC000
0000FFFFFFC0000000343E7DBD3D>80 D<0007FC0018003FFF803800FFFFE03801FC03F8
7803F0007C7807C0001EF80F80000FF81F000007F83F000003F83E000001F87E000000F8
7E000000F87C00000078FC00000078FC00000078FC00000038FC00000038FC00000038FE
00000018FE00000018FF00000018FF000000187F800000007FC00000007FE00000003FF8
0000003FFF0000001FFFF000000FFFFF00000FFFFFF00007FFFFFC0001FFFFFE0000FFFF
FF80003FFFFFC00007FFFFE000007FFFE0000007FFF00000007FF80000001FF80000000F
FC00000007FC00000003FC00000001FE00000001FEC0000000FEC0000000FEC0000000FE
C00000007EC00000007EE00000007EE00000007EE00000007EE00000007CF00000007CF0
000000FCF8000000F8FC000001F8FE000001F0FF000003F0FF800007E0FBE0000FC0F1F8
001F80F07F007F00E01FFFFC00E007FFF000C0007FC00027427BBF32>83
D<3FFFFFFFFFFFFF003FFFFFFFFFFFFF003FFFFFFFFFFFFF003FE000FFC001FF003F0000
7F80003F007E00007F80001F807C00007F80000F807800007F800007807000007F800003
807000007F800003807000007F800003806000007F800001806000007F80000180600000
7F800001806000007F800001806000007F80000180C000007F800000C0C000007F800000
C0C000007F800000C0C000007F800000C0C000007F800000C00000007F80000000000000
7F800000000000007F800000000000007F800000000000007F800000000000007F800000
000000007F800000000000007F800000000000007F800000000000007F80000000000000
7F800000000000007F800000000000007F800000000000007F800000000000007F800000
000000007F800000000000007F800000000000007F800000000000007F80000000000000
7F800000000000007F800000000000007F800000000000007F800000000000007F800000
000000007F800000000000007F800000000000007F800000000000007F80000000000000
7F800000000000007F800000000000007F800000000000007F800000000000007F800000
000000007F800000000000007F800000000000007F80000000000000FFC0000000000001
FFE00000000007FFFFFFF800000007FFFFFFF800000007FFFFFFF800003A3E7DBD41>I<
FFFFFFC0007FFFF8FFFFFFC0007FFFF8FFFFFFC0007FFFF800FFC0000003FF00007F8000
0000FC00007F800000007800007F800000003000007F800000003000007F800000003000
007F800000003000007F800000003000007F800000003000007F800000003000007F8000
00003000007F800000003000007F800000003000007F800000003000007F800000003000
007F800000003000007F800000003000007F800000003000007F800000003000007F8000
00003000007F800000003000007F800000003000007F800000003000007F800000003000
007F800000003000007F800000003000007F800000003000007F800000003000007F8000
00003000007F800000003000007F800000003000007F800000003000007F800000003000
007F800000003000007F800000003000007F800000003000007F800000003000007F8000
00003000007F800000003000007F800000003000007F800000003000007F800000003000
007F800000003000003F800000007000003FC00000006000003FC00000006000003FC000
0000E000001FC0000000C000001FE0000001C000000FE0000001C000000FF00000038000
0007F000000700000003F800000F00000001FC00000E00000000FE00003C000000007F00
0078000000003FC001F0000000000FF00FE00000000003FFFF800000000000FFFE000000
0000001FF00000003D407DBD44>I<FFFFFE003FFFFF8001FFFFFFFFFE003FFFFF8001FF
FFFFFFFE003FFFFF8001FFFF07FFC00001FFF000003FF803FF0000007FC000000FE001FF
0000007FC0000007C001FF0000003FC00000038000FF0000003FC00000030000FF000000
3FC00000030000FF8000001FE000000700007F8000001FE000000600007F8000001FE000
000600007FC000003FF000000600003FC000003FF000000C00003FC000003FF000000C00
003FE000007FF800000C00001FE0000067F800001800001FE0000067F800001800001FE0
0000E7FC00001800000FF00000C3FC00003000000FF00000C3FC00003000000FF00001C3
FE000030000007F8000181FE000060000007F8000181FE000060000007F8000181FF0000
60000003FC000300FF0000C0000003FC000300FF0000C0000003FC000300FF0000C00000
01FE0006007F800180000001FE0006007F800180000001FE0006007F800180000001FF00
0C003FC00380000000FF000C003FC00300000000FF000C003FC00300000000FF8018001F
E007000000007F8018001FE006000000007F8018001FE006000000007FC030000FF00600
0000003FC030000FF00C000000003FC030000FF00C000000003FE070000FF80C00000000
1FE0600007F818000000001FE0600007F818000000001FE0E00007FC18000000000FF0C0
0003FC30000000000FF0C00003FC30000000000FF1C00003FE300000000007F9800001FE
600000000007F9800001FE600000000007F9800001FF600000000003FF000000FFC00000
000003FF000000FFC00000000003FF000000FFC00000000001FE0000007F800000000001
FE0000007F800000000001FE0000007F800000000001FC0000003F800000000000FC0000
003F000000000000FC0000003F000000000000F80000001F000000000000780000001E00
0000000000780000001E000000000000700000000E000000000000300000000C00000058
407EBD5D>87 D<001FF0000000FFFC000003E03F00000F000FC0001C0007E0001F0003F0
003F8001F8003FC000FC003FC000FC003FC000FC003FC0007E001F80007E000F00007E00
0000007E000000007E000000007E000000007E0000001FFE000003FFFE00001FF87E0000
7F807E0001FC007E0007F0007E000FE0007E001FC0007E003F80007E007F80007E007F00
007E007F00007E03FE00007E03FE00007E03FE00007E03FE0000FE03FE0000FE03FE0001
FE037F0001BE037F0003BE033F80071F061FC00E1F8E0FF03C0FFC03FFF007F8003FC003
E0282A7CA82D>97 D<01F800000000FFF800000000FFF800000000FFF80000000007F800
00000003F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F807F8000001F81FFF000001F8780FC00001F9E003F00001FB8001F80001FF00
00FC0001FE00007E0001FC00003F0001FC00001F8001F800001F8001F800001FC001F800
000FC001F800000FE001F800000FE001F8000007E001F8000007F001F8000007F001F800
0007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F800
0007F001F8000007F001F8000007E001F800000FE001F800000FE001F800000FE001F800
000FC001F800001FC001F800001F8001FC00003F0001FE00003F0001F600007E0001F700
00FC0001E38001F80001C1C003E00001C0F81F800001803FFE0000000007F000002C407E
BE32>I<0001FF0000000FFFE000003F00F800007C001E0001F800070003F0001F0007E0
003F800FC0007F800FC0007F801F80007F801F80007F803F00003F003F00001E007F0000
00007F000000007E00000000FE00000000FE00000000FE00000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007F00000000
7F000000007F000000003F000000C03F800000C01F800001C01FC00001800FC000038007
E000070003F000060001F8001E0000FC003800003F01F000000FFFC0000001FE0000222A
7DA828>I<00000001F800000000FFF800000000FFF800000000FFF80000000007F80000
000003F80000000001F80000000001F80000000001F80000000001F80000000001F80000
000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000
000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000
00FF01F8000007FFC1F800001F80F1F800007C0039F80001F8001DF80003F0000FF80007
E00007F8000FC00003F8000FC00003F8001F800001F8003F800001F8003F000001F8007F
000001F8007F000001F8007F000001F8007E000001F800FE000001F800FE000001F800FE
000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE
000001F800FE000001F8007E000001F8007F000001F8007F000001F8003F000001F8003F
800001F8001F800003F8001F800003F8000FC00007F80007E0000FF80003F0000DFC0001
F8003DFE0000FC0071FFF0003F01E1FFF0000FFF81FFF00001FE01F8002C407DBE32>I<
0003FC0000001FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E000F
C0003F001F80001F001F80001F803F00001F803F00000F807F00000F807F00000FC07E00
000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE0000
0000FE00000000FE00000000FE00000000FE000000007E000000007F000000007F000000
007F000000003F000000C03F800000C01F800001C00FC00001800FC000038007E0000700
03F0000E0001F8001C0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>
I<00001FC00000FFF00003F0380007C0FC000F81FE001F81FE003F01FE003E01FE007E01
FE007E00FC00FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC0000FFFFFF00FFFFFF
00FFFFFF0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000001FE00007FFFFE007FFFFE
007FFFFE001F407FBF1C>I<000000007E000003FC01FF00000FFF078780003E07CE0F80
00FC03FC0F8001F801F80F8003F000FC070003E0007C000007E0007E000007E0007E0000
0FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F0000
0FC0003F00000FC0003F000007E0007E000007E0007E000003E0007C000003F000FC0000
01F801F8000001FC03F0000001BE07C00000038FFF0000000303FC000000070000000000
07000000000007000000000007000000000007800000000007800000000007C000000000
03E00000000003FFFFF0000001FFFFFE000001FFFFFF8000007FFFFFE00001FFFFFFF800
07C0001FF8001F800003FC003F000000FE003E0000007E007C0000003E007C0000003F00
F80000001F00F80000001F00F80000001F00F80000001F00F80000001F00FC0000003F00
7C0000003E007E0000007E003F000000FC001F800001F8000FC00003F00003F0000FC000
00FE007F0000003FFFFC00000003FFC00000293D7EA82D>I<01F800000000FFF8000000
00FFF800000000FFF80000000007F80000000003F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F803FC000001F80FFF800001F83C0FC0
0001F8F003E00001F9C003F00001FB8001F80001FB0001F80001FF0000FC0001FE0000FC
0001FE0000FC0001FC0000FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFF
F8FFFFF07FFFF82D3F7EBE32>I<01C00007F0000FF8000FF8000FF8000FF8000FF80007
F00001C00000000000000000000000000000000000000000000000000000000000000000
000000000001F8007FF8007FF8007FF80007F80003F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80003FC00FFFFE0FFFFE0FFFFE0133D7EBC19>I<0000700001FC0003FE0003FE
0003FE0003FE0003FE0001FC000070000000000000000000000000000000000000000000
0000000000000000000000000000000000FE003FFE003FFE003FFE0001FE0000FE00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E3C007E7E007CFF00FCFF00FCFF00F8FF01F8FE01F0
7803E03E07C00FFF0001FC00175084BC1C>I<01F800000000FFF800000000FFF8000000
00FFF80000000007F80000000003F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F8007FFF8001F8007FFF8001F8007FFF
8001F8001FFC0001F8000FE00001F8000F800001F8001F000001F8001C000001F8003800
0001F80070000001F800E0000001F803C0000001F80700000001F80E00000001F81E0000
0001F83E00000001F87F00000001F9FF80000001FB9FC0000001FF0FC0000001FE07E000
0001FC07F0000001F803F0000001F801F8000001F801FC000001F800FE000001F8007E00
0001F8003F000001F8003F800001F8001F800001F8000FC00001F8000FE00001F80007F0
0001F80007F00001F80007F80003FC0007FE00FFFFF03FFFE0FFFFF03FFFE0FFFFF03FFF
E02B3F7EBE30>I<01F800FFF800FFF800FFF80007F80003F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80003FC00FFFFF0FFFFF0FFFFF0143F7EBE19>I<01F803FC0001FE0000FFF80F
FF8007FFC000FFF83C0FC01E07E000FFF8F003E07801F00007F9C003F0E001F80003FB80
01F9C000FC0001FB0001F98000FC0001FF0000FF80007E0001FE0000FF00007E0001FE00
00FF00007E0001FC0000FE00007E0001FC0000FE00007E0001F80000FC00007E0001F800
00FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F800
00FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F800
00FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F800
00FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F800
00FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F800
00FC00007E0001F80000FC00007E0001F80000FC00007E0003FC0001FE0000FF00FFFFF0
7FFFF83FFFFCFFFFF07FFFF83FFFFCFFFFF07FFFF83FFFFC46287EA74B>I<01F803FC00
00FFF80FFF8000FFF83C0FC000FFF8F003E00007F9C003F00003FB8001F80001FB0001F8
0001FF0000FC0001FE0000FC0001FE0000FC0001FC0000FC0001FC0000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0003FC0001FE
00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D287EA732>I<0001FE0000000FFFC000
003F03F000007C00F80001F0003E0003E0001F0007C0000F8007C0000F800F800007C01F
800007E01F000003E03F000003F03F000003F07E000001F87E000001F87E000001F87E00
0001F8FE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE0000
01FCFE000001FCFE000001FC7E000001F87E000001F87E000001F87F000003F83F000003
F03F000003F01F800007E00F800007C00FC0000FC007C0000F8003E0001F0001F0003E00
00FC00FC00003F03F000000FFFC0000001FE0000262A7DA82D>I<01F807F80000FFF81F
FF0000FFF8780FC000FFF9E003F00003FB8001F80001FF0000FC0001FE00007E0001FC00
007F0001FC00003F8001F800001F8001F800001FC001F800001FC001F800000FE001F800
000FE001F800000FE001F800000FF001F8000007F001F8000007F001F8000007F001F800
0007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F800
000FE001F800000FE001F800000FE001F800000FE001F800001FC001F800001FC001F800
003F8001FC00003F0001FE00007F0001FE0000FE0001FF0001FC0001FB8003F80001F9C0
07E00001F8F81F800001F83FFE000001F807F0000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000003FC00000000FFFFF0
000000FFFFF0000000FFFFF00000002C3A7EA732>I<0000FF000C000007FFC01C00001F
80F01C00007E00381C0000FC001C3C0003F8000E3C0007F000077C0007E000037C000FC0
0003FC001FC00001FC003F800001FC003F800000FC007F000000FC007F000000FC007F00
0000FC007F000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE00
0000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FF000000FC007F00
0000FC007F000000FC007F000000FC003F800000FC003F800001FC001FC00001FC000FC0
0003FC000FE00003FC0007E00007FC0003F0000EFC0001F8001CFC00007E0078FC00003F
01E0FC00000FFFC0FC000001FE00FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC0000000000FC0000000000FC0000000001FE000000007FFFF80000
007FFFF80000007FFFF82D3A7DA730>I<03F00FC0FFF03FF0FFF0F0F8FFF1C3FC07F183
FC03F383FC01F703FC01F603FC01F601F801FE006001FC000001FC000001FC000001FC00
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000003FC0000FFFFF800FFFFF800FFFFF8001E287E
A723>I<007FC06003FFF8E007C03DE01E000FE03C0003E0780001E0780001E0700000E0
F00000E0F0000060F0000060F8000060F8000060FC000060FF0000007FC000007FFE0000
3FFFE0001FFFFC0007FFFE0003FFFF80007FFFC00007FFE000003FE000000FF0C00003F0
C00001F8C00000F8E00000F8E0000078E0000078F0000078F0000078F8000078F80000F0
FC0000F0FC0001E0FE0001C0F7800780F1E01F00E0FFFC00C01FE0001D2A7DA824>I<00
180000001800000018000000180000001800000018000000380000003800000038000000
380000007800000078000000F8000000F8000001F8000003F8000007F800001FFFFFC0FF
FFFFC0FFFFFFC001F8000001F8000001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001
F8000001F8000001F8000001F8000001F8006001F8006001F8006001F8006001F8006001
F8006001F8006001F8006001F8006000FC00E000FC00C000FC00C0007E01C0003F038000
1F87000007FE000001F8001B397EB723>I<01F80000FC00FFF8007FFC00FFF8007FFC00
FFF8007FFC0007F80003FC0003F80001FC0001F80000FC0001F80000FC0001F80000FC00
01F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC00
01F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC00
01F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC00
01F80000FC0001F80000FC0001F80001FC0001F80001FC0001F80001FC0001F80003FC00
00F80003FC0000FC0007FC0000FC000EFE00007C001CFF00003E0038FFF8001F80F0FFF8
0007FFE0FFF80000FF00FC002D297EA732>I<FFFFC007FFE0FFFFC007FFE0FFFFC007FF
E007FC0001FF0003F800007C0003F80000780001F80000700001FC0000700000FC000060
0000FC00006000007E0000C000007E0000C000007F0001C000003F00018000003F000180
00001F80030000001F80030000001FC0070000000FC0060000000FC00600000007E00C00
000007E00C00000007F01C00000003F01800000003F01800000001F83000000001F83000
000001FC7000000000FC6000000000FC60000000007EC0000000007EC0000000007FC000
0000003F80000000003F80000000001F00000000001F00000000001F00000000000E0000
0000000E0000002B287EA630>I<FFFF87FFFC03FFF0FFFF87FFFC03FFF0FFFF87FFFC03
FFF00FFC003FE0007FC007F0001FC0003F0003F0000F80001E0003F0000FC0001C0001F8
000FC0001C0001F80007C000180001F80007E000180000FC000FE000300000FC000FE000
300000FE000FF0007000007E0019F0006000007E0019F0006000007F0019F800E000003F
0030F800C000003F0030F800C000003F8030FC01C000001F80607C018000001F80607C01
8000000FC0E07E030000000FC0C03E030000000FC0C03E0300000007E1C03F0600000007
E1801F0600000007E1801F8600000003F3801F8C00000003F3000F8C00000003F3000FCC
00000001FE0007D800000001FE0007D800000001FE0007F800000000FC0003F000000000
FC0003F000000000FC0003F000000000780001E000000000780001E000000000780001E0
00000000300000C000003C287EA641>I<7FFFC00FFFE07FFFC00FFFE07FFFC00FFFE003
FF0007FE0000FF0003F800007F0003E000003F0003C000003F80038000001FC007000000
0FC00E00000007E00C00000007F01800000003F83800000001F87000000000FCE0000000
00FEC0000000007F80000000003F80000000001F80000000000FC0000000000FE0000000
001FE0000000003BF00000000071F800000000E1FC00000000C0FE00000001807E000000
03803F00000007003F8000000E001FC000000C000FC000001C0007E00000380007F00000
F80003F80001F80003FC000FFC0007FE00FFFF001FFFF8FFFF001FFFF8FFFF001FFFF82D
277FA630>I<FFFFC007FFE0FFFFC007FFE0FFFFC007FFE007FC0001FF0003F800007C00
01F80000780001F80000700001FC0000700000FC0000600000FE00006000007E0000C000
007E0000C000003F00018000003F00018000003F80038000001F80030000001F80030000
000FC0060000000FC0060000000FE00E00000007E00C00000007E00C00000003F0180000
0003F01800000003F83800000001F83000000001FC3000000000FC6000000000FC600000
00007EC0000000007EC0000000007FC0000000003F80000000003F80000000001F000000
00001F00000000001F00000000000E00000000000E00000000000C00000000000C000000
00001C000000000018000000000018000000000030000000000030000000000060000000
3800600000007C00E0000000FE00C0000000FE01C0000000FE0180000000FE0300000000
7C0700000000700E00000000383C000000001FF80000000007E0000000002B3A7EA630>
I<1FFFFFFF801FFFFFFF801FE0007F801F00007F001E0000FE001C0001FC001C0003FC00
180003F800380007F00038000FE00030001FE00030001FC00030003F800030007F000030
007F00000000FE00000001FC00000003FC00000003F800000007F00000000FE00000001F
E00000001FC00180003F800180007F000180007F00018000FE00018001FC00018003FC00
038003F800038007F00003000FE00003001FE00007001FC0000F003F80000F007F00003F
00FF0001FF00FFFFFFFF00FFFFFFFF0021277EA628>I<0000038000000007C00000000F
C00000001FC00000003FC00000007F80000000FF00000001FC00000003F000000007E000
00000F800000001E000000001C0000000010000000000000000000000000000000000000
001FF0000000FFFC000003E03F00000F000FC0001C0007E0001F0003F0003F8001F8003F
C000FC003FC000FC003FC000FC003FC0007E001F80007E000F00007E000000007E000000
007E000000007E000000007E0000001FFE000003FFFE00001FF87E00007F807E0001FC00
7E0007F0007E000FE0007E001FC0007E003F80007E007F80007E007F00007E007F00007E
03FE00007E03FE00007E03FE00007E03FE0000FE03FE0000FE03FE0001FE037F0001BE03
7F0003BE033F80071F061FC00E1F8E0FF03C0FFC03FFF007F8003FC003E0283B7CB92D>
225 D<00000E000000001F000000003F000000007F00000000FF00000001FE00000003FC
00000007F00000000FC00000001F800000003E0000000078000000007000000000400000
000000000000000000000000000000000003FC0000001FFF8000007E07E00000F801F000
01F000F80003E0007C0007C0003E000FC0003F001F80001F001F80001F803F00001F803F
00000F807F00000F807F00000FC07E00000FC07E00000FC0FE00000FC0FE00000FC0FFFF
FFFFC0FFFFFFFFC0FE00000000FE00000000FE00000000FE00000000FE00000000FE0000
00007E000000007F000000007F000000007F000000003F000000C03F800000C01F800001
C00FC00001800FC000038007E000070003F0000E0001F8001C0000FC003800003F01F000
000FFFC0000001FE0000223B7DB928>233 D<0001C00003E00007F0000FF0001FE0003F
C0007F80007E0000FC0001F00003E0000780000700000400000000000000000000000000
0001F8007FF8007FF8007FF80007F80003F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0003FC00FFFFE0FFFFE0FFFFE0143A7EB919>237 D<0003F00010000007FC003800000F
FF007000001FFFC1E000003C1FFFC000007007FF800000E001FF00000040007C00000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000001F8
03FC0000FFF80FFF8000FFF83C0FC000FFF8F003E00007F9C003F00003FB8001F80001FB
0001F80001FF0000FC0001FE0000FC0001FE0000FC0001FC0000FC0001FC0000FC0001F8
0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F8
0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F8
0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F8
0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0003FC
0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D3C7EBB32>241
D<000001C000000003E000000007E00000000FE00000001FE00000003FC00000007F8000
0000FE00000001F800000003F000000007C00000000F000000000E000000000800000000
00000000000000000000000000000001FE0000000FFFC000003F03F000007C00F80001F0
003E0003E0001F0007C0000F8007C0000F800F800007C01F800007E01F000003E03F0000
03F03F000003F07E000001F87E000001F87E000001F87E000001F8FE000001FCFE000001
FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FC
7E000001F87E000001F87E000001F87F000003F83F000003F03F000003F01F800007E00F
800007C00FC0000FC007C0000F8003E0001F0001F0003E0000FC00FC00003F03F000000F
FFC0000001FE0000263B7DB92D>243 D<0000003800000000007C0000000000FC000000
0001FC0000000003FC0000000007F8000000000FF0000000001FC0000000003F00000000
007E0000000000F80000000001E00000000001C000000000010000000000000000000000
000000000000000000000000000000000001F80000FC00FFF8007FFC00FFF8007FFC00FF
F8007FFC0007F80003FC0003F80001FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80001FC0001F80001FC0001F80001FC0001F80003FC0000
F80003FC0000FC0007FC0000FC000EFE00007C001CFF00003E0038FFF8001F80F0FFF800
07FFE0FFF80000FF00FC002D3B7EB932>250 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo ecrm1728 17.28 13
/Fo 13 117 df<0F003FC07FE0FFF0FFF0FFF0FFF0FFF0FFF07FE03FC00F000C0C748B25
>46 D<FFFFFFFFC0FFFFFFFFC0FFFFFFFFC0FFFFFFFFC0007FFF8000001FFE0000000FFC
0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC00
00000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000
000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC000000
0FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000F
FC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC
0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC00
00000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000
000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC000000
0FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000F
FC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC
0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC00
00000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000001FFE0000
007FFF8000FFFFFFFFC0FFFFFFFFC0FFFFFFFFC0FFFFFFFFC0226279E131>73
D<00003FE0000000000003FFFE00000000000FFFFF80000000003FC03FE0000000007C00
0FF800000000F00003FC00000001E00001FE00000003C00000FF000000078000007F8000
000F0000003FC000000F8000003FC000000FF000001FE000001FF800001FE000001FFC00
000FF000001FFC00000FF000001FFC00000FF000001FFC000007F800001FFC000007F800
001FFC000007F800000FF8000007F8000003E0000007F800000000000007F80000000000
0007F800000000000007F800000000000007F800000000000007F800000000000007F800
00000000007FF800000000007FFFF8000000000FFFFFF8000000007FF807F800000001FF
8007F800000007FC0007F80000001FF00007F80000007FC00007F8000000FF800007F800
0003FE000007F8000007FC000007F800000FFC000007F800000FF8000007F800001FF000
0007F800003FE0000007F800003FE0000007F800007FC0000007F801C07FC0000007F801
C07FC0000007F801C0FFC0000007F801C0FF80000007F801C0FF80000007F801C0FF8000
000FF801C0FF8000000FF801C0FF8000000FF801C0FF8000001FF801C0FFC000001BF801
C07FC000003BF801C07FC0000073F801C07FE0000073F801803FF00000E1FC03801FF000
03C1FC03800FF8000780FE070007FE000F00FF0F0001FF807C007FFE00007FFFF8003FFC
00001FFFE0001FF8000003FF000007E0003A4179BF43>97 D<0000000000001E00000000
0000003FFE00000000000007FFFE00000000000007FFFE00000000000007FFFE00000000
000007FFFE000000000000000FFE0000000000000003FE0000000000000003FE00000000
00000001FE0000000000000001FE0000000000000001FE0000000000000001FE00000000
00000001FE0000000000000001FE0000000000000001FE0000000000000001FE00000000
00000001FE0000000000000001FE0000000000000001FE0000000000000001FE00000000
00000001FE0000000000000001FE0000000000000001FE0000000000000001FE00000000
00000001FE0000000000000001FE0000000000000001FE0000000000000001FE00000000
00000001FE0000000000000001FE0000000000000001FE0000000000000001FE00000000
00000001FE0000000000000001FE0000000000000001FE0000000000000001FE00000000
00FF8001FE000000000FFFF801FE000000003FFFFE01FE00000000FF803F81FE00000003
FC0007C1FE00000007F80001E1FE0000001FE00000F9FE0000003FC000007DFE0000007F
8000003DFE000000FF0000001FFE000001FE0000000FFE000001FC00000007FE000003FC
00000007FE000007F800000003FE000007F000000001FE00000FF000000001FE00001FF0
00000001FE00001FE000000001FE00001FE000000001FE00003FE000000001FE00003FC0
00000001FE00007FC000000001FE00007FC000000001FE00007FC000000001FE00007FC0
00000001FE00007F8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF80
00000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF80
00000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF80
00000001FE0000FF8000000001FE0000FF8000000001FE00007F8000000001FE00007FC0
00000001FE00007FC000000001FE00007FC000000001FE00003FC000000001FE00003FC0
00000001FE00003FE000000001FE00001FE000000001FE00001FE000000001FE00000FF0
00000003FE00000FF000000003FE000007F800000007FE000003F800000007FE000003FC
0000000FFE000001FE0000001FFE000000FE0000003DFE0000007F0000003DFE0000003F
800000F9FF0000001FC00001F1FF0000000FF00003C1FFC0000007F8000F81FFFF800001
FF007F01FFFF8000007FFFFC01FFFF8000001FFFE001FFFF80000001FF0001FF00004165
7BE34B>100 D<000003FE00000000001FFFE000000000FFFFF800000001FE03FE000000
07F0007F8000000FE0003FC000003FC0001FE000007F00000FF00000FF000007F80000FE
000003F80001FC000003FC0003F8000001FC0007F8000001FE0007F0000000FE000FF000
0000FF000FF00000007F001FE00000007F001FE00000007F803FE00000007F803FC00000
003F803FC00000003F807FC00000003FC07FC00000003FC07FC00000003FC07F80000000
3FC07F800000003FC0FF800000003FC0FFFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFFFFFFFF
C0FF800000000000FF800000000000FF800000000000FF800000000000FF800000000000
FF800000000000FF800000000000FF800000000000FF8000000000007F8000000000007F
C000000000007FC000000000007FC000000000003FC000000000003FC000000000003FE0
00000000001FE000000000001FE000000001C00FF000000001C00FF000000003C007F800
0000038007F8000000038003FC000000078001FC0000000F0001FE0000000E0000FF0000
001E00007F8000003C00003FC000007800001FE00000F0000007F00003E0000003FC0007
C0000000FF803F000000003FFFFC000000000FFFF00000000001FF80000032417BBF3C>
I<0078000001FE000003FF000007FF800007FF800007FF800007FF800007FF800007FF80
0003FF000001FE0000007800000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000780000FFF8000FFFF8000FFFF80
00FFFF8000FFFF800003FF800000FF800000FF8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000FFC0
0001FFE000FFFFFF80FFFFFF80FFFFFF80FFFFFF80195F7BDE25>105
D<000780000FFF8000FFFF8000FFFF8000FFFF8000FFFF800003FF800000FF800000FF80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F800000FFC00001FFE000FFFFFFC0FFFFFFC0FFFFFF
C0FFFFFFC01A647BE325>108 D<0003C0007FE0000001FF80000007FFC003FFFC00000F
FFF00000FFFFC00FFFFF00003FFFFC0000FFFFC03F00FFC000FC03FF0000FFFFC078001F
E001E0007F8000FFFFC0F0000FF003C0003FC00001FFC1C00007F80700001FE000007FC3
800007FC0E00001FF000007FC7000003FC1C00000FF000003FCE000003FE3800000FF800
003FCE000001FE38000007F800003FDC000001FE70000007F800003FD8000001FE600000
07F800003FF8000000FFE0000003FC00003FF0000000FFC0000003FC00003FF0000000FF
C0000003FC00003FF0000000FFC0000003FC00003FE0000000FF80000003FC00003FE000
0000FF80000003FC00003FE0000000FF80000003FC00003FC0000000FF00000003FC0000
3FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003
FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00
000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC00000
00FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003F
C0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC
00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF0000
0003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000
FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0
000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00
003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF000000
03FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF
00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC000
0000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC0000
7FE0000001FF80000007FE0000FFF0000003FFC000000FFF00FFFFFFF003FFFFFFC00FFF
FFFFFFFFFFF003FFFFFFC00FFFFFFFFFFFFFF003FFFFFFC00FFFFFFFFFFFFFF003FFFFFF
C00FFFFFFF683F7CBE71>I<0003C0007FE000000007FFC003FFFC000000FFFFC00FFFFF
000000FFFFC03F00FFC00000FFFFC078001FE00000FFFFC0F0000FF0000001FFC1C00007
F80000007FC3800007FC0000007FC7000003FC0000003FCE000003FE0000003FCE000001
FE0000003FDC000001FE0000003FD8000001FE0000003FF8000000FF0000003FF0000000
FF0000003FF0000000FF0000003FF0000000FF0000003FE0000000FF0000003FE0000000
FF0000003FE0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000
FF0000003FC0000000FF0000003FC0000000FF0000007FE0000001FF800000FFF0000003
FFC000FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FF
FFFFC0423F7CBE4B>I<000001FF80000000000FFFF0000000007FFFFE00000000FF00FF
00000003F8001FC0000007E00007E000001FC00003F800003F800001FC00007F000000FE
0000FE0000007F0000FC0000003F0001F80000001F8003F80000001FC007F00000000FE0
07F00000000FE00FE000000007F00FE000000007F01FE000000007F81FC000000003F83F
C000000003FC3FC000000003FC3FC000000003FC7FC000000003FE7F8000000001FE7F80
00000001FE7F8000000001FE7F8000000001FEFF8000000001FFFF8000000001FFFF8000
000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF800000
0001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FF7F80000000
01FE7F8000000001FE7FC000000003FE7FC000000003FE7FC000000003FE3FC000000003
FC3FC000000003FC1FC000000003F81FE000000007F81FE000000007F80FE000000007F0
0FF00000000FF007F00000000FE003F80000001FC003F80000001FC001FC0000003F8000
FE0000007F00007F000000FE00003F800001FC00001FC00003F800000FE00007F0000003
F8001FC0000001FF00FF800000007FFFFE000000000FFFF00000000001FF80000038417B
BF43>I<0003C0007FC000000007FFC007FFFC000000FFFFC01FFFFF000000FFFFC07F00
FFC00000FFFFC0F8001FF00000FFFFC3E00007F8000001FFC7800003FC0000007FCF0000
01FE0000007FDE000000FF0000003FFC0000007F8000003FF80000003FC000003FF00000
003FE000003FF00000001FE000003FE00000001FF000003FE00000000FF800003FC00000
000FF800003FC000000007FC00003FC000000007FC00003FC000000003FE00003FC00000
0003FE00003FC000000003FE00003FC000000001FF00003FC000000001FF00003FC00000
0001FF00003FC000000001FF00003FC000000001FF80003FC000000000FF80003FC00000
0000FF80003FC000000000FF80003FC000000000FF80003FC000000000FF80003FC00000
0000FF80003FC000000000FF80003FC000000000FF80003FC000000000FF80003FC00000
0000FF80003FC000000000FF80003FC000000000FF80003FC000000001FF00003FC00000
0001FF00003FC000000001FF00003FC000000001FF00003FC000000001FF00003FC00000
0003FE00003FC000000003FE00003FC000000003FC00003FC000000007FC00003FC00000
0007FC00003FC00000000FF800003FE00000000FF000003FE00000001FF000003FF00000
003FE000003FF80000003FC000003FF80000007FC000003FFC000000FF8000003FDE0000
01FF0000003FCF000003FE0000003FC7800007FC0000003FC3C0000FF00000003FC1F000
3FE00000003FC07E01FF800000003FC03FFFFE000000003FC00FFFF8000000003FC000FF
80000000003FC0000000000000003FC0000000000000003FC0000000000000003FC00000
00000000003FC0000000000000003FC0000000000000003FC0000000000000003FC00000
00000000003FC0000000000000003FC0000000000000003FC0000000000000003FC00000
00000000003FC0000000000000003FC0000000000000003FC0000000000000003FC00000
00000000003FC0000000000000003FC0000000000000003FC0000000000000003FC00000
00000000003FC0000000000000007FE000000000000000FFF0000000000000FFFFFFF000
00000000FFFFFFF00000000000FFFFFFF00000000000FFFFFFF00000000000415B7CBE4B
>I<0000FFC00300000FFFF80700007FFFFE0F0001FF003F9F0003F00007DF0007E00003
FF000F800000FF001F8000007F003F0000007F003E0000003F007E0000001F007C000000
1F00FC0000000F00FC0000000F00FC0000000F00FC0000000F00FC0000000700FE000000
0700FE0000000700FF0000000700FF80000007007FC0000007007FE0000000007FF80000
00003FFE000000001FFFE00000000FFFFF0000000FFFFFF0000003FFFFFE000001FFFFFF
8000007FFFFFE000001FFFFFF8000007FFFFFC000000FFFFFE00000007FFFF000000003F
FF8000000007FF8000000001FFC0000000007FC0E00000003FE0E00000001FE0E0000000
1FF0F00000000FF0F000000007F0F000000007F0F000000007F0F800000003F0F8000000
03F0F800000003F0FC00000003F0FC00000003F0FE00000003E0FE00000007E0FF000000
07E0FF00000007C0FF8000000FC0FFC000000F80FFE000001F80FDF000003F00F8F80000
7E00F87C0001FC00F01F801FF000F00FFFFFC000E003FFFF0000C0007FF000002C417CBF
35>115 D<00007000000000007000000000007000000000007000000000007000000000
00700000000000700000000000F00000000000F00000000000F00000000000F000000000
00F00000000001F00000000001F00000000001F00000000003F00000000003F000000000
07F00000000007F0000000000FF0000000000FF0000000001FF0000000003FF000000000
7FF000000000FFF000000003FFF00000000FFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF00FF
FFFFFFFF00000FF0000000000FF0000000000FF0000000000FF0000000000FF000000000
0FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000000
0FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000000
0FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000000
0FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF000000000
0FF0000000000FF0000000000FF0000000000FF00001C0000FF00001C0000FF00001C000
0FF00001C0000FF00001C0000FF00001C0000FF00001C0000FF00001C0000FF00001C000
0FF00001C0000FF00001C0000FF00001C0000FF00001C0000FF00001C00007F800038000
07F80003800007F80003800007F80007800003FC0007000003FC000F000001FE000E0000
00FF001E0000007F803C0000003FE0F80000001FFFF000000007FFC000000000FF00002A
597ED734>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp ecrm1200 12 8
/Fp 8 226 df<000030000000F0000001F0000003F000001FF00000FFF000FFFFF000FF
E7F000FF07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
0FF800001FFC007FFFFFFF7FFFFFFF7FFFFFFF204278C131>49 D<FFFFFFFFFC0000FFFF
FFFFFFC000FFFFFFFFFFF80001FFC0000FFC00007F800001FF00007F8000007F80007F80
00001FE0007F8000000FE0007F80000007F0007F80000007F8007F80000003FC007F8000
0003FC007F80000003FE007F80000001FE007F80000001FE007F80000001FF007F800000
01FF007F80000001FF007F80000001FF007F80000001FF007F80000001FF007F80000001
FF007F80000001FE007F80000001FE007F80000003FE007F80000003FC007F80000003FC
007F80000007F8007F80000007F0007F8000000FE0007F8000001FC0007F8000007F8000
7F800001FE00007F80000FFC00007FFFFFFFF000007FFFFFFF8000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
00000000007F8000000000007F8000000000007F8000000000007F8000000000007F8000
000000007F8000000000007F8000000000007F8000000000007F8000000000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F800000000001FFE000000000FFFFFFC0000000FFFFFFC0000000FFFFFFC000000038
447CC342>80 D<0007FC000000003FFF80000000F80FE0000003C003F00000070001F800
000E0000FC00000FC0007E00001FE0007F00001FF0003F80001FF0003F80001FF0003F80
001FF0001FC0001FF0001FC0000FE0001FC0000380001FC0000000001FC0000000001FC0
000000001FC0000000001FC00000000FFFC0000001FFFFC000000FFE1FC000003FC01FC0
0000FF001FC00003FC001FC00007F8001FC0000FF0001FC0001FE0001FC0003FC0001FC0
007FC0001FC0007F80001FC0007F80001FC060FF00001FC060FF00001FC060FF00001FC0
60FF00003FC060FF00003FC060FF00003FC060FF80007FC0607F8000EFC0607FC000C7E0
C03FC001C7E0C01FE00783F1C007F81E03FF8001FFFC01FF00001FE0007C002B2E7CAC31
>97 D<00007F80000003FFF000000FC07C00003F000F0000FC00038001F80001C003F800
0FC007F0001FE007E0003FE00FE0003FE01FC0003FE01FC0003FE03F80003FE03F80001F
C07F800007007F800000007F800000007F00000000FF00000000FF00000000FF00000000
FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF
000000007F000000007F800000007F800000003F800000003F800000303FC00000301FC0
0000700FE00000600FE00000E007F00000C003F80001C001F800038000FC000700003F00
1E00001FC078000007FFF0000000FF8000242E7DAC2B>99 D<01E00007F80007F8000FFC
000FFC000FFC000FFC0007F80007F80001E0000000000000000000000000000000000000
0000000000000000000000000000000000000000000001FC00FFFC00FFFC00FFFC0007FC
0003FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC
0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC
0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0003FE
00FFFFF8FFFFF8FFFFF815437DC21C>105 D<03F803F0FFF81FFCFFF83C3EFFF8707F07
F8E0FF03F9C0FF01F980FF01FB80FF01FB007E01FB003C01FF000001FE000001FE000001
FE000001FE000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001
FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001
FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000003
FF0000FFFFFE00FFFFFE00FFFFFE00202C7DAB26>114 D<000600000006000000060000
0006000000060000000E0000000E0000000E0000000E0000001E0000001E0000001E0000
003E0000007E0000007E000000FE000001FE000007FE00001FFFFFF0FFFFFFF0FFFFFFF0
00FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000C00FE000C00FE000C00FE000C00FE000C
00FE000C00FE000C00FE000C00FE000C00FE000C007E001C007F0018007F0018003F0038
001F8030001FC0700007E0E00001FFC000007F001E3E7EBC26>116
D<000001E00000000003F00000000007F8000000000FF8000000001FF0000000003FF000
0000007FC000000000FF8000000000FE0000000001F80000000003F00000000007C00000
00000F00000000000E000000000008000000000000000000000000000000000000000000
000000000000000007FC000000003FFF80000000F80FE0000003C003F00000070001F800
000E0000FC00000FC0007E00001FE0007F00001FF0003F80001FF0003F80001FF0003F80
001FF0001FC0001FF0001FC0000FE0001FC0000380001FC0000000001FC0000000001FC0
000000001FC0000000001FC00000000FFFC0000001FFFFC000000FFE1FC000003FC01FC0
0000FF001FC00003FC001FC00007F8001FC0000FF0001FC0001FE0001FC0003FC0001FC0
007FC0001FC0007F80001FC0007F80001FC060FF00001FC060FF00001FC060FF00001FC0
60FF00003FC060FF00003FC060FF00003FC060FF80007FC0607F8000EFC0607FC000C7E0
C03FC001C7E0C01FE00783F1C007F81E03FF8001FFFC01FF00001FE0007C002B417CBF31
>225 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 118 118 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 118 118 a 118 118 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 118
118 a 0 TeXcolorgray 218 -372 a
SDict begin H.S end
 218 -372 a 0 TeXcolorgray
0 TeXcolorgray 218 -372 a
SDict begin H.R end
 218 -372 a 218 -372 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 218 -372
a Black 0 TeXcolorgray Black 0 TeXcolorgray 109 -175
a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 109 -175 a 109 -175 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 109 -175 a 109 -175 a
SDict begin H.S end
 109 -175
a 109 -175 a
SDict begin 14.96008 H.A end
 109 -175 a 109 -175 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 109 -175 a 1202 87
a Fp(Pr\341ctica)32 b(1)605 331 y Fo(Implemen)l(tando)44
b(p)t(olinomios.)1065 455 y Fn(3)31 b(de)f(abril)h(de)g(2014)3168
-26 y Fm(Inform\341tica)3101 108 y Fl(A\361o)c(2013/2014)3056
243 y(F)-7 b(acultad)27 b(de)h(CC.)3188 352 y(Matem\341ticas)250
644 y Fn(Un)i(p)s(olinomio)h(se)f(puede)h(v)m(er)g(como)g(una)g(lista)f
(de)h(monomios)g(de)g(la)f(siguien)m(te)i(forma:)928
849 y Fk(x)980 811 y Fj(100)1110 849 y Fi(\000)20 b Fh(3)p
Fk(x)1298 811 y Fj(2)1358 849 y Fh(+)g(1)116 b Fg(;)p
1816 764 1017 4 v 1814 888 4 125 v 1858 851 a Fh(\(1)p
Fk(;)15 b Fh(0\))p 2100 888 V 85 w(\()p Fi(\000)p Fh(3)p
Fk(;)g Fh(2\))p 2455 888 V 85 w(\(1)p Fk(;)g Fh(100\))p
2831 888 V 1816 891 1017 4 v 109 1053 a
SDict begin H.S end
 109 1053 a 109
1053 a
SDict begin 14.96008 H.A end
 109 1053 a 109 1053 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.1) cvn /DEST pdfmark
end
 109 1053 a 242 x Ff(1)112
b(Tip)s(os)37 b(de)g(datos)109 1443 y Fn(De\034ne)31
b(las)f(clases)g(necesarias)h(para)g(para)g(represen)m(tar)h(monomios)f
(y)f(p)s(olinomios.)109 1461 y
SDict begin H.S end
 109 1461 a 109 1461 a
SDict begin 14.96008 H.A end

109 1461 a 109 1461 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.2) cvn /DEST pdfmark
end
 109 1461 a 224 x Ff(2)112 b(Suma)37
b(y)h(resta)f(de)h(p)s(olinomios)109 1833 y Fn(Dise\361a)30
b(m\351to)s(dos)h(para)g(sumar)f(y)g(restar)h(p)s(olinomios.)109
1851 y
SDict begin H.S end
 109 1851 a 109 1851 a
SDict begin 14.96008 H.A end
 109 1851 a 109 1851 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.3) cvn /DEST pdfmark
end
 109
1851 a 224 x Ff(3)112 b(Multiplicaci\363n)33 b(de)38
b(p)s(olinomios)109 2223 y Fn(Dise\361a)30 b(m\351to)s(dos)h(para)g(m)m
(ultiplicar)h(dos)e(p)s(olinomios.)109 2241 y
SDict begin H.S end
 109 2241
a 109 2241 a
SDict begin 14.96008 H.A end
 109 2241 a 109 2241 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.4) cvn /DEST pdfmark
end
 109 2241 a 225 x Ff(4)112
b(Divisi\363n)35 b(de)j(p)s(olinomios)109 2613 y Fn(Dise\361a)30
b(m\351to)s(dos)h(para)g(dividir)f(p)s(olinomios.)109
2631 y
SDict begin H.S end
 109 2631 a 109 2631 a
SDict begin 14.96008 H.A end
 109 2631 a 109 2631 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.5) cvn /DEST pdfmark
end
 109
2631 a 225 x Ff(5)112 b(P)m(olinomio)34 b(de)j(in)m(terp)s(olaci\363n)f
(de)h(Lagrange)109 3004 y Fn(Haz)26 b(un)g(programa)h(que)f(calcule)h
(el)f(p)s(olinomio)h(de)g(in)m(terp)s(olaci\363n)h(de)e(Lagrange.)i
(Este)e(p)s(olinomio)h(se)109 3128 y(calcula)j(como)h(se)e(indica)i(a)f
(con)m(tin)m(uaci\363n.)j(T)-8 b(enemos)31 b(los)e(pun)m(tos)i
Fh(\()p Fk(x)2533 3142 y Fj(0)2573 3128 y Fk(;)15 b(y)2658
3142 y Fj(0)2697 3128 y Fh(\))p Fk(;)g(:)g(:)g(:)i(;)e
Fh(\()p Fk(x)3021 3143 y Fe(k)3065 3128 y Fk(;)g(y)3150
3143 y Fe(k)3192 3128 y Fh(\))p Fn(,)30 b(queremos)109
3252 y(calcular)35 b(un)g(p)s(olinomio)g(cuy)m(o)g(v)-5
b(alor)34 b(en)h Fk(x)1626 3266 y Fe(i)1688 3252 y Fn(sea)f(exactamen)m
(te)i Fk(y)2414 3266 y Fe(i)2476 3252 y Fn(\()p Fh(0)d
Fi(\024)e Fk(i)h Fi(\024)g Fk(k)s Fn(\).)i(Dic)m(ho)i(p)s(olinomio)109
3376 y Fk(L)p Fh(\()p Fk(X)7 b Fh(\))31 b Fn(se)f(calcula)h(de)g(la)f
(siguien)m(te)i(manera:)1515 3656 y Fk(L)p Fh(\()p Fk(x)p
Fh(\))26 b(=)1867 3542 y Fe(k)1821 3570 y Fd(X)1825 3765
y Fe(j)t Fj(=0)1967 3656 y Fk(y)2012 3670 y Fe(j)2048
3656 y Fk(`)2086 3670 y Fe(j)2123 3656 y Fh(\()p Fk(x)p
Fh(\))109 3944 y Fn(donde)31 b(cada)g Fk(`)624 3958 y
Fe(j)660 3944 y Fh(\()p Fk(x)p Fh(\))g Fn(es)f(un)h(p)s(olinomio)g(que)
f(v)m(eri\034ca)i(lo)e(siguien)m(te)1251 4148 y Fk(`)1289
4162 y Fe(j)1325 4148 y Fh(\()p Fk(x)1412 4162 y Fe(j)1449
4148 y Fh(\))c(=)f(1)30 b Fk(;)106 b(`)1850 4162 y Fe(j)1886
4148 y Fh(\()p Fk(x)1973 4162 y Fe(i)2002 4148 y Fh(\))25
b(=)g(0)31 b Fi(8)f Fk(i)25 b Fi(6)p Fh(=)g Fk(j)109
4352 y Fn(Los)30 b(p)s(olinomios)h Fk(`)769 4366 y Fe(j)806
4352 y Fh(\()p Fk(x)p Fh(\))f Fn(se)g(pueden)i(calcular)f(de)g(la)f
(siguien)m(te)i(forma:)528 4636 y Fk(`)566 4650 y Fe(j)602
4636 y Fh(\()p Fk(x)p Fh(\))26 b(=)955 4522 y Fe(k)916
4550 y Fd(Y)846 4747 y Fe(i)p Fj(=0)p Fe(;)12 b(i)p Fc(6)p
Fj(=)p Fe(j)1146 4575 y Fk(x)20 b Fi(\000)g Fk(x)1361
4589 y Fe(i)p 1128 4615 280 4 v 1128 4698 a Fk(x)1180
4712 y Fe(j)1237 4698 y Fi(\000)g Fk(x)1380 4712 y Fe(i)1443
4636 y Fh(=)1567 4575 y Fk(x)g Fi(\000)g Fk(x)1782 4589
y Fj(0)p 1549 4615 291 4 v 1549 4698 a Fk(x)1601 4712
y Fe(j)1657 4698 y Fi(\000)g Fk(x)1800 4712 y Fj(0)1865
4636 y Fi(\001)15 b(\001)g(\001)2014 4574 y Fk(x)20 b
Fi(\000)g Fk(x)2229 4588 y Fe(j)t Fc(\000)p Fj(1)p 1996
4615 379 4 v 1996 4698 a Fk(x)2048 4712 y Fe(j)2105 4698
y Fi(\000)g Fk(x)2248 4712 y Fe(j)t Fc(\000)p Fj(1)2412
4574 y Fk(x)h Fi(\000)f Fk(x)2628 4588 y Fe(j)t Fj(+1)p
2394 4615 V 2394 4698 a Fk(x)2446 4712 y Fe(j)2503 4698
y Fi(\000)g Fk(x)2646 4712 y Fe(j)t Fj(+1)2798 4636 y
Fi(\001)15 b(\001)g(\001)2947 4575 y Fk(x)20 b Fi(\000)g
Fk(x)3162 4590 y Fe(k)p 2929 4615 295 4 v 2929 4698 a
Fk(x)2981 4712 y Fe(j)3037 4698 y Fi(\000)g Fk(x)3180
4713 y Fe(k)109 4920 y Fn(N\363tese)30 b(que)g(los)g(denominadores)i
(son)f(escalares,)g(no)f(p)s(olinomios.)250 5044 y(El)f(programa)g(deb)
s(e)g(leer)g(los)f(pun)m(tos)h(de)g(in)m(terp)s(olaci\363n)h(de)f(un)g
(\034c)m(hero.)h(P)m(or)f(ejemplo,)g(si)f(quere-)109
5169 y(mos)g(calcular)i(el)f(p)s(olinomio)g(de)g(in)m(terp)s
(olaci\363n)i(para)e(los)f(pun)m(tos)i(\(0.5,)f(2.3\),)g(\(3.1,)g
(6.8\))g(y)f(\(5.6,)h(5.5\))109 5293 y(el)h(\034c)m(hero)i(con)m
(tendr\341)g(las)e(siguien)m(tes)i(l\355neas.)p 0 TeXcolorgray
0 TeXcolorgray 109 5482 a Fb(0.5)47 b(2.3)109 5607 y(3.1)g(6.8)109
5731 y(5.6)g(5.5)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 118 118 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 118 118
a 0 TeXcolorgray 218 -372 a
SDict begin H.S end
 218 -372 a 0 TeXcolorgray
0 TeXcolorgray 218 -372 a
SDict begin H.R end
 218 -372 a 218 -372 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 218 -372
a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 109 -175
a
SDict begin H.S end
 109 -175 a 109 -175 a
SDict begin 14.96008 H.A end
 109 -175 a 109 -175 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.6) cvn /DEST pdfmark
end
 109 -175
a 92 x Ff(6)112 b(Un)37 b(p)s(o)s(co)h(de)g(historia)109
64 y Fn(En)23 b(an\341lisis)g(n)m(um\351rico,)h(el)f(p)s(olinomio)h(de)
f(Lagrange,)h(llamado)g(as\355)f(en)g(honor)g(a)g(Joseph-Louis)h(de)f
(La-)109 189 y(grange,)j(es)g(el)g(p)s(olinomio)g(que)g(in)m(terp)s
(ola)h(un)f(conjun)m(to)h(de)f(pun)m(tos)g(dado)h(en)e(la)h(forma)g(de)
g(Lagrange.)109 313 y(F)-8 b(ue)24 b(descubierto)h(p)s(or)f(Edw)m(ard)i
(W)-8 b(aring)25 b(en)f(1779)g(y)g(redescubierto)h(m\341s)f(tarde)h(p)s
(or)e(Leonhard)j(Euler)109 437 y(en)d(1783.)g(Dado)g(que)g(existe)f(un)
h(\372nico)g(p)s(olinomio)h(in)m(terp)s(olador)h(para)e(un)g
(determinado)i(conjun)m(to)f(de)109 561 y(pun)m(tos,)g(resulta)g(algo)h
(confuso)e(llamar)i(a)e(este)h(p)s(olinomio)g(el)g(p)s(olinomio)h(in)m
(terp)s(olador)g(de)f(Lagrange.)109 685 y(Un)44 b(nom)m(bre)i(m\341s)f
(conciso)g(es)f(in)m(terp)s(olaci\363n)j(p)s(olin\363mica)e(en)g(la)g
(forma)g(de)f(Lagrange.)j(\(fuen)m(te)109 810 y(Wikip)s(edia,)p
0 1 0 0 TeXcolorcmyk 558 830 a
SDict begin H.S end
 558 830 a 0 1 0 0 TeXcolorcmyk
-20 x Fb
(http://es.wikipedia.org/wiki/Interpolaci\045C3\045B3n_polin\045C3\045)
p(B3mica_de_Lagrange)p 0 1 0 0 TeXcolorcmyk 4081 747
a
SDict begin H.R end
 4081 747 a 4081 810 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<< /Subtype /URI /URI (http://es.wikipedia.org/wiki/Interpolaci%C3%B3n_polin%C3%B3mica_de_Lagrange)
>>/Subtype /Link H.B /ANN pdfmark end
 4081 810 a 0 TeXcolorgray Fn(\))109
1115 y Fa(F)-9 b(ec)m(ha)36 b(l\355mite)e(de)h(en)m(trega:)c
Fn(Semana)h(del)e(14)h(al)f(20)h(de)g(Abril.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

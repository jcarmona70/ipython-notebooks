%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: p1_08_09.dvi
%%CreationDate: Tue Nov 26 13:42:01 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMSY10 CMR10 CMMI10 CMR8 CMMI9 CMR9 CMR6 CMMI6 CMSY6
%%+ CMSY9
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o p1_08_09.ps p1_08_09.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.11.26:1341
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!
% PostScript prologue for pst-coil.tex.
% Version 1.00, 2006/11/05
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 } def
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Created the     : Sat 20 March 2004
% Last Mod        : $Date: 2009/08/27 $
% Version         : 0.5 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 107 2009-03-12 17:25:46Z herbert $
% PostScript prologue for pstricks-add.tex.
% Version 0.21, 2008/10/15
% For distribution, see pstricks.tex.
%
%       HISTORY -> see file Changes
%
/tx@addDict 410 dict def tx@addDict begin
%%
123 srand 			   	% set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/UniqueID 5096650 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 49 /infinity put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC50FA1F
3E01CC550BE5FA0703E1B89486C67E8A16C560DBC051028078BEF85B349D3058
55D633040BF5853FE9E50A671CA0A088959B2AACA1B614DBDBD906FBCB6A6B13
7ED6C5BF448F92E9EB110ECAEADA36CADF4B6D79703CA2EA9BBCC810A6E3532F
63C155FB86CBF6A6049D730B4729C613BD759AF3742399C6B118C1D2B38FBC4A
2324BCABE5841102D7040970F36DCEE10B8D8708CC440A7C71AB86921F94B67E
7E100DEED6F4DE49CABF3B3C9E4A39444AFB50DC2E2ED00D993F9C24F678538A
E1C2ABC5FED4789AB85A2DAD84C1027A396A134BF58700C757C868F794AD73A1
11C0BD9FEF7AF11ED7FB6CB2A6FB1E913A0156B1B3105C6C805556BDF996C303
E31FC8C5D07E2EB0638439429B5A712F2C0913CF87E7040B3587CD2A3F8C2B38
FA46D0BED7DE903274DF1271B4DAED5DE98EB4AE3627DC1F5D39F87816819042
060B4C5DC5E2AC6165AA7EFBDAD1E5527043236F05A200F8E08C320F3561E6A6
F306AE1C99438EC27B614BC13B2712E28554058946F3AE1F8F84B472DAD38618
25B9CF7E3758A3ADE2591CFFFEE953139FC49492E0FC32F34F5059B95FEBE2AD
CB0788A260215F3C97A538DFB35298A9BF05CBF36B5BFF352D831DD4282AE495
D3A56B3261C5E91A38C21673DD2D98C2D26AB368921D218BB6F962D1AA9F3110
4471A2E4ABD2648B24AEB18AA8FE5BAA06F58B33C1D01DD5F008ABFD16866654

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/UniqueID 5096647 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 33 /arrowright put
dup 48 /prime put
dup 49 /infinity put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6CCF2F577C568ED74466961DF3B0939277731760E6CA8A496B50489AFDF559
CE627D143D52526323CAC273BFD758BF39B9E4F6E5306C4323F499565020BA55
55529FE733D7FBA7B8E40551696979FA2ACFAB87F68057AF087131415E69163C
C82F28EDEFFF26BA63EBD1CDC3AD95CAD2F716B117A813CB8EA3D4428A5E8B6E
99DE9C6DF75DF2A8B1FDC575BACC20FBAFBF18093BF789554A2735307C50E806
2611B40AD0B0B692CC2FE90505FD231CABF017F597DD3464AED5A9360E35D3B1
67935CDB2EF4A31E9961564712F620E2CECD84A020CA5725B5379391A95E8DEF
435C025F6736CB85655E7A32735403842F24E09452177538D5FFE1DBC93EAC78
3A3D595CE9F9621B41A27CB8FE2BE3A47D08C0DBFD982242506DBAA43CC794B9
7A38E5BE87455DBC6AFE56EDD97BEF0DCF598221AE20EA71647D5E3BEA194539
41CFEB3D8BCDFBCA6179403ABC9396C50258E7464A25EC4ED66CD30886BB2CED
46A45A1DEB1C931859425D6A491827D87D74996D6416117C48552D9DD9C3208C
36E8771D2758976068431C148FD1771FBECA27972DAF99B4A4A470F2EE8CB62A
69CFC4FD5BDA022C1490DB6E480A79E9A4DA671E5E38E3459823336D4A7A3A2C
EB93918B3094547F62ABB5C1D53D36D5137E581E5C130548D04EEBDCCE532A89
6E1BAE73DF76094C31752A35EB3376FA5918434EDEF6B9D224AAC961D9AE0773
2488F587AE5260AD2D3C82C732EF073683813AA2F1373BF77CF8CBC9EBE12CBB
1014CFCA525D34C15824BF043A3FC0F8D929BE3BB84254561ED9910103B8A8F7
14F8E6BF2C7BECD0E38F15A72FE55A184A796AF4FF62C25642047C1FBFCEA7E8
78
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/UniqueID 5087381 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 112 /p put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E168092C539BD54D5D3FFCD
2B5E02399614BD5085D49ECD04E14FDB8686A39D6B3F7FAD25D751CA66148781
32296AFD919D83DF85BA4FCBD7FFAA1D831C8897E39819D72F271AB142F1C4B5
D94BB96F64B76C0C8A2D1481910C9571078DC7A4E23C0F133241F06609699988
7AD4D12DD860E2A8E037290EACAB5FC3D90C30A01449D0F3EB9358A8B1E1C2D6
AB92277FC241439926F02B1D5E36F4A5E94C0430A0400E3EDDCCE5BE60B3AEF9
BA97205FA0BAD80C3EDDB35945946E27DC9682816BFA4436B7C995E8353CA6CE
A532D8D57FF0B407C2AD1E917998E0394DA34FB91A4D0DDC48A5A864FD0F9471
93E02919AD6C9143CEAF479DE58330B0464489C0F01853B81FABA80ED0589969
89300C1C867B4F93EE674C7A14924ECBE93CA7FA8EB6F56CC66772E7EF7E7638
50BF18A1F6DFBE0C02B70E4F1D96279B9640A6944E1A8218B0BA477D13141991
A5C5AAE473AD0586DF9848FB35A6CD9307C0BF748C6EE5584403FBA6550A8485
1CFB6AC8F36B858C3B88FABEAD607494E54BAB5F43F5AE29EA24B227BAD8298D
56805ADA3292F84CA82EEA550B83A32BE8D5F456D0627E006FCFBCFA5D091B53
D4D2E30CC38FBF1A9A407DA2E8EEB2671860CDD549952126F9CA6369259C3D7F
9093B939357DB83D7237758B75F5ECCDF594AC59DFDD98A7266E6C2770A8C390
B12FFBCC39BF7550E6F734C52E025257D8A2093AFE7AD88349A3ED9833F13117
2E67FA6C517D55E714724DDD47097EE713961C8A90489543C4EEE021B7F61624
3B4305F9AD0D3514A06624AD5C24DF363322E3A10BDD80FBC2D28E4027086304
C20E81B361EF226426E7BD0AF4A794C209C539160593D321C8A8481011FE7B5B
F99A1169C68C898A90443B82CC866231F3A538D844517290F257D6A0EDEAB129
A361EC8024270D118B7A56AD2DABE536DDD44ED368644B97514253BB5C3A2268
221247E03FBDCF43126044006886F8A4D1DF2E290C38F623DEEE9DC8E90BE618
A8A5F47691A875D939E08B2E391A8E87F2C6E50D478996882015FA3289BD0AE1
D2C3CC38F0790F0DC9019AC5DFCB97963568664955028AAF2B1338DB0E3EE55D
6E9FF2DC6C5A4513859B4408E05E3D6E062E6FD77C969DA01C25307F772AA979
AB419BC88A5C340E669609346690ABDC341F1D5350336FED42AE01A81D4BB333
35D39600BAC1AB28DE5E15F994B3749060576D73A554E2C260AFA492F2AB0B86
5C1B6E3329E8219CBCB3CFC9BF8D5DE38050EA667D61F4668F2BDFF6DD7E3913
D8D2AA652E9AB39DE6209E68377A536D30C72422364ACB5CE8AD0D4EFFEDF355
623A9FCEB153993D9418042CE6AEA00672429DDE5A1D9D84551949538F4E07C1
23E6186A4204601922A02ABA85759E840677D99CFB17D31FD37E464500EA9ECE
FB3B2212E0DA0AAEE9188117F366E37320FBF23764BC3CDE8558A303CB8AF61C
10BE924D824A57980F382EF9B1753FF756D02B90D170B547F10CB48E72AA3107
E83E1A4E6D08DB2A24521D534C7178AB8640CAEEA818EB123029BE8F2637FED3
8CAB80B50308A76AA3E1B3F0608099AB5FA9B6C5D7678761EEB7673AD629A712
84A8D7DFB5A3DD4FF9B650C163BA3820BA784F8E62D065C836E5C217B6C84C4B
C647B3B7F5A31C1E35C7831C3F863C82A77AECD60BABFCD99937ACAE26DB46FE
8B84A82FFAA6A4EA578DAEC90274FE40206F08A791D3E6A511F76EE181935E0E
19E0BEFEE869DA2C1BE552A9CEB8CE0F712CFB9D5C4F00396FF2F96761D2FD5F
F50471132EB48425CA1E8F5929FD3B9684522C97850F54074673
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 51 /three put
dup 54 /six put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7CC93119675040346B0FF1754C1EAC3D277DFCB3B457EBF747976F09C
FBED73EBD70DE1B4511B333D0A064072AF96926D98C8547B14256AEADF217F5E
986B3CFE3F4F91C104E84B1D0B6660D0971A45E76B1557E7966E1AEBF6B0922A
ED8FFD6EA9E39B4BD1FA9865198AD39CFB5777168DE2E20108B8E929633AFA1F
CB9F235C99545652E1519F44BC3E06FFD3701112E2301A13E3E45AB31E7C55C1
E6294CB1CCC563D7CFE13141A3D6C91A07F0E2CCC182922F788645417834CD1F
8D561FDF4B792B43B987181000F4BA284FF0854805296C03C15B69DF110DBFE1
0D0BC75DF8031CC3FE596623F0E4871AB331F1902A4F1B4C1D8178252971CC87
98A408405112F0CCF1C6828FCC9D48697741E3476759FE32F53B9F3588D2FD32
9F1832D480511BF45C818CDA228F9893EA549168D1264ADED3CE377EB1C15E12
07A1FF78646319C279B0DC9E8545711BA018199BCFC4F88E6018E1596AA7D06B
3EA02CBC2C1ED4007D757C2B3530563F274802F016968777B29E524023173279
12D0BA494CF9053DD7CE9441C688FD13E33323F96900F57C19C661283FE09CDD
F8AF965672D03D68F6E7DD3E4FF3A013952F505AEBFCF09F5079E8B3D9C3C4A7
EE1CA6ED2A8AED3C19DE9F1FE94301D166ECF5E6E48332C49FCE7FBB7E7DEFA9
167CE2009EDC1CFF4B7F7A2104A638ADEA14D69BA6ECEA676A53A928FBE8CCD7
6B1103F70E8366B8BD95BFE6FF3291457DF34D55CAB5F7C978819A4681E6FA85
F53896AE7A98E1DE78C7684A23C7AF3A8CA4EAF8FF65E3460B32F42DBC827E18
E9386441C68C17E0B398F3F8FF57DBDDBB12A261BA901CBFEE125D2673FB6355
C6230AEF76933B595E223F23B199CFAA5563795A60245E5799C7AF036BB33B40
4BFA0831CB54A7C4E1027349F68C522E2721BF1EBBE1EE2C3DE7E967C8E447
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/UniqueID 5000792 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /dotlessi put
dup 19 /acute put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 57 /nine put
dup 61 /equal put
dup 108 /l put
dup 109 /m put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5B4D451551CAD2F1D6A035B7F49C6CAF9F30BE03B0B8FE5F8E25E7BD7782E805
4EF42C14D487BFE8E77B170959230B16A4E585578EC5D5F64D243AD0A1B8DCD0
67A4C160551719CCBED7AF47448C6FB4A1801BF0230D783C89FF0EA2CD5EF835
2A3B2C0C3249870E1F82642B687E0179044DE2554AA186982F47DA47D5A08E81
7D6DC4C8C82DAFEEF86EB672ADBF769277F5D4878326B6ACB123477906B1BB46
61AFDDBEF0181E9379C2A112ADAD4BA3410C344223F84A6734B92BCBCF272663
ACFD83E27409C5183CC45B727194144093EA5553BCB27643E0A3FBA8A2966576
C63297B03C9F7F76CAF66A1DAAC8DAFCD170DB2AE290922B8E103169FE0B7332
23E1758D5BF559E6BDA1685A28883C4FB7037FE312A5EEDC40C9D11EC525C665
B167E2537C66CA7F4F0F9126F82EBB90D3C15A768F0AB20C0F2AB7DE32112271
A15130E0812C23E0851E4D2218F93467C904661E11169AB412475580FD13F889
686967136E64075A896BEB0CD3285632D65C2CA9A893089827D7B0C795C8B19E
111895943C6CE54E4990F54783F3F1233327D164D7FECDC0F19C8D0285CBB02A
4925DA21728A805E2B75422220F791C6907410B6F75B9807C8A60296C240CC82
E9DD6E0378A1F7D1A22A2141EA657E556040D4815F653AFF3E4E36585CE14BEC
08C56D322EE6880AA526012BBACAB46E5B0A7193901C65197EF81E8C7758C8A8
B729F90B73639521BC63A2252638E44CE1A90B47A7974053DAB9937E5FDB670E
295524876CCE41E6A4C2C7E3F1538C8476110D7949AC14E89E77B4C59F260ED0
FD35F425F0F8F0992FF91099C74E1A0AB0B065EA8FE3B2E77F515CF059687972
41B5BA06E191F0497C1211854463046528202A452C3420F1AB3ACBC0FE8E3C28
3C02A4655C579BF21B53D1FD37996C6B4A4DAE890620BF249A218DE01B8B920F
09E9FA8EE38FD31C1E93F5F396F67B8ACF439CABFEEACA48453BCFA7CA7D3C3A
6403B9A7675DC69ED861AA0478A60D45E4912E5431C06D2C1CEE39D5413C110E
B25E120F82C18115E0E968F153DC61DEEB7273697AE8307A0950371A52F99FF2
90E8438626FB5F6088590EF3CB9094316D32F80BBC99957FC27C6F97018C0577
82853D2CD37C97AAAE4FFE52F99077D9F44558D3CC6C0FA31766E217CC46FE08
016C3DC5161B74DE04DA7417CCD1A7C6BD6348B96E2B9A86644C798549129F0F
2E60FC98DEAD16910AA9EB967D0BB8D9B54A29D1617979E9834A4762C68BB4D2
5E6EC14CC8E473378EF559D9BD4315CA9820CDE8790B22DFCC9CA8080BA5B1FE
0CE81793736C27F4F84A274AC6D0964D274905F4AA781985BE68CCE176991316
1927CC9CC41102CBA484CA31624043467D180B167F6C11F401D3DC68EF20AD84
D3DCC5ABC5DF3C2D7A0ACBD7F4AE59D66C396CC403FFDFE7CA857FE2A4A42DE5
A4D7E552F448F32648A08F041940A822CCAC676C711F5D73BFAE3022A2480CAB
47EA920EA23911FAC8D403EE1D879F126A0996C133C84BDC93263A51D20A8C51
31CAA7858C44B3B753D94A5DC219C23354B8DCB9DB2D9091578C3125FD5EE0AD
79CE6BDECAACBD0EDEECBC46797FF0A1B21ACE3F078688519D65ABA7FCF029A4
94B4B2E33463CD188EC29B660F0C36C72BAFCDE3F1B6A34F5AC249D6B5D80497
5D34D7B536966EFB6233538C28B222FB9752C3364D1FEA4CE01663E3BEC06E38
E11AA3C4550594F934035595B51D9C08C7AB9933030AB08C9A65A621AB4E47F1
258A68555F75D744FE64C9096E1245CBAD643E9DA0D6FCC477D8F2282F68FC04
1CF29B7E5610808B8395AA321C033EBF95E5FBB5B337A69B9AE37152851A2522
43CD5B091956B8976543DD67BAD6337DB222D1B55616E8BE9BA7E7041A0D74AE
86AAD39F4C325B4FA726D5D982F51859C7C7F3721C6D3E59C8BD461B8939C2CD
6E8ED03B1A0B540723A9E07E7EA863533F511263D0B6CB82FBC998E3BF67A094
4673E51D601F0059AC974D6E0AA39FE62926E336E759CC431F71C2A6958C5EAA
DF600393CD415B03CDF6463590A795C246AE56EDEBE0AAFF7BB5F44C95C49193
7F248BE3F03B97AF504BC41B7A0A6AB873F4E4E771B39E184D38A4147CA7DB47
67164C1F8913A3EC40F4B8A7D958BE52193D390F64CF597617E1306E829C0DE7
D9B1AF4486007DD622B38626B241C9C27C4EC2A72E11E36CD6755D567AD17C93
C29A9CFD64E8B44768E58B9B5DFA4C7AC80F102A87D135D32D936CA6C150C92D
978C3E67FB3D8DB8562C91445ED030412CA49EA1FD1FC554D7432124DD6690C9
B7558A94709AB0236374C96605AE995D0087B4BA257EAEACD95E1F31CA56644A
930C5FEFED5F67208CB290F3B0A001A33EF46A8B8167D6E979DFAB6E2BAAEB14
571F30D4D534DCBB7A515BB2519C6EA8C77DBBD5BDDBDE7F85C1298917CB7BCE
62E482643DCE6A8E017530D2688696005C4BE9939C3D2E30C79A352868D3B8A6
14B8DF8C5D3EC29BBC787012BB52A31F7D3532C5B8437257C003BF1BF0439DFE
02041DC06877DB4490ED9B0C4BC0CD441458642213F96AF307A3D6C1C77E71B6
772215F88F3DF39E9B80E84465156E2C5620043D226E94C9A50F20F7E679B55A
20A28DDFC217B75C6AD421729E63272998A987C4378564B13DEC5A5D7DDB88CB
807284A4C136E7115B6E0DABE2CA6E8D75F6AC7B720F960BBE1A1655C8C9853A
EE9DEDCE0C81A54933BBB3E181A6562D4AB43C3CE86013D932F9CD8774D7E6FB
2B1082AB2CBBDA9DBAC04FB95807D407A5B72E73BFE1A82E8EC2831A995EB195
0A10E929512FD8955ED635A14A136835691EC8F2B2B181D3E7E224CFEA980195
C7F17DB5AAD2649A2D497D06DB78A0600F468E0433C6012ABC920CCE09D60B14
3A4D53587D01E1BB9A4DAF0258C391395CFA2811B81E0CAFD89E4EE7D0323038
EF819D8C1C36565F9A222640684258951C4A94306186D8BB02262BC5C1FAF183
1297834E7724DFA925CD8A75129006DD05DAEEDEC03BBA054761E6E9F9E1BE1E
A1BDE8F7AD62C1DFC9DE5CA08F44DBA698DB494C76BB480865E114E7477D0E46
FB2C0184FC1A29943463F04CED72CAEC0C0980C2DCD61B9A50E90AD55795841F
4141D8750976AC03A5D636B443FF762FB94F1F7D8F5C1392211A3E4ACD121EA5
9B5806A2C880D819A112CD96A0A05B8647FD825A3EFE8EEC00D02B73CFE7DC30
2F2D433AB842DBF2D42644C3517275636D6C76DDF565DF8DB71F8FA02DCD3672
CD5E51F6051859CD54F67E201F892A3B5A5F35AC4776E74B1FF40C1D5A80F3DA
5C529BD9E6E8E54A70137C356E177C09467EFAF2A04A1F1074AC99A3C9C80AE0
57BD27D90EDEF9A525DD5109B0A0D96716BD69CCB95018C93420CEDD2B231E5B
4DDEF93117062698E699F9CCE00592874F931CB230A795FE0C11F77F34A38885
38F458B85D19AE2F36FEFA77D26C34ED1D634EF043EB0D22095C207809CFD943
D82D4C400821A3499FCDC855CFBB24F60E5AB744966BEDFC2486650517EEA071
C45E0316119F10525ED46D8A5F9C370DF43DDF4924B330458B394788B32D1FE3
D80CD8CC289FDC5396115A74BA4E715307EDA0A9103336E5C449F405CE62F7A9
E20447C99F1AEB40A2936113C9EA2FE6B857C643BE349C868389B1DE3BFED2DC
0FE6EE6C6EE41573FE85E7DC32045411D7218DAED1913EB2242F8DA1BDE072C5
DC9BA5B64ACCFD6FF895DA233C83D4EA03357EE471A8EA1BEFE75F4E54DACF74
B94B24B1F3D76C8FA3781CDE1BB87EABCE86A5607B3D72A4B30956A33D2F2858
41643CF9C53D9CDCCD928D58D17F3653A38EA3587A3EBB30BFE401705CDCF92C
90252DAC3E26B1A4489916F1B58C52EA48CAA1BFA01C22B6D5D70F70709B36CD
02ECEFABC2E5B245BBB97E877056407E0FEDF47C0AA69C4E051EB88CFDB44CB8
2B4BE09C27EA9089714B8414CAE6771CF1880B1E0F90DD4192D9D91CE24211FB
5D6B9D97BC4A9670160E5633BD7012236E677C934C777A1FA168B469D716EF75
2CE02DFF14E2EDB23916CBFBC0F1281569DB1ED517E8C75D56BE3DA03BF245BB
56F8E16E041F9CCB63AB70377DAFC3CA52F7FDCF4D28FB8F2DDA2B8A24FCC9DC
22049BECA458AA49912CF5941904D535C2A758CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/UniqueID 5087384 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 112 /p put
dup 113 /q put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82E97F8A614D2BBB0E55396
D3BAA9869A0C70147753E076B7B3627AC4BF0EC971310C9E947E11D1311B45DE
5BF7E34E78760F8A25C609012CBFC8AEF7E7DF68B41BDCE88DE54162B260CB91
C49ED99825BC8E9C0DE9599E8F9F8AE662449D3B57B509FE3AE55865902C743B
3754A3A2F61C5FEC5DD89072F6A6708A2EE664643888AC42C394A7EEF8762859
353E43AF38D0D4E667A80166DB2416958169754EFD6DAA3294A3B2F2B7AC3291
FC34401F9FC91BD81C0982D875916EC82F2EB30354EE3F932644E9B2C7FDA771
2937EF997572001BA25863D8B075B85D0CDFDAF3801E3D31E7405101F4241357
18A3FF22F8845FE4F2E98EFD2A2B159A3345099979E3BA4D68342357F414EECD
D7F378B62DB43CA43C2C6699099E3A293C251525DB5F498858F45B3CC7E5AB7C
0429E0397D051F935FEF9BE459635C33DA33A863F2CE1E54968FF0A86B896DFD
65101F7E23B643C6007E46BA32CABC65FAF280488A701834112A3F53C0F0D838
F1F12404F0794DF0145D43904BE2CB742BE33AA0A7E4A4F64A843222E835FF0F
58BABDB8E902C48C7E02423AC3A5E47550DDD852DE22FFEBFF0D1964F7AA38D0
49D546917A9C77F782965371680CE8C3497F1B51D15F55FCEA5226A01977BFF4
1CACC133D2BC332426D32817F45B98B7FD1EF5FD7D1BE2ECB1F619859570EFA8
65B05614804C9235E26597B0421E8023570E4A8E2EDEF736572A4542B0E0D44C
50E68E8B81986BCABD3EA496BC5F9C9277BCE5D883A5FDB8B8CC55210722BCA1
5B807558ABE55A245424FC9E80F758BFB203AE7E19DC2E5C320904250AC55E38
DAFB60F8ACC74E9BD52BAEA6E7192DAA0D6F9E1E549E6FE77A2958DF6C144048
9EAB5A134CDAC70860934DF5AD95663971D856C34F5BAE8454C5A695C6573F4D
B8A2A8E02F7D264F7DC318E986244C0127106A0074036A8F1A1FD66BE1C6F094
06ABE39396EB91684822782DCAC3850C43078C0BE418D3D43B2C23C0AF05B844
8E245B47A5A91D5EF64E478606F99C0D80682376997D5C671C402B4321DC9DBC
7E2F37D8D13C0EA9F210E7F1AB6D358E728EAE67CDD9139B0EB5D31FA4DE1433
1186B716437D33861F8A5E113441DF4C10263442F700281ACD06C75F9DFA98CC
0BF6E606697182B4866F2A80F5A172FD34C0F7CEA880731E280C877E6B106990
2370EB0FAB51C6A38231E4DB1C7E6527BAC821108E8F0B75DABE9304AE92E11C
A73028DDDB0F17E445D58E49D1B150518D1BF204E366850D8A0A065C513C4693
70CCE55951203D92B8385549B32271CBA56A6327F388CDE97BD65B80885F9C35
C916989CCE6399A1C77707D0CD8EFD6330FDD1B84D951D5BA9D436E5CAA2137F
93F2E3D0168DA5A82AD3999621AB1F600AF8CCA6164A664C39B9A67C0626B3D9
E1E949B570FEB532FAD3F4A4CC02D78FFA6F61F8ACCAC45D8F46676C7E2AF072
D2A22B8573AA2E5338872876FB469C4774A590BA9C7E7F7BE4D469C960E6A221
7FFC8F1476902E1B2C9743E60600FF8861A26EA4E6F173E070B4FDBFF5F6162E
76FD0A4C86EB9E24619ED5F10F60C622F588E757DFDE3F501419CBAC37411C2D
1622ABBDA2A20BA13CE71B45106E30EAE4165A8BD772DEA759F5B0036944E5F4
E1F18BA77D741EA7A021D2E025B0255EE68C57EC92F0E5869590ED8EAE6D043E
CA1ABEE0B0E77D9280EBE552BEA5760FE60B8098975EFA5B9AC7E852EAE1AC3C
A161A7D954FBA40FCBBBEE2878A985F88E000380DDC0A4A0BB6725F31EC1BFB4
986BB32E0D35B040397C13F4C54C852DCFDF0CFCEBA94B9A4F9D18A3EDE82455
5AE5E1B9022D2E470090F2C243055009EE7A5705F3FFAA2CE30D01830E7EC8B6
C675ABC0701784AB3448CC02D380B2397696600626A2A6CA76E8742B1C18CDBB
B4B2C603625E2F51BBDB409F3E5CF99DB03A99D3DC17146EB16E1D9044A966D3
0355BF0FD5497EB3D5BD34578A41CAF694E64D12A370F08C78D7A332588CD526
36BD22F0138C9E69247407ECABCC6FDBB0AA868FF0A32F71546DD0504A4C3748
773119F764356549AB1C3C7CB38A4B0BCE3CE7BF865179ED2580F58D401E07FC
60B5AD0687E563BACC47E71D2D1076BFADDD0601079936E02ABBAFE55DA19692
DCB0ECD0FCD2E7CEE6DF80F93410C44D1F2703397FF51D15CF3C83CCBC4D751A
BF12C3C7D4E7608B097634D9902D45050A0D7757A4BC7CBDBC848BBB4904308E
7E5C3736713C4600D2124A8BDA642278F95A8B15A8A5188E5735E6488B5805BF
CDBB046AC36894620E6535D30AB417B3F04E00B2582EA6BEA586C1E470B26546
23FBEF836E773818C32ECDCF5463AC057EE381BA616A995D3BA225FE1301AD4C
4D512D16699C0798509B8BCD97A6F4FA61189A008B1023FA62B2B019BEA8F5F4
B9FCB27CE17351F2C8F1D21062B64DAECC95E0E08A723F6E28CB40A81CD33445
B51BE1E523ADA23E8FB8F1F53CFF588E2D73C516AAA7164C9B38832800361986
4FE6D4B6F1DD4E0C8BD967A70E1F60FDC2D89349D34AAE7D629A31015397943F
FCDC9DEEFB7A2821821A6028CA5B8BF0468F755D3876A4841B86C986526C9C45
BDB017659F25208B98046B857BFE645995D25F862930DBEED2FBE12B730AABA6
5B5D9288B8F54F0F1BB39F31792ED9C442E7028B74E5A461AC285EB434231742
E7855D7D3D28BC42AB5932CD09AA19FF0CE4F45064C1476DCF42F92F8384AEE0
39C21212221D2384EEE370B15AE1C5279A025007D1ABFE9DCA13188C0DD12D6A
D0367C9754AD8602D8B62B94C645FF8C26CFC49B0D91F1F8C6D29FF0DAE81451
42BBF6D5FA7098E1398B39D746F5F5D8329B5B89B45450BF8FFB6EBF8DF4D318
92F73F064B0590376E07A9B9A4C1336585809E0202FE86882B0551D3C6AC0A6D
BC0C4B655732D0CE8E1BC38F23D72A831B028E3A160D461041BC9E5985A31E43
DB9862C9341FDA40283F22F67FCCE2BC52AB3F09CFC2919D5C1087CC412FF013
3EB081C62631A4C988E78AF1DD3F18D803E1791FB17A866A6B4C8F4EBF0AFB28
36DF44B36FBCFDB46CA6F922898B11AFCB79D7120D930ACB75230CCEB4DC1DA1
9F85FBBE6D453B6BDEF2E880C29562667350C174449D377F0728FA6F04090AA2
0327E7749591F5005C6C67E157C0140686B0860800BB0AA8FD56B58EF45298C4
8E452003C14DD6634F61AA01D6A2AC1F7D77EAA9FDFFB2961EA4C088AB990AE9
258FFEC06F02C4249DA6882969A3616D04C100FC9A2160F3EEE2AD587BA18E98
120C642EF23A81B76E1AD34EA692D93F4F3123C9C04A70FC829E33829B4F14C6
1209DD13B4922A7D6C2188956E12EF0210326D4ED8E2787F77F71C4690EF9868
F8E9A714F8C8BE45BAB8DCA0DC2A9CF4383373C8240459A91135209DFAAD6DD3
AF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 51 /three put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DEB8CF0BE87C59313978F28295C0E3A01D2B5682DA86A38F390982A8FE
C3E81B8D3532C92C4A4A4BCB421D248F786EC50B3BBBF3BD829F18A73BA4F676
4C5EDA59C34FA85648E492C5794D0910F67F9B6ED89E5BD09B9DBFC65046D77A
2AB706D3312335A3486A067593EC0DF7D334F5D37B818D991D1666459120C75E
6D21A12D75234C22F4F92A4EC10C056298F89550F48605432133895D51B0AAA6
0A8E4020C84D14E4FBBB9E7C095468EFDECD7BC8444DED90ECDE07F2518CCA84
78935CBF8B620C324A87D6049942E772A1FD7BDD577A27869C88841C83D4BC18
6D2FEFADE998BC7D9189300F7C7DBC3F666FCA9D53EE447E310BD22EAD502BDF
33D33A50C61F575E1D3A1F70B8D72F34A9E9E8250627BDDCC62852DD37EB92DC
93D7CB4409D10AF291303362483134E434F682BCBA364206F55EC698416AB3B7
04C31B1D45882A3AFD4037A692272C4ACEFCF08389ACB43A6857C369CED4BBC0
2C487C9A30C787BB3E003017AE803E93C77E413CDEA8563EFC875A95706C980B
1DC2638914FCF6A9BC11CC2CEF0AF3544D2F74938FB2BDA52602D1693D93FF4B
F44DFFD5B2ED04F22D23804CB869CA04480363D6EF55C905D384CB11A28F8555
F2641801E97E84355979CB41EE876C9845
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A90B8A9EE5C613CDB822F07B
115D4C174FB7945535F2F9C2875C9675143B8D98DEFD3898170FBCB19B4C29CE
1E6883E0F68B5D42751BD7AD09E3EB745F0A6338BA2148B769B5E1EB21109414
C1615EC1A1FEAD5831938F74E26E1F6BF51136E5C76F823D29D35078412923DB
B3A32176ED7935058ED16528D28E50E37BBEB1D1554503645DD6809FA22A0DC3
112E7888A499450162B7373CC8855953B351E8873A4D7DCC40EEEE5A8A2D00E0
EDD8CFE7153824BF94833ABE10FA64768E457D5395519937705DAD2FFC5E71D4
521F01213B7DF82426867DE914CC9866E428F614F18078B4367187426E2260AA
AD0175A79ECA5F533693C732411F26E3C4BB6EC72B16FFBD0BA30BA59F263FF9
6CD42386C234A9C45A4B00FD43A3D0895670C4963E64596E2410AE5ADE0322DD
BABD22C6EF8FAF9285A773FBA8BF853CDD12A3130F4158BC645D5D6DD13E1FF1
C46F4CDDD0FAD8AAD429F22C3B3E5354097E8161E684731C14CE14F512D52DC7
66E9A093F76F842AFF70DA55B41ABFBB16ABB45C90D51CF08459AA4CAE0221E2
C18D22DB2D3C1AC3216A5C683303EE239FB78B1B323E55535ADE97F6EF532B75
47DB3EB213DA28B101BC3D133FFA23B90559311DB53ACD905338AC2FA58E22B9
6B1117338F7A981BEC8915A5F39CF9E25A01E4B3B71F14755C16919D9B540F08
5407B05BAC5D0C24DC21C57E997D854E88E11E6AF34457ECCCF5D9ACD8B55DD5
77B33E0192E608DFC32AEB32FFEF3260C876AA2C9EF107A7F4743E37FFEB1014
4EBB25316C4B2E709B579C513D3C6262626E2C76BDEC1BEF009A803BB5BB261C
4A2A1AB640AD265BD5BBBB0BFDFF3CCAE41A8666ACAA1A2E6BA0199531DC6101
DF3FDAAC15060749453EDD7F4C85D9D0B3B86238B0AC0FE5F71B4FF57408A863
C1A6F4F0BD10E6764B77E20884E2A6739E7394AB3045013D2F823D8596380534
68613E6DD9F9555465D67A765BE53030D6A2B07A3D637C4ADA616EB0DBDA9EF8
E07F69906E7ECC750939A1287BE2393EB57B120A38FAA6F7F0A85973489A6E25
AFB463649ADCCF78D33EB7B9C1D1888D3E319D1905DC364AC7AC6EDCAC17E452
356347F973C2AA649C96BD9AA047DAD8EF87066932EA3C553E99275D483D8BAF
0028BD4A03E5B2AB0718AA52744F6BF980E4D4B45FF7BAE8F661AE31F067AE73
40CEC5553F6307FF16F892DDC6D452F04DB91746885252CD0627A8346622284C
03C2287EAB61E046897358142CCDE6ACD56D4111B2628AC0A888C95232A4C56B
48F3BD2B26670C16DB4F05F3B50BD11FF7543333D3FE24A8349D7175860ECCB0
C5A740A6CB7CE5A223E35DEFCB0FE533049368A45122E62F2FDC7E6E1CC6D4BE
495242D130E5EA3F2BC9C5FF29DF2ABB0EF18A041FE950DDF050D6FC6E391670
C226252C5EC414FB61069D3F80EEFB22BC7F7ACF01B405A8739FEA2708C87720
15FBA9CC7A9A59B4CDE3DE42A963723E15EC1D8C111A1014C7DA221D1AB9E25D
F0A87E1091857C65FDFE9076918D9A86304D91B993200566364DBF1ACA15821B
C2693590F534930563F6C61F336DDC846F8DBCDD08D07420FB677954C9B978C7
1415425715B5BCA1A5991FECFEFCF98B7BDFBFF440F37E94928A7531F7BE9365
4423E4C662951963244C088217D4427A0788BCEA92C5623F4062BE2C7490C191
649EAE707A852FDF6C3A5C4B36F19F0F57D1CBFBB5524E3DE5185BAE08FAE49E
EDEA8A7A867A68A12650DF1CBC077F4D1E12A25E2D2E5AC6C5DFD357FFE5636A
AA59832ED3762D59A029B8D2AABDB3D1774E8EAA92D6B8D5E93B3CCD6743B1F7
0899BC98F132CD8F6460871B9E220AAED0A708EA8C459E01C3437F34FB5BA240
3A161127F6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E70A7911CEF46D4A4074EBEC25F55A638011A4E0F2D07A01A042436C62962A50
973F9AB79BDDF1747CA2F970953AD5128331F2715D093DF035D882BFFD0E0C65
4D9E97727C8B4CC50778EDDB5E0A210C9E0A9B95B37EDB25A80BF2A045583389
847B65D114CAFF0FCF67585A6BCBE22DA41D479902960F7C0D013CCE81F60F3D
DF36E91F8276940F08464405DF7352069A414D615BA09E156C449C172832EA2C
E38EA97B9A576B444E00C0B19C9E751336898EFCD4847F7B5095BACD95228E1F
6EDD85621B9643624E6CE80610BFB320B3D0914BE2359C910FCEF969AFD599B7
8545A1AA4E33EF3F14EDECCFD82F9975DCD18BC1B687408F072FA39164340543
5A09C1257CF81A066CBCBA4B3FCF3BC8D6A3496230AAF1232518D07135C7823C
AC45513B2A9911B39603B415168A1FFBED834B271794C994A3F9821E4E9B9023
B08C7CE8D31B5FCFBBFBB71AE71A47B9E18E48F5BDA5D89F2EE08A2784F150B9
180ECCCC77586E39586DB7CB534D1806D9A3A0D376856B2036634A72710FC8DA
959A66289DBD2D073A400E7CA0B870EE6EBF02A0707CEABD8D44A32F85209065
B61A9E7C56EEFE751F19938EF2050F231708623163ED2DB636BA33208269330C
24A4E0B645E707523349225E6B8EB758ECEDE8173B87B4AE6A33F17030AAA7B0
A2CEB87A0360124FD1504C60DE14C8EAAAC52FF900289981316BC60E07B9A6F3
40CECD891D8706212848304E170D27F17330A29CFEA10E80FAA7A0837A0DD1EA
D10B0A7A3F70DB740709CF3330E44DD04F6367E04C3CBB3400BA3C1943B874CF
B4B611D58AD532395FD31FDC361BBAA07179A3D6215C9819796ACC66B0571229
E5D0EE470B9811A0F3B2A4D09B78866901235C66B0B7591265D226C571F25415
55DF310B9923F6206B6845D9D4835F7F36499A9C4BC39F35AC5F1F4360654A09
D9049D73DB6FFE7FB882642CB8D369C6F870BCA1E1753FF36E4D58E1E10A9648
D098A3FEDACD1A2C502230FCD961D0CCA425E6DED4A66CDAA69C13C313F273B8
54D4B38FD38C1237142EC3575FA9E198685DBE5378D15F1D89ED4C66EF889DC6
EF388E0ACA1D8D22E14B7D54197F53A548E2C44CC7D224E19BCAC499336BF395
8814CA2627286B95E044F9D8DF78F47DB5FD28D8FC749AD9F363461ED764B530
D27CFD517E567C042AA54E6862078C01B175ACEB46AC0016D7DC95C713F2C086
C7D4DED7C9B454A54702E8207134CB43E1FFA25F317C2570B4E8D2C3011D478D
FD24DEF02CA5A2EE78D4223BD2E88FB89F641B571893F5CC9525C47EFBF11C8E
04DF7712874170544DDFC5C88914B47EF064E19AA4789E4EBA9F3FA8EAD7DEBA
CDFB4A09F78F2E975BDB9B498EC67884CC71AC9A49F9DC4CBB06DE7FAA1A5344
D1FD50B0B78BA9B9BF5ACE28737E55C4D9ADFC4A7A1EC641C71CC528A99FA731
209177AA61BA8FE2FF5201A29E6EC6236FE295FDD4D023A9915528FE8AAF2643
192B5B669AA3693DBA8B5A147CBDC112E2B12D07BC74CD873EC2C410B0D98052
2CDDD68790EFD6546ED3EBCE191B0F18971B2026D895548251C50BA334951FCA
9B73EE6F30D4B1FBF7E81885AC1F5B338CA897DF0EEA1130EA544B804C86A2DA
15D8AD5F68EBC47953ECAF728B2F51D0AF927910B9FB1B0496C700913FCBEB0A
AAE121E3332324BD32439ACCB451C743AA639BE8AB245F97841E1EF6D14517A0
08ED144163E00FB0E6C779DFD6D71E07F526FBC2F8E39AFD8FB52711F30D4934
27B26896C1B2B9D0757D749430383AD330471E8B5678C4C5876A346AC09DEACB
0A3E7DC514E415A83B220E5F02EFE8F583A0051CCAC43A634644D6699958E099
BB1958625AB4617B8A83F567873B7761774F9336BCE30AC2B17C322D4E32700C
0DE491F5D76F16165C4FE2B71A32A9C8D1A170DC5485940024D826BB69043260
24066D8A3497E76344587C9329909A483B9762E4AF4EBDEF2CEADD1B37E37FBE
383A305E704BB5BF68D582E8B6402550CD28CB6675E254D0E2579DD56DA1209F
B27C31377A3D99A72309CF183B04AA8315B59E624B5D579AF69FCC6632281F2F
AF4CA7B3B7FD0BA5E09F3C22F93EDB52E81CB312D0B5EE221C2351AA3E80C16F
74F7DCF2624E70B714E0949C41D838C48AC3C9DCB30164BD44BD62652E29B162
A03446F9933A5A932A3B571361319D30999D527E2CE588145F9D71DE978B45D0
DE9C4CAFC6B4E67605BAD37B3E5B49936E0BE56E5A03148CAA575B5F4529AA1A
38D45B051FB4A286B7A80A6BF6018F6DD72A0D403F1D525079187AE92A7EEAB6
88CE8148FB8D997FB022CD9B553AB015786ADE85C41F66502491714766EFBDD5
9074011D2CCAA20F1E972769BD9C9658C8787B6C989003EE7C7BBE1793F471AD
97759F4B1B583224B8E11E5F72300B2EBEDD761F1836
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /periodcentered put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D543704957E563A90F4217E34BD98BECEE04654
AF1562FE506218E64825E46BDA06C3949389B7FBA6558C4274B9540189B59B01
AB8BD1B9D01D6E6CA49E770AE1AC14563F9CEEAC319B192B43FAB37AA919B27C
33FBFE812D0578025BFD7D4968BC665026872BB06B828E97EFBE4FA00EA1BD63
194C9829D663EBE6A838A8194F0ADBC88BFD24A5EFBC6075483CE2EF6E96421C
B3F0C4BC520858A2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (p1_08_09.dvi)
@start /Fa 206[77 48[60{}2 74.7198 /CMSY9 rf /Fb 206[61
18 14[61 32[48{}4 49.8132 /CMSY6 rf /Fc 134[32 35 7[32
14[34 97[{}4 49.8132 /CMMI6 rf /Fd 201[30 2[30 30 50[{}3
49.8132 /CMR6 rf /Fe 146[64 21 46[60 3[38 1[38 3[38 38
1[38 4[60 1[30 30 20[38 2[21 16[{}13 74.7198 /CMR9 rf
/Ff 134[38 44 3[28 2[34 39 11[40 33 33 41 34[60 1[60
21 59[{}12 74.7198 /CMMI9 rf
%DVIPSBitmapFont: Fg ecrm0900 9 38
/Fg 38 251 df<00001FE0000000FFFC000003F01E00000FC00780001F800780003F000F
C0007E001FC000FC001FC000FC001FC001F8001FC001F8000F8001F800000001F8000000
01F800000001F800000001F800000001F800000001F800000001F800000001F800000001
F8000FC0FFFFFFFFC0FFFFFFFFC0FFFFFFFFC001F8001FC001F8000FC001F8000FC001F8
000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F800
0FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000F
C001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC001F8000FC0
03FC001FE07FFFC1FFFF7FFFC1FFFF7FFFC1FFFF28357FB42B>28
D<0000C00001C0000380000F00000E00001C00003C0000780000F00000F00001E00003C0
0003C00007C0000780000F80000F00001F00001F00001E00003E00003E00003E00003C00
007C00007C00007C00007C00007C0000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F80000F800007C00007C00007C00
007C00007C00003C00003E00003E00003E00001E00001F00001F00000F00000F80000780
0007C00003C00003C00001E00000F00000F000007800003C00001C00000E00000F000003
800001C00000C0124A79B71E>40 D<C00000E000007000003C00001C00000E00000F0000
07800003C00003C00001E00000F00000F00000F800007800007C00003C00003E00003E00
001E00001F00001F00001F00000F00000F80000F80000F80000F80000F800007C00007C0
0007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0
0007C00007C0000F80000F80000F80000F80000F80000F00001F00001F00001F00001E00
003E00003E00003C00007C0000780000F80000F00000F00001E00003C00003C000078000
0F00000E00001C00003C0000700000E00000C00000124A7CB71E>I<3C007E00FF00FF00
FF80FF807F803D800180018001800180038003000300070006000E000C001C0038007000
600009177A8715>44 D<3C7EFFFFFFFF7E3C08087A8715>46 D<3C7EFFFFFFFF7E3C0000
00000000000000000000000000003C7EFFFFFFFF7E3C08207A9F15>58
D<000000E0000000000000E0000000000000E0000000000001F0000000000001F0000000
000003F8000000000003F8000000000003F8000000000007FC000000000007FC00000000
0007FC00000000000DFE00000000000CFE00000000000CFE0000000000187F0000000000
187F0000000000187F0000000000303F8000000000303F8000000000703FC00000000060
1FC000000000601FC000000000E01FE000000000C00FE000000000C00FE000000001800F
F0000000018007F0000000018007F0000000030003F8000000030003F8000000030003F8
000000060001FC000000060001FC0000000E0001FE0000000FFFFFFE0000000FFFFFFE00
00001FFFFFFF0000001800007F0000001800007F0000003000007F8000003000003F8000
003000003F8000006000001FC000006000001FC000006000001FC00000C000000FE00000
C000000FE00001C000000FF00001C0000007F00003E0000007F0001FF000000FF800FFFE
0001FFFFE0FFFE0001FFFFE0FFFE0001FFFFE033367DB53A>65 D<000003FE000C00003F
FF801C0000FFFFE01C0003FE01F83C000FF0003C7C001FC0000EFC007F800007FC00FE00
0003FC01FC000001FC03FC000000FC03F8000000FC07F00000007C0FE00000007C0FE000
00003C1FC00000003C1FC00000001C3FC00000001C3F800000001C7F800000000C7F8000
00000C7F800000000C7F000000000CFF0000000000FF0000000000FF0000000000FF0000
000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000
000000FF00000000007F00000000007F800000000C7F800000000C7F800000000C3F8000
00000C3FC00000000C1FC00000001C1FC0000000180FE0000000180FE00000003807F000
00003003F80000007003FC000000E001FC000000E000FE000001C0007F80000380001FC0
000F00000FF0001E000003FE00FC000000FFFFF00000003FFFC000000003FE00002E377C
B437>67 D<FFFFFE000000FFFFFE000000FFFFFE00000003FE0000000001FC0000000001
FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001
FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001
FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001
FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001
FC0000000001FC0000000001FC0000018001FC0000018001FC0000018001FC0000018001
FC0000038001FC0000030001FC0000030001FC0000030001FC0000030001FC0000070001
FC0000070001FC00000F0001FC00001F0001FC00003F0001FC00007F0001FC0000FE0003
FC0007FE00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE0029337DB230>76
D<FFFFFFFE0000FFFFFFFFC000FFFFFFFFF00003FC0007FC0001FC0000FE0001FC00007F
0001FC00003F8001FC00001FC001FC00001FE001FC00000FE001FC00000FE001FC00000F
F001FC00000FF001FC00000FF001FC00000FF001FC00000FF001FC00000FF001FC00000F
E001FC00000FE001FC00001FC001FC00001FC001FC00003F8001FC00007F0001FC0000FE
0001FC0007F80001FFFFFFF00001FFFFFF800001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000003FE000000
00FFFFF8000000FFFFF8000000FFFFF80000002C337DB234>80 D<001FE00300007FFC07
0001FFFF070007F01FCF000F8003FF001F0000FF003E00007F003E00003F007C00001F00
7C00001F007800000F00F800000700F800000700F800000700F800000700FC00000300FC
00000300FE00000300FE000000007F000000007FC00000003FF00000003FFF0000001FFF
F000000FFFFF000007FFFFC00003FFFFF00000FFFFF800003FFFFC000003FFFE0000003F
FF00000003FF00000000FF800000007F800000003F800000001FC00000000FC0C000000F
C0C000000FC0C0000007C0C0000007C0C0000007C0E0000007C0E0000007C0F000000F80
F000000F80F800000F00FC00001F00FE00003E00FF00007E00FFC000FC00F1FC03F800E0
FFFFE000E01FFF8000C003FE000022377CB42B>83 D<007F80000003FFF000000F80FC00
001C003E00003F003F00003F801F80003F800FC0003F800FC0003F8007E0001F0007E000
000007E000000007E000000007E000000007E0000001FFE000001FFFE00000FF87E00003
FC07E0000FF007E0001FC007E0003F8007E0007F8007E0007F0007E000FF0007E0C0FE00
07E0C0FE0007E0C0FE0007E0C0FE000FE0C0FE000FE0C0FF001FE0C07F003BE0C03F8071
F1801FC1E1FF8007FFC0FF0000FE003C0022237DA126>97 D<03F0000000FFF0000000FF
F0000000FFF000000007F000000003F000000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F000
000003F000000003F000000003F03F800003F0FFE00003F3C0F80003F7007E0003FE003F
0003FC001F8003F8000FC003F0000FC003F00007E003F00007F003F00007F003F00003F0
03F00003F803F00003F803F00003F803F00003F803F00003F803F00003F803F00003F803
F00003F803F00003F803F00003F803F00003F003F00007F003F00007E003F00007E003F0
000FC003F8000FC003FC001F8003EC003F0003CF007C00038381F8000301FFE00000007F
000025357EB32B>I<0007F800003FFF0000FC07C001F000E003E003F007C007F00FC007
F01F8007F03F8007F03F0003E07F0000007F0000007E000000FE000000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000000FE000000FE0000007F0000007F0000
003F0000183F8000181F8000381FC000300FC0007007E000E003F001C000FC0F80003FFE
000007F0001D237EA122>I<0000003F0000000FFF0000000FFF0000000FFF000000007F
000000003F000000003F000000003F000000003F000000003F000000003F000000003F00
0000003F000000003F000000003F000000003F000000003F000000003F000000003F0000
07F03F00003FFC3F0000FC0F3F0001F003BF0007E001FF000FC000FF001F80007F001F80
003F003F00003F003F00003F007F00003F007E00003F00FE00003F00FE00003F00FE0000
3F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F
007E00003F007F00003F007F00003F003F00003F001F80007F001F80007F000FC000FF00
07E001FF8003F007BFFC00F81E3FFC003FFC3FFC000FE03F0026357DB32B>I<000FE000
007FFC0000F83F0003F00F8007E00FC00FC007E01F8003E01F8003F03F0003F03F0001F0
7F0001F87E0001F87E0001F8FE0001F8FE0001F8FFFFFFF8FFFFFFF8FE000000FE000000
FE000000FE000000FE0000007E0000007F0000007F0000003F0000183F0000181F800038
0F8000300FC0007007E000E001F003C000FC0F00003FFE000007F0001D237EA122>I<00
01FC000007FF00001F0780003E0FC0007C1FC000FC1FC001F81FC001F81FC003F8070003
F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003
F0000003F0000003F00000FFFFF000FFFFF000FFFFF00003F0000003F0000003F0000003
F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003
F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003
F0000003F0000003F0000003F0000007F800007FFFE0007FFFE0007FFFE0001A357FB417
>I<0000001F00001FC07F8000FFF8E3C001F07FC7C007E03F03C00FC01F83800F800F80
001F800FC0001F0007C0003F0007E0003F0007E0003F0007E0003F0007E0003F0007E000
3F0007E0001F0007C0001F800FC0000F800F80000FC01F800007E03F000007F07C00000E
FFF800000C1FC000001C000000001C000000001C000000001E000000001E000000001F00
0000000FFFFE00000FFFFFC00007FFFFF00003FFFFFC0007FFFFFE001F0001FE003E0000
7F007C00003F007C00001F80F800000F80F800000F80F800000F80F800000F80F800000F
80FC00001F807C00001F003E00003E001F00007C000FC001F80003F007E00000FFFF8000
001FFC000022337EA126>I<03F0000000FFF0000000FFF0000000FFF000000007F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F01FC00003F07FF00003F1E0FC0003F3807C0003F7007E0003FE007E0003FC003F0003FC
003F0003F8003F0003F8003F0003F0003F0003F0003F0003F0003F0003F0003F0003F000
3F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F
0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F00
07F8007F80FFFFC7FFFCFFFFC7FFFCFFFFC7FFFC26347EB32B>I<07800FC01FE01FE01F
E01FE00FC00780000000000000000000000000000000000000000007E0FFE0FFE0FFE00F
E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007
E007E007E007E007E007E007E00FF0FFFFFFFFFFFF10337EB215>I<07E0FFE0FFE0FFE0
0FE007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E00FF0FFFFFFFFFFFF10347EB315>108
D<03F01FE000FF0000FFF07FF803FFC000FFF1E07C0F03E000FFF3803E1C01F00007F700
3F3801F80003FE003F7001F80003FC001FE000FC0003FC001FE000FC0003F8001FC000FC
0003F8001FC000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F000
1F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC
0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F000
1F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC0003F0001F8000FC
0003F0001F8000FC0003F0001F8000FC0007F8003FC001FE00FFFFC7FFFE3FFFF0FFFFC7
FFFE3FFFF0FFFFC7FFFE3FFFF03C217EA041>I<03F01FC000FFF07FF000FFF1E0FC00FF
F3807C0007F7007E0003FE007E0003FC003F0003FC003F0003F8003F0003F8003F0003F0
003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F000
3F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F
0003F0003F0003F0003F0003F0003F0003F0003F0007F8007F80FFFFC7FFFCFFFFC7FFFC
FFFFC7FFFC26217EA02B>I<0007F00000003FFE000000FC1F800001F007C00003C001E0
0007C001F0000F8000F8001F00007C001F00007C003F00007E003E00003E007E00003F00
7E00003F007E00003F00FE00003F80FE00003F80FE00003F80FE00003F80FE00003F80FE
00003F80FE00003F80FE00003F807E00003F007E00003F007E00003F003F00007E003F00
007E001F00007C001F8000FC000FC001F80007C001F00003F007E00000FC1F8000003FFE
00000007F0000021237EA126>I<03F03F8000FFF0FFE000FFF3C0F800FFF7007E0007FE
003F0003FC001F8003F8001FC003F0000FC003F0000FE003F00007F003F00007F003F000
07F003F00003F803F00003F803F00003F803F00003F803F00003F803F00003F803F00003
F803F00003F803F00003F803F00007F803F00007F003F00007F003F00007E003F0000FE0
03F0000FC003F8001FC003FC003F8003FC003F0003FF00FC0003F381F80003F1FFE00003
F07F000003F000000003F000000003F000000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000007F8000000FFFFC00000FFFFC00000FFFFC0
000025307EA02B>I<0007F00300003FFC070000FC0F070001F8038F0007E0018F000FE0
01DF001FC000FF001F80007F003F80007F003F00003F007F00003F007F00003F00FF0000
3F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F00FE00003F
00FE00003F00FE00003F007F00003F007F00003F007F00003F003F80007F001F80007F00
1FC000FF000FC001FF0007E003BF0003F0073F0000F81E3F00003FF83F00000FE03F0000
00003F000000003F000000003F000000003F000000003F000000003F000000003F000000
003F000000003F000000003F000000007F8000000FFFFC00000FFFFC00000FFFFC26307D
A029>I<03E07C00FFE1FF00FFE38F80FFE71FC007EE1FC003EC1FC003EC1FC003FC0F80
03F8000003F8000003F8000003F0000003F0000003F0000003F0000003F0000003F00000
03F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F00000
03F0000003F0000003F0000007F80000FFFFE000FFFFE000FFFFE0001A217FA01E>I<00
FF060007FFCE001F00FE003C003E0078001E0078000E00F0000E00F0000600F0000600F8
000600F8000600FE000000FF8000007FFC00003FFFC0003FFFF0000FFFF80007FFFC0000
FFFE00000FFF000000FF0000003F80C0001F80C0000F80E0000780E0000780E0000780F0
000780F0000700F8000F00FC000E00FE001C00F7807800E1FFE000C07F800019237EA11E
>I<00300000300000300000300000300000700000700000700000F00000F00001F00001
F00003F00007F0001FFFFEFFFFFEFFFFFE03F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00303F00303F00303
F00303F00303F00303F00303F00303F00701F80601F80600FC0E007E1C001FF80007E018
2F7FAD1E>I<03F0003F00FFF00FFF00FFF00FFF00FFF00FFF0007F0007F0003F0003F00
03F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003
F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0
003F0003F0003F0003F0003F0003F0003F0003F0007F0003F0007F0003F0007F0003F000
FF0001F000FF0001F801FF8000F803BFFC007E073FFC001FFE3FFC0007F83F0026227EA0
2B>I<FFFF00FFF0FFFF00FFF0FFFF00FFF00FF0003F8007F0001F0003F0000E0003F000
0C0003F8001C0001F800180001F800180000FC00300000FC00300000FE007000007E0060
00007F006000003F00C000003F00C000001F818000001F818000001FC38000000FC30000
000FC300000007E600000007E600000007FE00000003FC00000003FC00000001F8000000
01F800000001F800000000F000000000F00000000060000024217E9F29>I<FFFF01FFF8
FFFF01FFF8FFFF01FFF803FE00FF8001FC007C0000FC007800007E007000007F00E00000
3F81C000001F838000000FC300000007E600000007FE00000003FC00000001F800000000
FC00000000FE00000000FF00000001FF000000039F800000071FC00000060FE000000C07
E000001C03F000003801F800007001FC0000F000FC0001F000FE000FF000FF80FFFC03FF
FCFFFC03FFFCFFFC03FFFC26207F9F29>120 D<7FFF807FF87FFF807FF87FFF807FF807
F8001FC003F8000F8001F800070001F800060000FC000C0000FC000C0000FE001C00007E
001800007E001800003F003000003F003000003F807000001F806000001FC0E000000FC0
C000000FC0C0000007E180000007E180000007F380000003F300000003FB00000001FE00
000001FE00000000FC00000000FC00000000FC0000000078000000007800000000300000
0000300000000060000000006000000000E000000000C000000000C00000000180000078
01800000FC03000000FC03000000FC06000000FC0E000000701C00000078380000001FF0
0000000FC000000025307F9F29>I<3FFFFFF03FFFFFF03F000FF03C000FE038001FC030
003F8070007F8070007F006000FE006001FC006003FC006003F8000007F000000FE00000
0FE000001FC000003F8000007F0000007F003000FE003001FC003003FC003003F8003007
F000700FE000701FE000601FC000E03F8000E07F0003E0FF000FE0FFFFFFE0FFFFFFE01C
207E9F22>I<000038000000007C00000000FC00000001FC00000003FC00000007F80000
000FE00000001FC00000003F000000007C00000000700000000040000000000000000000
00000000007F80000003FFF000000F80FC00001C003E00003F003F00003F801F80003F80
0FC0003F800FC0003F8007E0001F0007E000000007E000000007E000000007E000000007
E0000001FFE000001FFFE00000FF87E00003FC07E0000FF007E0001FC007E0003F8007E0
007F8007E0007F0007E000FF0007E0C0FE0007E0C0FE0007E0C0FE0007E0C0FE000FE0C0
FE000FE0C0FF001FE0C07F003BE0C03F8071F1801FC1E1FF8007FFC0FF0000FE003C0022
317DAF26>225 D<000E00001F00003F80007F8000FF0000FE0001FC0003F00007C0000F
80000E000008000000000000000000000007E000FFE000FFE000FFE0000FE00007E00007
E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007
E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E0000FF000FF
FF00FFFF00FFFF0011307EAF15>237 D<00001C000000003E000000007E00000000FE00
000001FE00000003FC00000007F00000000FE00000001F800000003E0000000038000000
0020000000000000000000000000000007F00000003FFE000000FC1F800001F007C00003
C001E00007C001F0000F8000F8001F00007C001F00007C003F00007E003E00003E007E00
003F007E00003F007E00003F00FE00003F80FE00003F80FE00003F80FE00003F80FE0000
3F80FE00003F80FE00003F80FE00003F807E00003F007E00003F007E00003F003F00007E
003F00007E001F00007C001F8000FC000FC001F80007C001F00003F007E00000FC1F8000
003FFE00000007F0000021317EAF26>243 D<000003C000000007E00000000FE0000000
1FE00000003FE00000007FC0000000FF00000001FC00000003F000000007C00000000700
0000000400000000000000000000000000000000000003F0003F00FFF00FFF00FFF00FFF
00FFF00FFF0007F0007F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F00
03F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003
F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0003F0
007F0003F0007F0003F0007F0003F000FF0001F000FF0001F801FF8000F803BFFC007E07
3FFC001FFE3FFC0007F83F0026317EAF2B>250 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecbx0900 9 3
/Fh 3 51 df<0F003FC07FE0FFF0FFF0FFF0FFF0FFF0FFF07FE03FC00F000C0C7A8B19>
46 D<000078000000F8000003F800001FF80003FFF800FFFFF800FFFFF800FFFFF800FC
1FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80000
1FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80000
1FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80000
1FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80000
1FF8007FFFFFFE7FFFFFFE7FFFFFFE7FFFFFFE1F317AB02C>49 D<001FFC000000FFFF80
0003FFFFE0000FFFFFF8001FE03FFC003F800FFF007F0007FF007F8003FF80FFC003FFC0
FFE001FFC0FFE001FFE0FFE000FFE0FFE000FFE0FFE000FFE07FC000FFE03F8000FFE01F
0000FFE0000000FFE0000000FFC0000001FFC0000001FF80000003FF80000003FF000000
07FE0000000FFC0000000FF80000001FF00000003FC00000007F80000000FE00000001FC
00000003F800000007E001E0000FC001E0001F8001E0003E0003E0007C0003C000F80003
C001F00007C003FFFFFFC007FFFFFFC00FFFFFFFC01FFFFFFFC03FFFFFFFC07FFFFFFFC0
FFFFFFFF80FFFFFFFF80FFFFFFFF80FFFFFFFF8023317CB02C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi eccc1200 12 5
/Fi 5 117 df<FFFFFFFFFE000000FFFFFFFFFFE00000FFFFFFFFFFF8000001FFC00007
FE0000007F800000FF8000007F8000003FC000007F8000000FE000007F80000007F00000
7F80000007F800007F80000003FC00007F80000001FE00007F80000001FE00007F800000
01FF00007F80000000FF00007F80000000FF00007F80000000FF80007F80000000FF8000
7F80000000FF80007F80000000FF80007F80000000FF80007F80000000FF80007F800000
00FF80007F80000000FF00007F80000000FF00007F80000001FF00007F80000001FE0000
7F80000001FE00007F80000003FC00007F80000007F800007F80000007F000007F800000
1FE000007F8000003FC000007F800000FF0000007F800007FE0000007FFFFFFFF0000000
7FFFFFFF800000007F800000000000007F800000000000007F800000000000007F800000
000000007F800000000000007F800000000000007F800000000000007F80000000000000
7F800000000000007F800000000000007F800000000000007F800000000000007F800000
000000007F800000000000007F800000000000007F800000000000007F80000000000000
7F800000000000007F800000000000007F800000000000007F800000000000007F800000
000000007F800000000000007F800000000000007F800000000000007F80000000000000
7F800000000000007F80000000000001FFE00000000000FFFFFFC000000000FFFFFFC000
000000FFFFFFC00000000039447AC347>80 D<0000003000000000000078000000000000
7800000000000078000000000000FC000000000000FC000000000001FE000000000001FE
000000000001FE0000000000037F0000000000037F0000000000077F8000000000063F80
00000000063F80000000000C3FC0000000000C1FC0000000001C1FE000000000180FE000
000000180FE000000000300FF0000000003007F0000000007007F8000000006003F80000
00006003F800000000C003FC00000000C001FC00000000C001FC000000018000FE000000
018000FE000000030000FF0000000300007F0000000300007F0000000600003F80000006
00003F8000000FFFFFFFC000000FFFFFFFC000000FFFFFFFC000001800000FE000001800
000FE000003800000FF0000030000007F0000030000007F0000060000007F80000600000
03F80000E0000003FC0000C0000001FC0001C0000001FC0001C0000001FE0003C0000000
FE0007E0000001FF001FF0000003FF80FFFC00001FFFFCFFFC00001FFFFCFFFC00001FFF
FC36367CB53E>97 D<FFFFF8FFFFF8FFFFF803FE0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0003FE00FFFFF8FFFFF8FFFFF815347BB31E>105
D<000FF00180007FFE038001FFFF838007F007E7800FC000FF801F00007F803E00003F80
3E00001F807C00000F807C00000780F800000780F800000380F800000380F800000380F8
00000180FC00000180FC00000180FE000000007F000000007F800000007FE00000003FFE
0000001FFFF000001FFFFF00000FFFFFE00003FFFFF80001FFFFFC00007FFFFE000007FF
FF0000007FFF80000007FFC00000007FC00000003FE00000000FE000000007F000000007
F000000003F0C0000003F0C0000001F0C0000001F0C0000001F0E0000001F0E0000001F0
E0000001E0F0000003E0F8000003C0F8000007C0FE00000F80FF00001F00FFC0003E00F3
FC00FC00E0FFFFF800E01FFFE000C003FF000024367BB42E>115
D<7FFFFFFFFFFFE07FFFFFFFFFFFE07FFFFFFFFFFFE07F8003FE001FE07C0001FC0003E0
780001FC0001E0700001FC0000E0700001FC0000E0600001FC000060E00001FC000070E0
0001FC000070E00001FC000070C00001FC000030C00001FC000030C00001FC000030C000
01FC000030C00001FC000030C00001FC000030000001FC000000000001FC000000000001
FC000000000001FC000000000001FC000000000001FC000000000001FC000000000001FC
000000000001FC000000000001FC000000000001FC000000000001FC000000000001FC00
0000000001FC000000000001FC000000000001FC000000000001FC000000000001FC0000
00000001FC000000000001FC000000000001FC000000000001FC000000000001FC000000
000001FC000000000001FC000000000001FC000000000001FC000000000001FC00000000
0001FC000000000003FE000000000007FF0000000007FFFFFF00000007FFFFFF00000007
FFFFFF000034347CB33C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj ecbx1095 10.95 15
/Fj 15 238 df<07801FE03FF07FF8FFFCFFFCFFFCFFFCFFFCFFFC7FF83FF01FE0078000
000000000000000000000000000000000000000000000007801FE03FF07FF8FFFCFFFCFF
FCFFFCFFFCFFFC7FF83FF01FE007800E2879A71D>58 D<FFFFFFFFFFFFF8FFFFFFFFFFFF
F8FFFFFFFFFFFFF8FFFFFFFFFFFFF8007FFC0000FFFC007FFC00001FFC007FFC000007FC
007FFC000001FC007FFC000000FC007FFC000000FC007FFC0000007C007FFC0000007E00
7FFC0000003E007FFC0000003E007FFC0000001E007FFC0000001E007FFC0000001E007F
FC0000001E007FFC001E001F007FFC001E000F007FFC001E000F007FFC001E000F007FFC
001E0000007FFC001E0000007FFC003E0000007FFC003E0000007FFC007E0000007FFC00
FE0000007FFC03FE0000007FFFFFFE0000007FFFFFFE0000007FFFFFFE0000007FFFFFFE
0000007FFC03FE0000007FFC00FE0000007FFC007E0000007FFC003E0000007FFC003E00
00007FFC001E0000007FFC001E0000007FFC001E0000007FFC001E0000007FFC001E0000
007FFC001E0000007FFC00000000007FFC00000000007FFC00000000007FFC0000000000
7FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007F
FC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000FFFFFF
FFC00000FFFFFFFFC00000FFFFFFFFC00000FFFFFFFFC00000383E7CBD41>70
D<0007FF800000003FFFF0000001FFFFFC000003FC03FF000007E000FFC0000FF8007FE0
001FF8003FF0001FFC003FF0001FFC001FF8001FFC001FF8001FFC000FFC001FFC000FFC
000FF8000FFC0007F0000FFC0001C0000FFC000000000FFC000000000FFC000000000FFC
00000003FFFC000001FFFFFC00000FFFFFFC00007FFF8FFC0001FFF00FFC0007FF800FFC
000FFF000FFC001FFC000FFC003FF8000FFC007FF8000FFC007FF0000FFC00FFF0000FFC
00FFE0000FFC00FFE0000FFC00FFE0000FFC00FFE0001FFC00FFE0001FFC00FFF0003FFC
007FF0003FFC007FF8007FFF003FFC01F7FFFC1FFE07E3FFFC07FFFF81FFFC01FFFE007F
FC001FF80000002E2B7DA932>97 D<00007FF0000003FFFF00001FFFFFC0007FE01FE000
FF8003F001FF000FF803FE000FFC07FE001FFC0FFC001FFC1FFC001FFC1FF8001FFC3FF8
001FFC3FF8000FF87FF80007F07FF00001C07FF0000000FFF0000000FFF0000000FFF000
0000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF00000
00FFF00000007FF00000007FF00000007FF80000007FF80000003FF800001E3FFC00001E
1FFC00003E0FFC00003C0FFE00007C07FF0000F803FF8001F000FFC003E0007FF00FC000
1FFFFF000007FFFC0000007FE000272B7DA92E>99 D<0000000007F80000000007FFF800
00000007FFF80000000007FFF80000000007FFF800000000003FF800000000001FF80000
0000001FF800000000001FF800000000001FF800000000001FF800000000001FF8000000
00001FF800000000001FF800000000001FF800000000001FF800000000001FF800000000
001FF800000000001FF800000000001FF800000000001FF800000000001FF80000007FE0
1FF8000003FFFC1FF800001FFFFF1FF800007FF00FDFF80000FFC003FFF80003FF0000FF
F80007FE00007FF8000FFE00003FF8000FFC00001FF8001FFC00001FF8003FF800001FF8
003FF800001FF8007FF800001FF8007FF000001FF8007FF000001FF8007FF000001FF800
FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FF
F000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF8007FF0
00001FF8007FF000001FF8007FF000001FF8007FF800001FF8003FF800001FF8003FF800
001FF8001FF800001FF8001FFC00003FF8000FFC00007FF80007FE0000FFF80003FF0001
FFFC0001FF8007FFFFE0007FE01F9FFFE0001FFFFE1FFFE00007FFF81FFFE000007FC01F
E00033407DBE3A>I<0000FFE0000007FFFC00003FFFFF00007FE0FF8001FF803FC003FF
001FE007FE000FF00FFC000FF80FFC0007FC1FF80007FC3FF80003FE3FF80003FE3FF800
03FE7FF00003FE7FF00003FF7FF00003FFFFF00001FFFFF00001FFFFF00001FFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFF0000000FFF0000000FFF0000000FFF0000000FFF0000000
7FF00000007FF00000007FF00000003FF80000003FF800000F1FF800000F1FFC00001F0F
FC00001E07FE00003E03FE00007C01FF0000F800FFC003F0007FF01FE0001FFFFFC00007
FFFE0000007FF000282B7DA92F>I<0003FF8003F0003FFFF81FFC00FFFFFE7FFE03FF01
FFFCFE07FC007FE1FE0FFC007FE0FE1FF8003FF0FE3FF8003FF87C3FF0001FF8003FF000
1FF8007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF000
1FFC007FF0001FFC003FF0001FF8003FF0001FF8003FF8003FF8001FF8003FF0000FFC00
7FE00007FC007FC00007FF01FF800007FFFFFE00000F3FFFF800000F03FF8000001E0000
0000001E00000000001F00000000001F00000000001F00000000001F80000000001FC000
0000001FFFFFFF00000FFFFFFFF0000FFFFFFFFC0007FFFFFFFF0007FFFFFFFF8003FFFF
FFFFC003FFFFFFFFE00FFFFFFFFFE01FC00001FFF03F8000001FF07F0000000FF87F0000
0007F8FE00000007F8FE00000003F8FE00000003F8FE00000003F8FE00000003F8FF0000
0007F87F00000007F07F8000000FF03FC000001FE01FE000003FC00FF80000FF8003FF80
0FFE0000FFFFFFF800001FFFFFC0000001FFFC00002F3D7DA834>103
D<00FF0000000000FFFF0000000000FFFF0000000000FFFF0000000000FFFF0000000000
07FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF00
0000000003FF000000000003FF003FF0000003FF00FFFE000003FF03FFFF800003FF0FC0
FFC00003FF1E007FE00003FF3C003FF00003FF78003FF00003FFF0003FF00003FFE0001F
F80003FFC0001FF80003FFC0001FF80003FF80001FF80003FF80001FF80003FF80001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF800FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07
FFFFE0FFFFFC07FFFFE0333F7CBE3A>I<01F80003FC0007FE000FFF001FFF801FFF801F
FF801FFF801FFF801FFF800FFF0007FE0003FC0001F80000000000000000000000000000
000000000000000000000000000000FF00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFFF8FFFFF8FFFFF815407CBF1D>I<
00FF00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFFC
FFFFFCFFFFFCFFFFFC163F7CBE1D>108 D<01FE003FF00001FF8000FFFE00FFFE0007FF
F000FFFE03FFFF801FFFFC00FFFE0FC0FFC07E07FE00FFFE1E007FE0F003FF0007FE3C00
3FF1E001FF8003FE78003FF3C001FF8003FEF0003FF78001FF8003FFE0001FFF0000FFC0
03FFC0001FFE0000FFC003FFC0001FFE0000FFC003FF80001FFC0000FFC003FF80001FFC
0000FFC003FF80001FFC0000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF
00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000
FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF0000
1FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC0
03FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF8
0000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF
00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC0FFFFFC07FFFFE03F
FFFFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFF50297CA8
57>I<01FE003FF00000FFFE00FFFE0000FFFE03FFFF8000FFFE0FC0FFC000FFFE1E007F
E00007FE3C003FF00003FE78003FF00003FEF0003FF00003FFE0001FF80003FFC0001FF8
0003FFC0001FF80003FF80001FF80003FF80001FF80003FF80001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF0000
1FF80003FF00001FF800FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FF
FFE033297CA83A>I<01FE01FC00FFFE07FF80FFFE0FFFE0FFFE3F1FF0FFFE3C1FF007FE
783FF803FEF03FF803FEE03FF803FFE03FF803FFC03FF803FFC01FF003FF800FE003FF80
038003FF80000003FF80000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FFFFFF0000FFFFFF00002529
7DA82B>114 D<0007800000078000000780000007800000078000000F8000000F800000
0F8000000F8000001F8000001F8000001F8000003F8000007F8000007F800000FF800001
FF800007FF80001FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC01FF800001FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF801E01
FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E00FF803C00
FFC03C00FFC03C007FE078003FF0F0001FFFE00007FFC00000FF001F3B7EB928>116
D<0000600001F80003FC0007FC000FFE001FFE003FFE007FFE00FFFC01FFFC03FFF007FF
800FFE0007F00007800002000000000000000000000000FF00FFFF00FFFF00FFFF00FFFF
0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFFF8FFFFF8FFFF
F8173C7CBB1D>237 D E
%EndDVIPSBitmapFont
/Fk 204[35 35 50[{}2 66.4176 /CMR8 rf /Fl 135[52 19[47
39 39 48 37[25 59[{}6 90.9091 /CMMI10 rf
%DVIPSBitmapFont: Fm ecbx1200 12 19
/Fm 19 251 df<07C01FF03FF87FFCFFFEFFFEFFFEFFFEFFFEFFFEFFFE7FFC3FF81FF007
C00F0F788E1F>46 D<000003C000000007C00000001FC00000007FC0000003FFC000003F
FFC000FFFFFFC000FFFFFFC000FFFFFFC000FFFFFFC000FFC3FFC0000003FFC0000003FF
C0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0
000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC000
0003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC00000
03FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003
FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FF
C0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0000003FFC0
000003FFC0000003FFC0000003FFC0000003FFC000FFFFFFFFFCFFFFFFFFFCFFFFFFFFFC
FFFFFFFFFCFFFFFFFFFC264177C038>49 D<0000FFE00000000FFFFE0000003FFFFF8000
00FFFFFFE00003FFFFFFF80007FC03FFFE000FE0007FFF001F80003FFF803F00000FFFC0
7F000007FFC07FC00007FFE07FF00003FFE0FFF00001FFF0FFF80001FFF0FFF80001FFF8
FFF80000FFF8FFF80000FFF8FFF80000FFF8FFF80000FFF87FF00000FFF83FE00000FFF8
1FC00000FFF800000000FFF800000000FFF000000001FFF000000001FFF000000001FFE0
00000003FFE000000003FFC000000007FF800000000FFF000000000FFF000000001FFC00
0000003FF8000000003FF0000000007FE000000000FFC000000001FF0000000003FE0000
000007FC000000000FF0000000001FE0000000003F80000000007F0000780000FE000078
0001FC0000780003F80000F80007E00000F0000FC00000F0001F800000F0003F000000F0
007C000001F000F8000003F001FFFFFFFFF003FFFFFFFFE007FFFFFFFFE00FFFFFFFFFE0
1FFFFFFFFFE03FFFFFFFFFE07FFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFC0FFFFFFFFFFC0
FFFFFFFFFFC0FFFFFFFFFFC02D417BC038>I<00000000FFF00000700000001FFFFF0000
F0000001FFFFFFE001F0000007FFFFFFF803F000003FFFFFFFFE07F00000FFFFE001FF0F
F00001FFFE00003F9FF00007FFF000000FFFF0000FFFC0000007FFF0001FFF00000003FF
F0003FFE00000001FFF0007FFC00000000FFF000FFF8000000007FF001FFF0000000003F
F003FFE0000000001FF007FFE0000000001FF007FFC0000000000FF00FFF80000000000F
F00FFF800000000007F01FFF000000000007F01FFF000000000003F03FFF000000000003
F03FFE000000000003F03FFE000000000003F07FFE000000000001F07FFE000000000001
F07FFE000000000001F07FFC00000000000000FFFC00000000000000FFFC000000000000
00FFFC00000000000000FFFC00000000000000FFFC00000000000000FFFC000000000000
00FFFC00000000000000FFFC00000000000000FFFC00000000000000FFFC000000000000
00FFFC00000000000000FFFC00000000000000FFFC00000000000000FFFC000000000000
007FFC000000000000007FFE000000000000007FFE000000000000F07FFE000000000000
F03FFE000000000000F03FFE000000000000F03FFF000000000000F01FFF000000000001
F01FFF000000000001E00FFF800000000001E00FFF800000000003E007FFC00000000003
C007FFE00000000007C003FFE00000000007C001FFF0000000000F8000FFF8000000001F
00007FFC000000003F00003FFE000000007E00001FFF80000000FC00000FFFC0000001F8
000007FFF0000007F0000001FFFE00001FE0000000FFFFF001FF800000003FFFFFFFFF00
00000007FFFFFFFC0000000001FFFFFFF000000000001FFFFF80000000000000FFF80000
0044467AC451>67 D<FFFFFF00000001FFFFFEFFFFFF80000001FFFFFEFFFFFFC0000001
FFFFFEFFFFFFC0000001FFFFFEFFFFFFE0000001FFFFFE003FFFF0000000007800003FFF
F8000000007800003DFFFC000000007800003DFFFE000000007800003CFFFE0000000078
00003C7FFF000000007800003C3FFF800000007800003C1FFFC00000007800003C0FFFE0
0000007800003C07FFF00000007800003C07FFF80000007800003C03FFF8000000780000
3C01FFFC0000007800003C00FFFE0000007800003C007FFF0000007800003C003FFF8000
007800003C003FFFC000007800003C001FFFC000007800003C000FFFE000007800003C00
07FFF000007800003C0003FFF800007800003C0001FFFC00007800003C0000FFFE000078
00003C0000FFFF00007800003C00007FFF00007800003C00003FFF80007800003C00001F
FFC0007800003C00000FFFE0007800003C000007FFF0007800003C000007FFF800780000
3C000003FFF8007800003C000001FFFC007800003C000000FFFE007800003C0000007FFF
007800003C0000003FFF807800003C0000001FFFC07800003C0000001FFFE07800003C00
00000FFFE07800003C00000007FFF07800003C00000003FFF87800003C00000001FFFC78
00003C00000000FFFE7800003C00000000FFFF7800003C000000007FFF7800003C000000
003FFFF800003C000000001FFFF800003C000000000FFFF800003C0000000007FFF80000
3C0000000003FFF800003C0000000003FFF800003C0000000001FFF800003C0000000000
FFF800003C00000000007FF800003C00000000003FF800003C00000000001FF800003C00
000000001FF800003C00000000000FF800003C000000000007F800FFFFFF0000000003F8
00FFFFFF0000000001F800FFFFFF0000000000F800FFFFFF00000000007800FFFFFF0000
00000078004F447CC358>78 D<0001FFE0000000001FFFFE000000007FFFFF80000001FF
FFFFE0000003FE007FF8000007FC001FFC000007FE000FFE00000FFF0007FF00000FFF00
07FF00000FFF0003FF80000FFF0003FF80000FFF0003FF80000FFF0001FFC00007FE0001
FFC00003FC0001FFC00000F00001FFC00000000001FFC00000000001FFC00000000001FF
C00000000001FFC000000003FFFFC0000000FFFFFFC0000007FFFFFFC000003FFFF1FFC0
0000FFFC01FFC00003FFE001FFC00007FF8001FFC0001FFE0001FFC0003FFC0001FFC000
3FF80001FFC0007FF80001FFC0007FF00001FFC000FFF00001FFC000FFE00001FFC000FF
E00001FFC000FFE00001FFC000FFE00003FFC000FFE00003FFC000FFF00007FFC0007FF8
000FFFC0007FF8001FFFF0003FFE003EFFFFC01FFF80FC7FFFC007FFFFF87FFFC003FFFF
E01FFFC0007FFF8007FFC0000FFC00000000322F7DAD36>97 D<00003FFC00000001FFFF
C000000FFFFFF000003FFFFFFC00007FF003FE0000FFC001FF0003FF8003FF0007FF0007
FF8007FE0007FF800FFE0007FF801FFC0007FF801FFC0007FF803FF80007FF803FF80003
FF007FF80001FE007FF8000078007FF0000000007FF000000000FFF000000000FFF00000
0000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF00000
0000FFF000000000FFF000000000FFF000000000FFF0000000007FF8000000007FF80000
00007FF8000000003FF8000000003FFC000003C03FFC000003C01FFE000007C00FFE0000
07800FFF00000F8007FF80001F0003FFC0003E0001FFF0007C00007FFC03F800003FFFFF
F000000FFFFFC0000003FFFF000000003FF800002A2F7CAD32>99
D<0000000003FE0000000007FFFE0000000007FFFE0000000007FFFE0000000007FFFE00
00000007FFFE00000000001FFE00000000000FFE00000000000FFE00000000000FFE0000
0000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE000000
00000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000
000FFE00000000000FFE00000000000FFE00000000000FFE0000003FE00FFE000003FFFC
0FFE00000FFFFF8FFE00003FFFFFCFFE0000FFF807FFFE0001FFC001FFFE0003FF80007F
FE0007FF00003FFE000FFE00001FFE000FFC00000FFE001FFC00000FFE003FF800000FFE
003FF800000FFE003FF800000FFE007FF800000FFE007FF000000FFE007FF000000FFE00
FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FF
F000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF000000FFE00FFF0
00000FFE00FFF000000FFE007FF000000FFE007FF000000FFE007FF000000FFE007FF800
000FFE003FF800000FFE003FF800000FFE001FFC00001FFE001FFC00001FFE000FFE0000
3FFE0007FE00007FFE0003FF0000FFFF0001FFC003FFFFFC00FFF01FEFFFFC007FFFFF8F
FFFC001FFFFE0FFFFC0007FFF80FFFFC00007FC00FF80036467CC43E>I<00003FF80000
0003FFFF8000000FFFFFE000003FFFFFF000007FF83FF80000FFC007FC0001FF8003FE00
03FF0001FF0007FE0000FF800FFC0000FF801FFC00007FC01FF800007FC03FF800003FE0
3FF800003FE07FF800003FE07FF000003FE07FF000003FF07FF000001FF0FFF000001FF0
FFF000001FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFF000000000
FFF000000000FFF000000000FFF000000000FFF0000000007FF0000000007FF000000000
7FF8000000007FF8000000003FF8000000003FF8000000F01FFC000000F01FFC000001F0
0FFE000001E007FF000003E003FF800007C001FFC0000F8000FFF0003F00007FFE01FE00
001FFFFFFC000007FFFFF0000001FFFFC00000001FFE00002C2F7DAD33>I<007C0001FF
0003FF8007FFC007FFC00FFFE00FFFE00FFFE00FFFE00FFFE007FFC007FFC003FF8001FF
00007C00000000000000000000000000000000000000000000000000000000000000007F
C07FFFC07FFFC07FFFC07FFFC07FFFC003FFC001FFC001FFC001FFC001FFC001FFC001FF
C001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FF
C001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FFC001FF
C001FFC001FFC001FFC0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF18467CC520>105
D<007FC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC00003FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC00001FFC0
0001FFC000FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF8019457CC420>108
D<007F8007FE00000FFC0000FFFF803FFFC0007FFF8000FFFF80FFFFF001FFFFE000FFFF
81FFFFF803FFFFF000FFFF87F01FFC0FE03FF800FFFF8FC00FFE1F801FFC0003FF9F000F
FF3E001FFE0001FF9E0007FF3C000FFE0001FFBC0007FF78000FFE0001FFF80003FFF000
07FF0001FFF80003FFF00007FF0001FFF00003FFE00007FF0001FFE00003FFC00007FF00
01FFE00003FFC00007FF0001FFE00003FFC00007FF0001FFC00003FF800007FF0001FFC0
0003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF
800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007
FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001
FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC000
03FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF80
0007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF
0001FFC00003FF800007FF0001FFC00003FF800007FF0001FFC00003FF800007FF0001FF
C00003FF800007FF00FFFFFF81FFFFFF03FFFFFEFFFFFF81FFFFFF03FFFFFEFFFFFF81FF
FFFF03FFFFFEFFFFFF81FFFFFF03FFFFFEFFFFFF81FFFFFF03FFFFFE572D7CAC5E>I<00
7F8007FE0000FFFF803FFF8000FFFF80FFFFE000FFFF81FFFFF800FFFF87F03FFC00FFFF
8F801FFC0003FF9F000FFE0001FF9E000FFE0001FFBC000FFE0001FFF80007FF0001FFF0
0007FF0001FFF00007FF0001FFE00007FF0001FFE00007FF0001FFE00007FF0001FFC000
07FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007
FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF
0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00
01FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00FFFFFF83FFFFFEFFFF
FF83FFFFFEFFFFFF83FFFFFEFFFFFF83FFFFFEFFFFFF83FFFFFE372D7CAC3E>I<00001F
FC0000000001FFFFC000000007FFFFF00000001FFFFFFC0000007FF80FFF000000FFC001
FF800001FF8000FFC00003FE00003FE00007FE00003FF0000FFC00001FF8000FF800000F
F8001FF800000FFC001FF800000FFC003FF800000FFE003FF0000007FE007FF0000007FF
007FF0000007FF007FF0000007FF007FF0000007FF00FFF0000007FF80FFF0000007FF80
FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FFF0000007FF80FF
F0000007FF80FFF0000007FF80FFF0000007FF807FF0000007FF007FF0000007FF007FF0
000007FF007FF0000007FF003FF800000FFE003FF800000FFE001FF800000FFC001FFC00
001FFC000FFC00001FF80007FE00003FF00007FE00003FF00003FF8000FFE00001FFC001
FFC000007FF80FFF0000003FFFFFFE0000000FFFFFF800000001FFFFC0000000001FFC00
0000312F7DAD38>I<007F807F00FFFF81FFE0FFFF83FFF0FFFF8FFFF8FFFF8F8FFCFFFF
9F1FFE03FFBE1FFE01FFBC1FFE01FFF81FFE01FFF81FFE01FFF01FFE01FFF00FFC01FFE0
07F801FFE001E001FFE0000001FFE0000001FFE0000001FFC0000001FFC0000001FFC000
0001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC00000
01FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001
FFC0000001FFC0000001FFC0000001FFC0000001FFC0000001FFC00000FFFFFFE000FFFF
FFE000FFFFFFE000FFFFFFE000FFFFFFE000272D7DAC2E>114 D<001FFC038000FFFF87
8003FFFFFF800FFFFFFF801FF003FF803FC000FF803F80003F807F00001F807E00001F80
FE00000F80FE00000F80FE00000780FF00000780FF00000780FF80000780FFE0000000FF
FE0000007FFFF000007FFFFF00003FFFFFC0003FFFFFF0001FFFFFFC000FFFFFFE0003FF
FFFF0001FFFFFF80007FFFFF80000FFFFFC000003FFFC0000003FFE0000000FFE0F00000
3FE0F000003FE0F800001FE0F800000FE0F800000FE0FC00000FE0FC00000FE0FE00000F
C0FF00001FC0FF00001FC0FF80003F80FFE0007F00FFF803FE00FFFFFFFC00FCFFFFF800
F03FFFE000E007FE0000232F7CAD2C>I<007FC00001FF00FFFFC003FFFF00FFFFC003FF
FF00FFFFC003FFFF00FFFFC003FFFF00FFFFC003FFFF0003FFC0000FFF0001FFC00007FF
0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00
01FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FF
C00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC0
0007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC000
0FFF0001FFC0000FFF0001FFC0001FFF0001FFC0001FFF0001FFC0003FFF0000FFC0003F
FF0000FFE0007FFF80007FE001F7FFFE007FF807E7FFFE003FFFFFC7FFFE000FFFFF07FF
FE0003FFFE07FFFE00007FF007FC00372E7CAC3E>117 D<0000001F0000000000003F80
00000000007FC00000000000FFC00000000001FFE00000000003FFE00000000007FFE000
0000000FFFE0000000001FFFE0000000003FFFC0000000007FFF8000000000FFFC000000
0001FFF00000000003FF800000000001FC000000000001E0000000000000800000000000
00000000000000000000000000000000000000000001FFE0000000001FFFFE000000007F
FFFF80000001FFFFFFE0000003FE007FF8000007FC001FFC000007FE000FFE00000FFF00
07FF00000FFF0007FF00000FFF0003FF80000FFF0003FF80000FFF0003FF80000FFF0001
FFC00007FE0001FFC00003FC0001FFC00000F00001FFC00000000001FFC00000000001FF
C00000000001FFC00000000001FFC000000003FFFFC0000000FFFFFFC0000007FFFFFFC0
00003FFFF1FFC00000FFFC01FFC00003FFE001FFC00007FF8001FFC0001FFE0001FFC000
3FFC0001FFC0003FF80001FFC0007FF80001FFC0007FF00001FFC000FFF00001FFC000FF
E00001FFC000FFE00001FFC000FFE00001FFC000FFE00003FFC000FFE00003FFC000FFF0
0007FFC0007FF8000FFFC0007FF8001FFFF0003FFE003EFFFFC01FFF80FC7FFFC007FFFF
F87FFFC003FFFFE01FFFC0007FFF8007FFC0000FFC0000000032437DC136>225
D<00000003E0000000000007F000000000000FF800000000001FF800000000003FFC0000
0000007FFC0000000000FFFC0000000001FFFC0000000003FFFC0000000007FFF8000000
000FFFF0000000001FFF80000000003FFE00000000007FF000000000003F800000000000
3C0000000000001000000000000000000000000000000000000000000000000000000000
00000000007FC00001FF00FFFFC003FFFF00FFFFC003FFFF00FFFFC003FFFF00FFFFC003
FFFF00FFFFC003FFFF0003FFC0000FFF0001FFC00007FF0001FFC00007FF0001FFC00007
FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF
0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF00
01FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001
FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FFC00007FF0001FF
C00007FF0001FFC00007FF0001FFC00007FF0001FFC0000FFF0001FFC0000FFF0001FFC0
001FFF0001FFC0001FFF0001FFC0003FFF0000FFC0003FFF0000FFE0007FFF80007FE001
F7FFFE007FF807E7FFFE003FFFFFC7FFFE000FFFFF07FFFE0003FFFE07FFFE00007FF007
FC0037437CC13E>250 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn ectt1095 10.95 22
/Fn 22 120 df<1F003F807FC0FFE0FFE0FFE0FFE0FFE07FC03F801F000B0B6E8A2F>46
D<00000000E000000001F000000003F000000003F000000007F000000007E00000000FE0
0000000FC00000001FC00000001F800000003F800000003F000000007F000000007E0000
0000FE00000000FC00000000FC00000001FC00000001F800000003F800000003F0000000
07F000000007E00000000FE00000000FC00000001FC00000001F800000003F800000003F
000000003F000000007F000000007E00000000FE00000000FC00000001FC00000001F800
000003F800000003F000000007F000000007E00000000FE00000000FC00000000FC00000
001FC00000001F800000003F800000003F000000007F000000007E00000000FE00000000
FC00000001FC00000001F800000003F800000003F000000003F000000007F000000007E0
0000000FE00000000FC00000001FC00000001F800000003F800000003F000000007F0000
00007E00000000FE00000000FC00000000FC00000000F800000000780000000024477BBE
2F>I<1F003F807FC0FFE0FFE0FFE0FFE0FFE07FC03F801F000000000000000000000000
00000000000000000000000000000000000000000000001F003F807FC0FFE0FFE0FFE0FF
E0FFE07FC03F801F000B276EA62F>58 D<00007F80380003FFE07C000FFFF8FC001FFFFC
FC003FFFFFFC007FFFFFFC00FFC0FFFC01FF003FFC03FE000FFC07F8000FFC07F00007FC
0FE00003FC0FE00003FC1FC00001FC1F800001FC3F800001FC3F000000FC3F000000FC7F
000000FC7E000000FC7E000000787E00000000FE00000000FC00000000FC00000000FC00
000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0000
0000FC00000000FC00000000FE000000007E000000007E000000007E000000787F000000
FC3F000000FC3F000000FC3F800000FC1F800000FC1FC00001FC0FE00001F80FF00003F8
07F00003F807F80007F003FE000FF001FF001FE000FFC07FC0007FFFFF80003FFFFF0000
1FFFFE00000FFFFC000003FFF00000007F8000263A7CB82F>67 D<7FFFFFFFE07FFFFFFF
E0FFFFFFFFF0FFFFFFFFF0FFFFFFFFF07FFFFFFFE07FFFFFFFE024077B7D2F>95
D<007FF000000003FFFE00000007FFFF8000000FFFFFC000001FFFFFE000003FFFFFF000
003FC01FF800003FC003FC00003FC001FC00003FC000FE00001F80007E00000F00007F00
000000003F00000000003F00000000003F00000000003F000000007FFF00000007FFFF00
00003FFFFF000001FFFFFF000007FFFFFF00000FFFF83F00001FFE003F00003FF0003F00
007FC0003F00007F00003F0000FE00003F0000FC00003F0000FC00003F0000FC00003F00
00FC00003F0000FC00007F0000FE00007F00007F0000FF00007F8003FF80003FE01FFFFF
003FFFFFFFFF801FFFFFFFFF800FFFFFDFFF8007FFFF0FFF8001FFFC01FF00007FE00000
00292A7BA82F>97 D<7FF000000000FFF800000000FFF800000000FFF800000000FFF800
0000007FF80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F80F
F0000001F83FFC000001F8FFFF000001FBFFFFC00001FFFFFFE00001FFFFFFF00001FFF0
3FF00001FFC00FF80001FF8003FC0001FF0001FC0001FE0000FE0001FC0000FE0001FC00
007F0001F800003F0001F800003F0001F800003F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
003F8001F800003F8001FC00003F0001FC00007F0001FC00007F0001FE0000FE0001FE00
00FE0001FF0001FC0001FF8007FC0001FFC00FF80001FFF03FF00001FFFFFFE00001FFFF
FFC00001FBFFFF800001F9FFFF000000F07FFC000000001FE0000029397EB72F>I<0003
FFC000000FFFF800003FFFFC0000FFFFFE0001FFFFFF0003FFFFFF8007FF007F800FF800
7F800FF0007F801FE0007F801FC0003F003F80001E003F000000007F000000007E000000
007E00000000FE00000000FC00000000FC00000000FC00000000FC00000000FC00000000
FC00000000FC00000000FC00000000FE000000007E000000007E000000007F000000007F
000007803F80000FC03FC0000FC01FE0001FC01FF0001F800FFC007F8007FF81FF0003FF
FFFF0001FFFFFE0000FFFFFC00003FFFF000000FFFC0000003FE0000222A79A82F>I<00
0003FF8000000007FFC000000007FFC000000007FFC000000007FFC000000003FFC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000003FC0FC000001FFF0FC00000
7FFFCFC00000FFFFEFC00001FFFFFFC00003FFFFFFC00007FE07FFC0000FF801FFC0001F
F0007FC0001FC0003FC0003F80003FC0003F80001FC0007F00001FC0007F00000FC0007E
00000FC000FE00000FC000FE00000FC000FC00000FC000FC00000FC000FC00000FC000FC
00000FC000FC00000FC000FC00000FC000FC00000FC000FC00000FC000FE00000FC0007E
00001FC0007E00001FC0007F00001FC0003F80003FC0003F80007FC0001FC0007FC0001F
E000FFC0000FF801FFC00007FE07FFFF0007FFFFFFFF8003FFFFEFFF8001FFFFCFFF8000
7FFF8FFF80001FFE07FF000007F800000029397DB72F>I<0003FE0000000FFF8000003F
FFE00000FFFFF00001FFFFF80003FFFFFC0007FE07FE000FF800FF000FF0007F001FC000
3F803FC0001F803F80001FC03F00000FC07F00000FC07E00000FC07E00000FE0FE000007
E0FC000007E0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFC0
FC00000000FE000000007E000000007E000000007F000000003F800003C03F800007E01F
C00007E01FE0000FE00FF8001FC007FE003FC007FF80FF8003FFFFFF8001FFFFFF00007F
FFFC00003FFFF800000FFFE0000001FF0000232A7BA82F>I<0003F801FE00001FFF07FF
80007FFFDFFF8000FFFFFFFFC001FFFFFFFFC003FFFFFFFFC003FE0FFF0F8007F803FC07
000FF001FE00000FE000FE00000FC0007E00001FC0007F00001F80003F00001F80003F00
001F80003F00001F80003F00001F80003F00001F80003F00001FC0007F00000FC0007E00
000FE000FE00000FF001FE000007F803FC000003FE0FF8000003FFFFF8000007FFFFF000
0007FFFFE000000FFFFFC000000F9FFF0000000F83F80000000F80000000000F80000000
000F80000000000FC00000000007E40000000007FFFFF0000003FFFFFF000007FFFFFFC0
000FFFFFFFE0001FFFFFFFF0003FC0001FF8003F000001FC007E000000FE007C0000007E
00FC0000003E00F80000003F00F80000001F00F80000001F00F80000001F00F80000001F
00FC0000003F007C0000003E007F000000FE003F800001FC003FE00007FC001FFE007FF8
000FFFFFFFF00007FFFFFFE00001FFFFFF800000FFFFFF0000001FFFF800000003FFC000
002A3E7DA72F>103 D<7FF000000000FFF800000000FFF800000000FFF800000000FFF8
000000007FF80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0FF0000001F83FFC000001F8FFFE000001FBFFFF000001FFFFFF800001FFFFFF800001FF
F03FC00001FFC01FC00001FF800FE00001FF000FE00001FE0007E00001FC0007E00001FC
0007E00001FC0007E00001F80007E00001F80007E00001F80007E00001F80007E00001F8
0007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F8
0007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F8
0007E00001F80007E00001F80007E00001F80007E0007FFFE07FFF80FFFFF0FFFFC0FFFF
F0FFFFC0FFFFF0FFFFC0FFFFF0FFFFC07FFFE07FFF802A387EB72F>I<0003800000000F
E00000000FE00000001FF00000001FF00000001FF00000000FE00000000FE00000000380
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000003FFFE000007FFFF000007FFFF000007FFFF000007FFFF00000
3FFFF000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000007FFFFFFF
00FFFFFFFF00FFFFFFFF80FFFFFFFF80FFFFFFFF007FFFFFFF00213979B82F>I<7FF000
000000FFF800000000FFF800000000FFF800000000FFF8000000007FF80000000000F800
00000000F80000000000F80000000000F80000000000F80000000000F80000000000F800
00000000F80000000000F80000000000F80000000000F80000000000F807FFFF0000F80F
FFFF0000F80FFFFF8000F80FFFFF8000F80FFFFF0000F807FFFF0000F8003F800000F800
7F000000F800FE000000F801FC000000F803F8000000F807F0000000F80FE0000000F81F
C0000000F83F80000000F87F00000000F8FF00000000F9FF80000000FBFF80000000FFFF
C0000000FFE7E0000000FFC7F0000000FF83F0000000FF01F8000000FE00FC000000FC00
FE000000F8007E000000F8003F000000F8001F800000F8001F800000F8000FC00000F800
07E00000F80007F0007FFFF03FFFC0FFFFF87FFFC0FFFFF87FFFE0FFFFF87FFFE0FFFFF8
7FFFC07FFFF03FFFC02B387EB72F>107 D<00000FF000007FF03FFC0000FFF8FFFE0000
FFFBFFFF0000FFFFFFFF8000FFFFFFFF80007FFFF03FC00001FFC01FC00001FF800FE000
01FF000FE00001FE0007E00001FC0007E00001FC0007E00001FC0007E00001F80007E000
01F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E000
01F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E000
01F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E000
01F80007E0007FFFE07FFF80FFFFF0FFFFC0FFFFF0FFFFC0FFFFF0FFFFC0FFFFF0FFFFC0
7FFFE07FFF802A287EA72F>110 D<0003FC0000001FFF8000003FFFC00000FFFFF00001
FFFFF80003FFFFFC0007FE07FE000FF801FF000FE0007F001FC0003F801F80001F803F80
001FC03F00000FC07F00000FE07E000007E07E000007E0FC000003F0FC000003F0FC0000
03F0FC000003F0FC000003F0FC000003F0FC000003F0FC000003F0FC000003F0FE000007
F07E000007E07E000007E07F00000FE07F00000FE03F80001FC03F80001FC01FC0003F80
1FE0007F800FF801FF0007FE07FE0003FFFFFC0001FFFFF80000FFFFF000007FFFE00000
1FFF80000003FC0000242A7BA82F>I<00000FF000007FF03FFC0000FFF8FFFF0000FFFB
FFFFC000FFFFFFFFE000FFFFFFFFF0007FFFF03FF00001FFC00FF80001FF8003FC0001FF
0001FC0001FE0000FE0001FC0000FE0001FC00007F0001F800003F0001F800003F0001F8
00003F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F8
00001F8001F800001F8001F800001F8001F800003F8001F800003F8001FC00003F0001FC
00007F0001FC00007F0001FE0000FE0001FE0000FE0001FF0001FC0001FF8007FC0001FF
C00FF80001FFF03FF00001FFFFFFE00001FFFFFFC00001FBFFFF800001F9FFFF000001F8
7FFC000001F81FE0000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F8000000007FFFE0000000FFFFF0000000FFFFF0000000FFFF
F0000000FFFFF00000007FFFE0000000293C7EA72F>I<0003FE01E000000FFF83F00000
3FFFE3F00000FFFFF3F00001FFFFFBF00003FFFFFFF00007FF03FFF0000FFC00FFF0000F
F0003FF0001FE0001FF0003FC0001FF0003F80000FF0007F000007F0007F000007F0007E
000007F0007E000003F000FE000003F000FC000003F000FC000003F000FC000003F000FC
000003F000FC000003F000FC000003F000FC000003F000FE000003F000FE000007F0007E
000007F0007F000007F0007F00000FF0003F80000FF0003F80001FF0001FC0003FF0001F
F0007FF0000FF800FFF00007FE03FFF00003FFFFFFF00001FFFFFBF00000FFFFF3F00000
7FFFC3F000001FFF03F0000003FC03F00000000003F00000000003F00000000003F00000
000003F00000000003F00000000003F00000000003F00000000003F00000000003F00000
000003F00000000003F00000000003F00000000003F000000001FFFFE0000001FFFFE000
0003FFFFF0000003FFFFF0000001FFFFE0000001FFFFE02C3C7DA72F>I<0000000FF000
7FFF007FFE007FFF81FFFF00FFFF87FFFF00FFFF8FFFFF807FFF9FFFFF807FFFBFF87F80
001FFFC07F80001FFF003F00001FFE001E00001FFC000000001FF8000000001FF0000000
001FF0000000001FE0000000001FC0000000001FC0000000001FC0000000001FC0000000
001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000
001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000
001F80000000001F80000000001F800000007FFFFFF800007FFFFFFC0000FFFFFFFC0000
FFFFFFFC00007FFFFFFC00007FFFFFF8000029287EA72F>I<000F000000001F80000000
1F800000001F800000001F800000001F800000001F800000001F800000001F800000001F
800000001F8000007FFFFFFFC0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE07FFFFF
FFC0001F800000001F800000001F800000001F800000001F800000001F800000001F8000
00001F800000001F800000001F800000001F800000001F800000001F800000001F800000
001F800000001F800000001F800000001F800000001F8000F0001F8001F8001F8001F800
1F8001F8001F8001F8001F8001F8001FC003F8001FC007F0000FE00FF0000FF81FE00007
FFFFC00007FFFFC00003FFFF800001FFFE0000007FF80000001FE00025337EB12F>116
D<7FF001FFC000FFF803FFE000FFF803FFE000FFF803FFE000FFF803FFE0007FF801FFE0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F8000FE00001F8000FE0
0001F8001FE00001F8003FE00001FC007FE00000FF01FFFF8000FFFFFFFFC0007FFFFFFF
C0007FFFFFFFC0003FFFE7FFC0000FFF83FF800003FE0000002A287EA62F>I<7FFF801F
FFE07FFFC03FFFE0FFFFC03FFFF0FFFFC03FFFF07FFFC03FFFE07FFF801FFFE007C00000
3E0007C000003E0007C000003E0007E000007E0003E000007C0003E000007C0003E00000
7C0003E000007C0003E000007C0001F00000F80001F00F80F80001F01FC0F80001F03FE0
F80001F03FE0F80001F03FE0F80000F87FF0F00000F87DF1F00000F87DF1F00000F8FDF1
F00000F8FDF9F00000F8F9F9F0000078F8F9E0000079F8F9E000007DF8F9E000007DF8F9
E000007DF079E000007DF07BE000003FF07FC000003FE07FC000003FE03FC000003FE03F
C000003FC01FC000001F800F80002C277FA62F>119 D E
%EndDVIPSBitmapFont
/Fo 194[71 9[45 45 45 45 4[71 43[{}6 90.9091 /CMR10 rf
%DVIPSBitmapFont: Fp ecrm1000 10 24
/Fp 24 242 df<1C007F00FF80FF80FF80FF80FF807F001C000909798817>46
D<00000006000000060000000E0000000C0000000C0000001C0000001800000038000000
3000000030000000700000006000000060000000E0000000C0000000C0000001C0000001
8000000180000003800000030000000700000006000000060000000E0000000C0000000C
0000001C00000018000000180000003800000030000000300000007000000060000000E0
000000C0000000C0000001C0000001800000018000000380000003000000030000000700
000006000000060000000E0000000C0000001C0000001800000018000000380000003000
000030000000700000006000000060000000E0000000C0000000C0000001C00000018000
000380000003000000030000000700000006000000060000000E0000000C0000000C0000
001C00000018000000180000003800000030000000700000006000000060000000E00000
00C0000000C00000001F537BBD2A>I<0003F80000001FFF0000007E0FC00000F803E000
01E000F00003C000780007C0007C000F80003E000F80003E001F00001F001F00001F003F
00001F803F00001F803F00001F807E00000FC07E00000FC07E00000FC07E00000FC07E00
000FC0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE0000
0FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000F
E0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE07E00000FC07E00000FC0
7E00000FC07E00000FC07F00001FC03F00001F803F00001F803F00001F801F00001F001F
00001F000F80003E000F80003E0007C0007C0003E000F80003F001F80000F803E000007E
0FC000001FFF00000003F8000023397DB62A>I<0001C0000003C0000007C000001FC000
00FFC000FFFFC000FFFFC000FF1FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000003FE0007FFFFFF07FFFFFF07FFFFFF01C3779B62A>I<000FF00000
007FFE000001FFFF800003E03FE0000F000FF0001E0007F8001C0003FC00380001FE0070
0001FE00700000FF00600000FF00FE0000FF00FF00007F80FF80007F80FF80007F80FF80
007F80FF80007F80FF80007F807F00007F801C00007F800000007F80000000FF00000000
FF00000000FE00000001FE00000001FC00000003FC00000003F800000007F00000000FE0
0000000FC00000001F800000003F000000007E00000000FC00000001F800000001E00000
0003C000000007800000000F000000001E000180003C000180007800018000F000038001
E000030003C0000300078000030007000007000FFFFFFF001FFFFFFF003FFFFFFF007FFF
FFFE00FFFFFFFE00FFFFFFFE00FFFFFFFE0021377CB62A>I<0007F80000003FFF000000
FFFFC00001F80FF00003C007F800078003FC000E0001FE000F8001FE001FE000FF001FF0
00FF001FF000FF001FF000FF001FF000FF001FF000FF000FE000FF0007C000FF00000001
FE00000001FE00000001FC00000003FC00000003F800000007F000000007E00000000F80
0000007F0000001FFC0000001FFF800000000FE000000007F000000001FC00000001FE00
000000FF000000007F800000007F800000007FC00000007FC00000003FC00000003FE000
00003FE01E00003FE07F80003FE07F80003FE0FFC0003FE0FFC0003FE0FFC0003FE0FFC0
003FC0FFC0007FC0FF80007F807E00007F80700000FF00380001FE001E0001FE000F8003
F80007F00FF00001FFFFC000007FFF0000000FF8000023397DB62A>I<00000038000000
0038000000007800000000F800000000F800000001F800000003F800000007F800000007
F80000000FF80000001FF80000001BF800000033F800000073F800000063F8000000C3F8
000001C3F800000183F800000303F800000703F800000603F800000C03F800001C03F800
001803F800003003F800007003F800006003F80000C003F80001C003F800038003F80003
0003F800070003F8000E0003F8000C0003F800180003F800380003F800300003F8006000
03F800E00003F800FFFFFFFFF8FFFFFFFFF8FFFFFFFFF8000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8
00000007FC000003FFFFF80003FFFFF80003FFFFF825387EB72A>I<0000003800000000
000038000000000000380000000000007C0000000000007C0000000000007C0000000000
00FE000000000000FE000000000000FE000000000001FF000000000001FF000000000001
FF0000000000037F8000000000037F8000000000077FC000000000063FC000000000063F
C0000000000E3FE0000000000C1FE0000000000C1FE0000000001C1FF000000000180FF0
00000000180FF000000000380FF8000000003007F8000000003007F8000000007007FC00
0000006003FC000000006003FC00000000C003FE00000000C001FE00000000C001FE0000
00018001FF000000018000FF000000018000FF000000030000FF8000000300007F800000
0300007F8000000600007FC0000007FFFFFFC0000007FFFFFFC000000FFFFFFFE000000C
00001FE000000C00001FE000001800000FF000001800000FF000001800000FF000003000
0007F8000030000007F8000030000007F8000060000003FC000060000003FC0000E00000
03FC0000E0000001FE0001E0000001FE0003F0000001FF000FFC000007FF80FFFF8000FF
FFFEFFFF8000FFFFFEFFFF8000FFFFFE373C7DBB3E>65 D<000001FF80018000000FFFE0
038000007FFFF803800001FF807E07800003FC000F0F80000FF000039F80001FE00001DF
80003F800000FF80007F0000007F8000FE0000003F8001FE0000003F8003FC0000001F80
07F80000000F8007F80000000F800FF000000007800FF000000007801FE000000007801F
E000000003803FE000000003803FC000000003807FC000000001807FC000000001807FC0
00000001807F800000000180FF800000000000FF800000000000FF800000000000FF8000
00000000FF800000000000FF800000000000FF800000000000FF800000000000FF800000
000000FF800000000000FF800000000000FF800000000000FF8000000000007F80000000
00007FC000000001807FC000000001807FC000000001803FC000000001803FE000000001
801FE000000003801FE000000003000FF000000003000FF0000000070007F80000000700
07F8000000060003FC0000000E0001FE0000001C0000FE0000001800007F000000380000
3F8000007000001FE00000E000000FF00003C0000003FC000F80000001FF803F00000000
7FFFFC000000000FFFF00000000001FF800000313D7BBA3C>67 D<FFFFFFFFFFF8FFFFFF
FFFFF8FFFFFFFFFFF801FF80001FF800FF000001F800FF000000FC00FF0000007C00FF00
00003C00FF0000001C00FF0000001C00FF0000000C00FF0000000C00FF0000000C00FF00
00000C00FF0000000E00FF0000000600FF0000000600FF0001800600FF0001800600FF00
01800000FF0001800000FF0001800000FF0001800000FF0003800000FF0003800000FF00
07800000FF001F800000FFFFFF800000FFFFFF800000FFFFFF800000FF001F800000FF00
07800000FF0003800000FF0003800000FF0001800000FF0001800000FF0001800000FF00
01800000FF0001800000FF0001800000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000001FFC0000000FFFFFFC00000FFFFFF
C00000FFFFFFC000002F397DB836>70 D<FFFF0000000007FFF8FFFF800000000FFFF8FF
FF800000000FFFF801FF800000000FFC0000DFC00000001BF80000DFC00000001BF80000
CFE000000033F80000CFE000000033F80000CFE000000033F80000C7F000000063F80000
C7F000000063F80000C7F000000063F80000C3F8000000C3F80000C3F8000000C3F80000
C1FC00000183F80000C1FC00000183F80000C1FC00000183F80000C0FE00000303F80000
C0FE00000303F80000C07F00000603F80000C07F00000603F80000C07F00000603F80000
C03F80000C03F80000C03F80000C03F80000C03F80000C03F80000C01FC0001803F80000
C01FC0001803F80000C00FE0003003F80000C00FE0003003F80000C00FE0003003F80000
C007F0006003F80000C007F0006003F80000C003F800C003F80000C003F800C003F80000
C003F800C003F80000C001FC018003F80000C001FC018003F80000C001FC018003F80000
C000FE030003F80000C000FE030003F80000C0007F060003F80000C0007F060003F80000
C0007F060003F80000C0003F8C0003F80000C0003F8C0003F80000C0001FD80003F80000
C0001FD80003F80000C0001FD80003F80000C0000FF00003F80000C0000FF00003F80000
C0000FF00003F80001E00007E00003F80003F00007E00003F8000FFC0003C00007FC00FF
FFC003C003FFFFF8FFFFC003C003FFFFF8FFFFC0018003FFFFF845397DB84C>77
D<001FE0000000FFFC000003E03F000007000F80000F8007E0001FC003F0001FE003F000
1FE001F8001FE001F8001FE000FC000FC000FC00078000FC00000000FC00000000FC0000
0000FC00000000FC0000007FFC000007FFFC00003FE0FC0000FE00FC0003F800FC000FF0
00FC001FC000FC003FC000FC007F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000
FC0CFE0000FC0CFE0001FC0CFE0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E
180FE0781FF003FFF00FE0007F8007C026277DA52A>97 D<0003FC00001FFF80007E03E0
01F8007003F000F807E001FC0FC003FC0FC003FC1F8003FC3F8003FC3F0001F87F0000F0
7F0000007F0000007E000000FE000000FE000000FE000000FE000000FE000000FE000000
FE000000FE000000FE000000FE0000007E0000007F0000007F0000003F0000063F800006
1F80000E1FC0000C0FC0001C07E0003803F0007001F800E0007C07C0001FFF000007F800
1F277DA525>99 D<0000000FC0000003FFC0000003FFC0000003FFC00000003FC0000000
0FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000F
C00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0
0000000FC00003F80FC0001FFF0FC0007E078FC000F801EFC003F0007FC007E0003FC00F
C0001FC00FC0001FC01F80000FC03F80000FC03F00000FC07F00000FC07F00000FC07E00
000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE0000
0FC0FE00000FC0FE00000FC0FE00000FC07E00000FC07F00000FC07F00000FC03F00000F
C03F00000FC01F80001FC01F80001FC00FC0003FC007E0007FC003F000EFF001F801CFFF
007C078FFF001FFE0FFF0007F80FC0283B7DB92E>I<0007F800001FFF00007C0FC001F8
03E003F001F007E001F80FC000F81F80007C1F80007C3F00007E3F00003E7F00003E7F00
003F7E00003FFE00003FFE00003FFE00003FFFFFFFFFFFFFFFFFFE000000FE000000FE00
0000FE000000FE0000007E0000007E0000007F0000007F0000003F0000033F8000031F80
00070FC0000607C0000E07E0001C01F0003800F80070007E03E0001FFF800003FC002027
7EA525>I<0380000FE0001FF0001FF0001FF0001FF0001FF0000FE00003800000000000
000000000000000000000000000000000000000000000000000003F000FFF000FFF000FF
F00007F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC012387EB717>
105 D<03F000FFF000FFF000FFF0000FF00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC0123A7E
B917>108 D<03F00FF0001FE000FFF03FFC007FF800FFF0F03F01E07E00FFF1C01F8380
3F000FF3800FC7001F8003F7000FCE001F8003FE000FDC001F8003FC0007F8000FC003FC
0007F8000FC003F80007F0000FC003F80007F0000FC003F80007F0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F0
0007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F0
0007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC007F8000FF0001FE0FFFFC1FFFF83FFFFFFFF
C1FFFF83FFFFFFFFC1FFFF83FFFF40257EA445>I<0003FE0000000FFF8000003E03E000
00F800F80001F0007C0003E0003E0007C0001F000F80000F801F80000FC01F000007C03F
000007E03F000007E07E000003F07E000003F07E000003F07E000003F0FE000003F8FE00
0003F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE0000
03F87E000003F07E000003F07F000007F03F000007E03F000007E01F80000FC00F80000F
800FC0001F8007E0003F0003F0007E0000F800F800007E03F000001FFFC0000003FE0000
25277EA52A>111 D<00FF030003FFE7000F80FF001E003F003C001F0078000F00700007
00F0000700F0000700F0000300F8000300F8000300FC000300FF0000007FE000007FFF00
003FFFE0001FFFF8000FFFFC0003FFFE0000FFFF000007FF8000007F8000001F80C0000F
C0C00007C0C00007C0E00003C0E00003C0E00003C0F00003C0F0000380F8000780FC0007
80FC000F00FF001E00F3C07C00E1FFF000C03F80001A277DA521>115
D<0018000000180000001800000018000000180000003800000038000000380000007800
00007800000078000000F8000001F8000003F8000007F800001FFFFF00FFFFFF00FFFFFF
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F800C001F800C001F800C001F800C001F800C001F800C001F800C001F800C001F800
C000FC01C000FC0180007C0380007E0300003F0700000FFE000001F8001A347FB220>I<
03F00007E000FFF001FFE000FFF001FFE000FFF001FFE0000FF0001FE00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F0000FE00003F0000FE00003F0000FE000
03F0001FE00001F0001FE00001F8003FE00000F80077F80000FC00E7FF80003F03C7FF80
001FFF87FF800003FC07E00029267EA42E>I<000003000000000F800000001FC0000000
3FC00000007FC0000000FF80000001FE00000003F800000007F00000000FC00000001F00
0000001C0000000010000000000000000000000000000000000000001FE0000000FFFC00
0003E03F000007000F80000F8007E0001FC003F0001FE003F0001FE001F8001FE001F800
1FE000FC000FC000FC00078000FC00000000FC00000000FC00000000FC00000000FC0000
007FFC000007FFFC00003FE0FC0000FE00FC0003F800FC000FF000FC001FC000FC003FC0
00FC007F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000FC0CFE0000FC0CFE0001
FC0CFE0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E180FE0781FF003FFF00F
E0007F8007C026377DB52A>225 D<0003C0008000000FF001C000001FFC038000003FFF
0F000000787FFE000000E01FFC000001C007F80000008001F00000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000003F00FF00000FFF03FFC0000FFF0F0
3F0000FFF1C01F80000FF3800FC00003F7000FC00003FE000FC00003FC0007E00003FC00
07E00003F80007E00003F80007E00003F80007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029387EB72E>241
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq ecbx1000 10 11
/Fq 11 226 df<FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC1E397DB824>73 D<003FFE00000003FFFF
E000000FFFFFF800001FF00FFE00003FF003FF00003FF801FF80003FF800FFC0003FF800
FFC0003FF8007FE0003FF8007FE0001FF0007FE0000FE0007FE0000380007FE000000000
7FE0000000007FE00000003FFFE000000FFFFFE000007FFFFFE00001FFF87FE00007FF80
7FE0000FFE007FE0003FF8007FE0003FF0007FE0007FE0007FE000FFE0007FE000FFC000
7FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC000FFE000FFE001FFE0007FE001
FFE0003FF007FFF8001FFC1FBFFFC00FFFFE1FFFC003FFF80FFFC0003FE003FFC02A257D
A42E>97 D<0001FFC000000FFFFC00007FFFFF0000FF80FF8003FE00FFC007FC01FFC00F
F801FFC01FF801FFC01FF001FFC03FF001FFC03FF000FF807FE0007F007FE0001C007FE0
000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE000
0000FFE0000000FFE00000007FE00000007FE00000007FF00000003FF00000003FF00001
E01FF80001E01FF80003E00FFC0007C007FE00078003FF001F8000FFC07E00007FFFFC00
000FFFF0000001FF800023257DA42A>99 D<00001FF0000001FFFC000007FFFF00001FF8
7F80003FE0FF8000FFC1FFC000FFC1FFC001FF81FFC001FF81FFC003FF01FFC003FF00FF
8003FF00FF8003FF003E0003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FFFFFF0000FFFFFF000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE0000223A7DB91D>102
D<01F00007FC000FFE000FFE001FFF001FFF001FFF001FFF001FFF000FFE000FFE0007FC
0001F00000000000000000000000000000000000000000000000000000000000FF007FFF
007FFF007FFF007FFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFFF8FFFFF8FFFFF8153B
7DBA1B>105 D<00FE007FE0000FFC0000FFFE01FFFC003FFF8000FFFE07FFFF00FFFFE0
00FFFE1F81FF83F03FF000FFFE3C00FF87801FF00007FE7800FFCF001FF80003FEF000FF
DE001FF80003FFE0007FFC000FFC0003FFC0007FF8000FFC0003FFC0007FF8000FFC0003
FF80007FF0000FFC0003FF80007FF0000FFC0003FF00007FE0000FFC0003FF00007FE000
0FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00
007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC
0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007F
E0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003
FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE000
0FFC0003FF00007FE0000FFC00FFFFFC1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF0FFFFFC
1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF04C257DA451>109 D<00FE007FC000FFFE03FF
F800FFFE0FFFFE00FFFE1F03FF00FFFE3C01FF8007FE7801FF8003FEF000FF8003FFE000
FFC003FFC000FFC003FFC000FFC003FF8000FFC003FF8000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC0FFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFF30257DA4
35>I<0001FFC00000000FFFF80000007FFFFF000000FF80FF800003FE003FE00007FC00
1FF0000FF8000FF8001FF00007FC001FF00007FC003FF00007FE003FE00003FE007FE000
03FF007FE00003FF007FE00003FF00FFE00003FF80FFE00003FF80FFE00003FF80FFE000
03FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF807FE000
03FF007FE00003FF007FE00003FF003FE00003FE003FF00007FE001FF00007FC001FF000
07FC000FF8000FF80007FC001FF00003FE003FE00001FF80FFC000007FFFFF0000001FFF
FC00000001FFC0000029257DA430>I<00FE03F000FFFE0FFE00FFFE3FFF00FFFE7C7F80
FFFEF8FFC007FEF0FFC003FFE0FFC003FFC0FFC003FFC0FFC003FF807F8003FF803F0003
FF800C0003FF80000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
00FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE000022257EA427>114
D<000F0000000F0000000F0000000F0000000F0000001F0000001F0000001F0000001F00
00003F0000003F0000007F000000FF000000FF000001FF000007FF00001FFFFFE0FFFFFF
E0FFFFFFE0FFFFFFE003FF000003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF007803FF007803FF007803FF007803FF007803FF007803FF00
7803FF007803FF00F801FF80F001FF81F000FFC3E0003FFFC0001FFF800003FE001D357E
B425>116 D<000007C0000000000FE0000000001FF0000000003FF8000000007FF80000
0000FFF800000001FFF800000003FFF000000007FFF00000000FFFC00000001FFE000000
000FF0000000000F80000000000400000000000000000000000000000000000000000000
000000000000003FFE00000003FFFFE000000FFFFFF800001FF00FFE00003FF003FF0000
3FF801FF80003FF800FFC0003FF800FFC0003FF8007FE0003FF8007FE0001FF0007FE000
0FE0007FE0000380007FE0000000007FE0000000007FE00000003FFFE000000FFFFFE000
007FFFFFE00001FFF87FE00007FF807FE0000FFE007FE0003FF8007FE0003FF0007FE000
7FE0007FE000FFE0007FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC0007FE000
FFC000FFE000FFE001FFE0007FE001FFE0003FF007FFF8001FFC1FBFFFC00FFFFE1FFFC0
03FFF80FFFC0003FE003FFC02A377DB62E>225 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr ecrm1728 17.28 13
/Fr 13 244 df<FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF
80FFFFFFFFFFFFFFFFFF8000FFFC00000001FFFF80003FF8000000001FFFC0001FF80000
000003FFC0001FF80000000000FFC0001FF800000000007FC0001FF800000000003FC000
1FF800000000001FC0001FF800000000000FC0001FF8000000000007C0001FF800000000
0007C0001FF8000000000003C0001FF8000000000003C0001FF8000000000003E0001FF8
000000000001E0001FF8000000000001E0001FF8000000000001E0001FF8000000000001
E0001FF8000000000000E0001FF8000000000000E0001FF8000000000000E0001FF80000
00000000E0001FF8000000000000E0001FF8000000000000E0001FF80000000000007000
1FF800000070000070001FF800000070000070001FF800000070000070001FF800000070
000070001FF800000070000000001FF800000070000000001FF800000070000000001FF8
00000070000000001FF8000000F0000000001FF8000000F0000000001FF8000000F00000
00001FF8000000F0000000001FF8000001F0000000001FF8000003F0000000001FF80000
07F0000000001FF800000FF0000000001FF800007FF0000000001FFFFFFFFFF000000000
1FFFFFFFFFF0000000001FFFFFFFFFF0000000001FFFFFFFFFF0000000001FF800007FF0
000000001FF800000FF0000000001FF8000007F0000000001FF8000003F0000000001FF8
000001F0000000001FF8000000F0000000001FF8000000F0000000001FF8000000F00000
00001FF8000000F0000000001FF800000070000000001FF800000070000000001FF80000
0070000000001FF80000007000000E001FF80000007000000E001FF80000007000000E00
1FF80000007000000E001FF80000007000001C001FF80000000000001C001FF800000000
00001C001FF80000000000001C001FF80000000000001C001FF80000000000001C001FF8
0000000000003C001FF800000000000038001FF800000000000038001FF8000000000000
38001FF800000000000078001FF800000000000078001FF800000000000078001FF80000
0000000078001FF8000000000000F0001FF8000000000000F0001FF8000000000000F000
1FF8000000000001F0001FF8000000000001F0001FF8000000000003F0001FF800000000
0007F0001FF8000000000007F0001FF800000000000FE0001FF800000000001FE0001FF8
00000000007FE0001FF80000000000FFE0001FF80000000003FFE0003FF8000000001FFF
E000FFFC00000003FFFFE0FFFFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFFFC0FFFFFFFFFF
FFFFFFFFC0FFFFFFFFFFFFFFFFFFC04F6278E15C>69 D<00003FE0000000000003FFFE00
000000000FFFFF80000000003FC03FE0000000007C000FF800000000F00003FC00000001
E00001FE00000003C00000FF000000078000007F8000000F0000003FC000000F8000003F
C000000FF000001FE000001FF800001FE000001FFC00000FF000001FFC00000FF000001F
FC00000FF000001FFC000007F800001FFC000007F800001FFC000007F800000FF8000007
F8000003E0000007F800000000000007F800000000000007F800000000000007F8000000
00000007F800000000000007F800000000000007F80000000000007FF800000000007FFF
F8000000000FFFFFF8000000007FF807F800000001FF8007F800000007FC0007F8000000
1FF00007F80000007FC00007F8000000FF800007F8000003FE000007F8000007FC000007
F800000FFC000007F800000FF8000007F800001FF0000007F800003FE0000007F800003F
E0000007F800007FC0000007F801C07FC0000007F801C07FC0000007F801C0FFC0000007
F801C0FF80000007F801C0FF80000007F801C0FF8000000FF801C0FF8000000FF801C0FF
8000000FF801C0FF8000001FF801C0FFC000001BF801C07FC000003BF801C07FC0000073
F801C07FE0000073F801803FF00000E1FC03801FF00003C1FC03800FF8000780FE070007
FE000F00FF0F0001FF807C007FFE00007FFFF8003FFC00001FFFE0001FF8000003FF0000
07E0003A4179BF43>97 D<000001FF80000000000FFFF8000000003FFFFE00000000FF00
7F80000003FC0007E0000007F00001F000001FE000007800003FC000003C00007F800000
1E0000FF0000000F0001FE0000001F0001FC000000FF0003FC000001FF8007F8000003FF
8007F8000003FF800FF0000003FF800FF0000003FF801FE0000003FF801FE0000003FF80
3FE0000001FF003FC00000007C003FC000000000007FC000000000007FC000000000007F
C000000000007F800000000000FF800000000000FF800000000000FF800000000000FF80
0000000000FF800000000000FF800000000000FF800000000000FF800000000000FF8000
00000000FF800000000000FF800000000000FF800000000000FF8000000000007F800000
0000007FC000000000007FC000000000007FC000000000007FC000000000003FC0000000
00003FE000000000003FE000000000001FE000000001C01FF000000001C00FF000000003
C00FF8000000038007F8000000038003FC000000078003FE000000070001FE0000000F00
00FF0000001E00007F8000003C00003FC000007800001FE00000F000000FF80001E00000
03FC0007C0000000FF803F800000003FFFFE000000000FFFF80000000001FF8000003241
7BBF3C>99 D<0000000000001E000000000000003FFE00000000000007FFFE0000000000
0007FFFE00000000000007FFFE00000000000007FFFE000000000000000FFE0000000000
000003FE0000000000000003FE0000000000000001FE0000000000000001FE0000000000
000001FE0000000000000001FE0000000000000001FE0000000000000001FE0000000000
000001FE0000000000000001FE0000000000000001FE0000000000000001FE0000000000
000001FE0000000000000001FE0000000000000001FE0000000000000001FE0000000000
000001FE0000000000000001FE0000000000000001FE0000000000000001FE0000000000
000001FE0000000000000001FE0000000000000001FE0000000000000001FE0000000000
000001FE0000000000000001FE0000000000000001FE0000000000000001FE0000000000
000001FE0000000000000001FE0000000000FF8001FE000000000FFFF801FE000000003F
FFFE01FE00000000FF803F81FE00000003FC0007C1FE00000007F80001E1FE0000001FE0
0000F9FE0000003FC000007DFE0000007F8000003DFE000000FF0000001FFE000001FE00
00000FFE000001FC00000007FE000003FC00000007FE000007F800000003FE000007F000
000001FE00000FF000000001FE00001FF000000001FE00001FE000000001FE00001FE000
000001FE00003FE000000001FE00003FC000000001FE00007FC000000001FE00007FC000
000001FE00007FC000000001FE00007FC000000001FE00007F8000000001FE0000FF8000
000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000
000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000
000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000
000001FE00007F8000000001FE00007FC000000001FE00007FC000000001FE00007FC000
000001FE00003FC000000001FE00003FC000000001FE00003FE000000001FE00001FE000
000001FE00001FE000000001FE00000FF000000003FE00000FF000000003FE000007F800
000007FE000003F800000007FE000003FC0000000FFE000001FE0000001FFE000000FE00
00003DFE0000007F0000003DFE0000003F800000F9FF0000001FC00001F1FF0000000FF0
0003C1FFC0000007F8000F81FFFF800001FF007F01FFFF8000007FFFFC01FFFF8000001F
FFE001FFFF80000001FF0001FF000041657BE34B>I<000003FE00000000001FFFE00000
0000FFFFF800000001FE03FE00000007F0007F8000000FE0003FC000003FC0001FE00000
7F00000FF00000FF000007F80000FE000003F80001FC000003FC0003F8000001FC0007F8
000001FE0007F0000000FE000FF0000000FF000FF00000007F001FE00000007F001FE000
00007F803FE00000007F803FC00000003F803FC00000003F807FC00000003FC07FC00000
003FC07FC00000003FC07F800000003FC07F800000003FC0FF800000003FC0FFFFFFFFFF
FFC0FFFFFFFFFFFFC0FFFFFFFFFFFFC0FF800000000000FF800000000000FF8000000000
00FF800000000000FF800000000000FF800000000000FF800000000000FF800000000000
FF8000000000007F8000000000007FC000000000007FC000000000007FC000000000003F
C000000000003FC000000000003FE000000000001FE000000000001FE000000001C00FF0
00000001C00FF000000003C007F8000000038007F8000000038003FC000000078001FC00
00000F0001FE0000000E0000FF0000001E00007F8000003C00003FC000007800001FE000
00F0000007F00003E0000003FC0007C0000000FF803F000000003FFFFC000000000FFFF0
0000000001FF80000032417BBF3C>I<0000000000007F00000007FC0003FFC000003FFF
800FFFE00000FFFFE01F83F00003FC07F87C07F00007F001FCF007F0000FC0007FC007F0
001F80003F8007F0003F80003F8003E0007F00001FC0000000FE00000FE0000000FE0000
0FE0000001FC000007F0000001FC000007F0000003FC000007F8000003FC000007F80000
03F8000003F8000007F8000003FC000007F8000003FC000007F8000003FC000007F80000
03FC000007F8000003FC000007F8000003FC000007F8000003FC000007F8000003FC0000
07F8000003FC000007F8000003FC000003F8000003F8000003FC000007F8000003FC0000
07F8000001FC000007F0000001FC000007F0000000FE00000FE0000000FE00000FE00000
007F00001FC00000003F80003F800000001F80003F000000003FC0007E0000000037F001
FC0000000073FC07F80000000060FFFFE000000000E03FFF8000000000E007FC00000000
01C000000000000001C000000000000001C000000000000001C000000000000001C00000
0000000001E000000000000001E000000000000001E000000000000001F0000000000000
01F800000000000001FC00000000000000FF00000000000000FFFFFFFC000000007FFFFF
FFE00000007FFFFFFFFC0000003FFFFFFFFF0000001FFFFFFFFFC000000FFFFFFFFFF000
003FFFFFFFFFF80000FE000003FFFC0003F80000001FFE0007E000000007FE000FC00000
0001FF001F8000000000FF003F80000000007F803F00000000003F807E00000000003F80
7E00000000001FC0FE00000000001FC0FC00000000000FC0FC00000000000FC0FC000000
00000FC0FC00000000000FC0FC00000000000FC0FC00000000000FC0FE00000000001FC0
7E00000000001F807E00000000001F807F00000000003F803F80000000007F001F800000
00007E000FC000000000FC000FE000000001FC0003F800000007F00001FC0000000FE000
00FF0000003FC000003FE00001FF0000000FFE001FFC00000003FFFFFFF0000000007FFF
FF800000000003FFF00000003C5E7CBF43>103 D<0078000001FE000003FF000007FF80
0007FF800007FF800007FF800007FF800007FF800003FF000001FE000000780000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000780000FFF8000FFFF8000FFFF8000FFFF8000FFFF800003FF800000FF80
0000FF8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F800000FFC00001FFE000FFFFFF80FFFFFF80FFFFFF
80FFFFFF80195F7BDE25>105 D<0003C0007FE000000007FFC003FFFC000000FFFFC00F
FFFF000000FFFFC03F00FFC00000FFFFC078001FE00000FFFFC0F0000FF0000001FFC1C0
0007F80000007FC3800007FC0000007FC7000003FC0000003FCE000003FE0000003FCE00
0001FE0000003FDC000001FE0000003FD8000001FE0000003FF8000000FF0000003FF000
0000FF0000003FF0000000FF0000003FF0000000FF0000003FE0000000FF0000003FE000
0000FF0000003FE0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC000
0000FF0000003FC0000000FF0000003FC0000000FF0000007FE0000001FF800000FFF000
0003FFC000FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF0
03FFFFFFC0423F7CBE4B>110 D<000001FF80000000000FFFF0000000007FFFFE000000
00FF00FF00000003F8001FC0000007E00007E000001FC00003F800003F800001FC00007F
000000FE0000FE0000007F0000FC0000003F0001F80000001F8003F80000001FC007F000
00000FE007F00000000FE00FE000000007F00FE000000007F01FE000000007F81FC00000
0003F83FC000000003FC3FC000000003FC3FC000000003FC7FC000000003FE7F80000000
01FE7F8000000001FE7F8000000001FE7F8000000001FEFF8000000001FFFF8000000001
FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FF
FF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FF7F
8000000001FE7F8000000001FE7FC000000003FE7FC000000003FE7FC000000003FE3FC0
00000003FC3FC000000003FC1FC000000003F81FE000000007F81FE000000007F80FE000
000007F00FF00000000FF007F00000000FE003F80000001FC003F80000001FC001FC0000
003F8000FE0000007F00007F000000FE00003F800001FC00001FC00003F800000FE00007
F0000003F8001FC0000001FF00FF800000007FFFFE000000000FFFF00000000001FF8000
0038417BBF43>I<000F0007F8000FFF001FFE00FFFF007FFF80FFFF00F81FC0FFFF01E0
3FC0FFFF03C07FE003FF07807FE000FF0F007FE000FF0E007FE0007F1C007FE0007F1800
3FC0007F38001F80007F30000600007F70000000007F70000000007F60000000007FE000
0000007FE0000000007FC0000000007FC0000000007FC0000000007FC0000000007FC000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F8000000000FFC000000001FFF000
0000FFFFFFF80000FFFFFFF80000FFFFFFF80000FFFFFFF800002B3F7BBE34>114
D<0000700000000000700000000000700000000000700000000000700000000000700000
000000700000000000F00000000000F00000000000F00000000000F00000000000F00000
000001F00000000001F00000000001F00000000003F00000000003F00000000007F00000
000007F0000000000FF0000000000FF0000000001FF0000000003FF0000000007FF00000
0000FFF000000003FFF00000000FFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF00001C0000FF00001C0000FF00001C0000FF00001
C0000FF00001C0000FF00001C0000FF00001C0000FF00001C0000FF00001C0000FF00001
C0000FF00001C0000FF00001C0000FF00001C0000FF00001C00007F80003800007F80003
800007F80003800007F80007800003FC0007000003FC000F000001FE000E000000FF001E
0000007F803C0000003FE0F80000001FFFF000000007FFC000000000FF00002A597ED734
>116 D<0003C00000000F000007FFC000001FFF0000FFFFC00003FFFF0000FFFFC00003
FFFF0000FFFFC00003FFFF0000FFFFC00003FFFF000001FFC0000007FF0000007FC00000
01FF0000007FC0000001FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC00000
00FF0000003FC0000000FF0000003FC0000001FF0000003FC0000001FF0000003FC00000
01FF0000003FC0000003FF0000003FC0000003FF0000003FC0000003FF0000003FC00000
07FF0000001FC0000006FF0000001FE000000EFF0000001FE000001CFF0000000FE00000
1CFF0000000FF0000038FF80000007F0000070FF80000003F80001E0FFE0000001FE0003
C0FFFFC00000FFC01F80FFFFC000003FFFFE00FFFFC000000FFFF800FFFFC0000000FFC0
00FF800042407CBE4B>I<00000000180000000000007E000000000000FF000000000001
FF000000000003FF000000000007FF00000000000FFF00000000001FFE00000000003FF8
00000000007FF00000000000FFC00000000001FF800000000003FE000000000007FC0000
0000000FF000000000001FE000000000003F8000000000007E000000000000FC00000000
000070000000000000600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000001FF8000000000
0FFFF0000000007FFFFE00000000FF00FF00000003F8001FC0000007E00007E000001FC0
0003F800003F800001FC00007F000000FE0000FE0000007F0000FC0000003F0001F80000
001F8003F80000001FC007F00000000FE007F00000000FE00FE000000007F00FE0000000
07F01FE000000007F81FC000000003F83FC000000003FC3FC000000003FC3FC000000003
FC7FC000000003FE7F8000000001FE7F8000000001FE7F8000000001FE7F8000000001FE
FF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF
8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF80
00000001FFFF8000000001FF7F8000000001FE7F8000000001FE7FC000000003FE7FC000
000003FE7FC000000003FE3FC000000003FC3FC000000003FC1FC000000003F81FE00000
0007F81FE000000007F80FE000000007F00FF00000000FF007F00000000FE003F8000000
1FC003F80000001FC001FC0000003F8000FE0000007F00007F000000FE00003F800001FC
00001FC00003F800000FE00007F0000003F8001FC0000001FF00FF800000007FFFFE0000
00000FFFF00000000001FF800000385D7BDB43>243 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs ecrm1200 12 8
/Fs 8 226 df<000030000000F0000001F0000003F000001FF00000FFF000FFFFF000FF
E7F000FF07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
0FF800001FFC007FFFFFFF7FFFFFFF7FFFFFFF204278C131>49 D<FFFFFFFFFC0000FFFF
FFFFFFC000FFFFFFFFFFF80001FFC0000FFC00007F800001FF00007F8000007F80007F80
00001FE0007F8000000FE0007F80000007F0007F80000007F8007F80000003FC007F8000
0003FC007F80000003FE007F80000001FE007F80000001FE007F80000001FF007F800000
01FF007F80000001FF007F80000001FF007F80000001FF007F80000001FF007F80000001
FF007F80000001FE007F80000001FE007F80000003FE007F80000003FC007F80000003FC
007F80000007F8007F80000007F0007F8000000FE0007F8000001FC0007F8000007F8000
7F800001FE00007F80000FFC00007FFFFFFFF000007FFFFFFF8000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
00000000007F8000000000007F8000000000007F8000000000007F8000000000007F8000
000000007F8000000000007F8000000000007F8000000000007F8000000000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F800000000001FFE000000000FFFFFFC0000000FFFFFFC0000000FFFFFFC000000038
447CC342>80 D<0007FC000000003FFF80000000F80FE0000003C003F00000070001F800
000E0000FC00000FC0007E00001FE0007F00001FF0003F80001FF0003F80001FF0003F80
001FF0001FC0001FF0001FC0000FE0001FC0000380001FC0000000001FC0000000001FC0
000000001FC0000000001FC00000000FFFC0000001FFFFC000000FFE1FC000003FC01FC0
0000FF001FC00003FC001FC00007F8001FC0000FF0001FC0001FE0001FC0003FC0001FC0
007FC0001FC0007F80001FC0007F80001FC060FF00001FC060FF00001FC060FF00001FC0
60FF00003FC060FF00003FC060FF00003FC060FF80007FC0607F8000EFC0607FC000C7E0
C03FC001C7E0C01FE00783F1C007F81E03FF8001FFFC01FF00001FE0007C002B2E7CAC31
>97 D<00007F80000003FFF000000FC07C00003F000F0000FC00038001F80001C003F800
0FC007F0001FE007E0003FE00FE0003FE01FC0003FE01FC0003FE03F80003FE03F80001F
C07F800007007F800000007F800000007F00000000FF00000000FF00000000FF00000000
FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF
000000007F000000007F800000007F800000003F800000003F800000303FC00000301FC0
0000700FE00000600FE00000E007F00000C003F80001C001F800038000FC000700003F00
1E00001FC078000007FFF0000000FF8000242E7DAC2B>99 D<01E00007F80007F8000FFC
000FFC000FFC000FFC0007F80007F80001E0000000000000000000000000000000000000
0000000000000000000000000000000000000000000001FC00FFFC00FFFC00FFFC0007FC
0003FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC
0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC
0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0003FE
00FFFFF8FFFFF8FFFFF815437DC21C>105 D<03F803F0FFF81FFCFFF83C3EFFF8707F07
F8E0FF03F9C0FF01F980FF01FB80FF01FB007E01FB003C01FF000001FE000001FE000001
FE000001FE000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001
FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001
FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000003
FF0000FFFFFE00FFFFFE00FFFFFE00202C7DAB26>114 D<000600000006000000060000
0006000000060000000E0000000E0000000E0000000E0000001E0000001E0000001E0000
003E0000007E0000007E000000FE000001FE000007FE00001FFFFFF0FFFFFFF0FFFFFFF0
00FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0000
00FE000000FE000000FE000000FE000000FE000C00FE000C00FE000C00FE000C00FE000C
00FE000C00FE000C00FE000C00FE000C00FE000C007E001C007F0018007F0018003F0038
001F8030001FC0700007E0E00001FFC000007F001E3E7EBC26>116
D<000001E00000000003F00000000007F8000000000FF8000000001FF0000000003FF000
0000007FC000000000FF8000000000FE0000000001F80000000003F00000000007C00000
00000F00000000000E000000000008000000000000000000000000000000000000000000
000000000000000007FC000000003FFF80000000F80FE0000003C003F00000070001F800
000E0000FC00000FC0007E00001FE0007F00001FF0003F80001FF0003F80001FF0003F80
001FF0001FC0001FF0001FC0000FE0001FC0000380001FC0000000001FC0000000001FC0
000000001FC0000000001FC00000000FFFC0000001FFFFC000000FFE1FC000003FC01FC0
0000FF001FC00003FC001FC00007F8001FC0000FF0001FC0001FE0001FC0003FC0001FC0
007FC0001FC0007F80001FC0007F80001FC060FF00001FC060FF00001FC060FF00001FC0
60FF00003FC060FF00003FC060FF00003FC060FF80007FC0607F8000EFC0607FC000C7E0
C03FC001C7E0C01FE00783F1C007F81E03FF8001FFFC01FF00001FE0007C002B417CBF31
>225 D E
%EndDVIPSBitmapFont
/Ft 254[23 1[{}1 83.022 /CMSY10 rf
%DVIPSBitmapFont: Fu ectt1000 10 24
/Fu 24 122 df<0F801FE03FF07FF87FF87FFC7FFC7FFC3FFC1FFC0FFC00FC00F800F801
F803F007F01FE07FC0FF80FF00FC0070000E17718A2C>44 D<0003F80000000FFE000000
3FFF8000007FFFC00000FFFFE00001FE0FF00003F803F80007F001FC0007E000FC000FC0
007E000FC0007E001F80003F001F80003F003F00001F803F00001F803E00000F807E0000
0FC07E00000FC07E00000FC07C000007C0FC000007E0FC000007E0FC000007E0FC000007
E0FC000007E0FC000007E0FC000007E0FC000007E0FC000007E0FC000007E0FC000007E0
FC000007E0FE00000FE07E00000FC07E00000FC07E00000FC07E00000FC03F00001F803F
00001F803F00001F801F80003F001F80003F000FC0007E000FE000FE0007E000FC0007F0
01FC0003F803F80001FE0FF00000FFFFE000007FFFC000003FFF8000000FFE00000003F8
000023357CB32C>48 D<00070000000F8000000F8000001F8000001F8000003F8000007F
800000FF800001FF800007FF80007FFF8000FFFF8000FFDF8000FF9F80007C1F8000001F
8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F
8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F
8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F
8000001F8000001F8000001F8000001F80007FFFFFE0FFFFFFF0FFFFFFF0FFFFFFF07FFF
FFE01C3477B32C>I<7FFFFFFFF0FFFFFFFFF8FFFFFFFFF8FFFFFFFFF87FFFFFFFF00000
000000000000000000000000000000000000000000000000000000000000000000000000
00007FFFFFFFF0FFFFFFFFF8FFFFFFFFF8FFFFFFFFF87FFFFFFFF025127DA12C>61
D<7FFFFFC000FFFFFFF800FFFFFFFC00FFFFFFFF007FFFFFFF8003F000FFC003F0003FC0
03F0000FE003F00007F003F00007F003F00003F003F00003F803F00001F803F00001F803
F00001F803F00001F803F00001F803F00001F803F00003F803F00003F003F00007F003F0
0007F003F0000FE003F0003FC003F000FFC003FFFFFF8003FFFFFF0003FFFFFC0003FFFF
F80003FFFFC00003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F00000007FFF800000FFFFC00000FFFFC00000FFFFC000007F
FF80000025337EB22C>80 D<01FFF0000007FFFE00001FFFFF80001FFFFFE0003FFFFFF0
003FC01FF8003FC007F8003FC001FC001F8000FC00060000FE000000007E000000007E00
0000007E000000FFFE00001FFFFE0000FFFFFE0003FFFFFE000FFFFFFE001FFF807E003F
F8007E007FC0007E007F00007E00FE00007E00FC00007E00FC00007E00FC00007E00FC00
007E00FE00007E007F0000FE007F8003FE003FE01FFE001FFFFFFFFC0FFFFFFFFE07FFFF
BFFE01FFFE1FFE003FF007FC27247CA32C>97 D<0003FFE000001FFFF800007FFFFE0001
FFFFFE0003FFFFFF0007FE00FF000FF000FF001FE000FF001FC0007E003F800018003F00
0000007F000000007E000000007E00000000FC00000000FC00000000FC00000000FC0000
0000FC00000000FC00000000FC00000000FC000000007E000000007E000000007F000000
003F00000F003F80001F801FC0001F801FE0003F800FF0007F0007FE03FF0003FFFFFE00
01FFFFFC00007FFFF800001FFFE0000003FF000021247AA32C>99
D<0003FE0000001FFFC000007FFFF00001FFFFF80003FFFFFC0007FE03FE000FF800FF00
1FE0003F801FC0003F803F80001FC03F00000FC07F00000FC07E00000FE07E000007E0FC
000007E0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFC0FC00000000FE00
0000007E000000007E000000007F000000003F000003C03F800007E01FC00007E00FF000
0FE007F8003FC007FF00FFC001FFFFFF8000FFFFFF00003FFFFC00000FFFF0000001FF80
0023247CA32C>101 D<00000FF80000003FFE000000FFFF000001FFFF800003FFFF8000
07FC7F800007F07F80000FE03F00000FC03F00000FC00000000FC00000000FC00000000F
C00000000FC00000000FC000007FFFFFFE00FFFFFFFF00FFFFFFFF00FFFFFFFF007FFFFF
FE00000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC000
00000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000
000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0000000
0FC00000000FC00000000FC00000000FC00000000FC000003FFFFFF0007FFFFFF8007FFF
FFF8007FFFFFF8003FFFFFF00021337DB22C>I<00000003F80007F80FFC001FFE3FFE00
7FFFFFFF01FFFFFFFF03FFFFFE7F03FC0FF87F07F003F83E0FE001FC1C0FC000FC001FC0
00FE001F80007E001F80007E001F80007E001F80007E001F80007E001F80007E001FC000
FE000FC000FC000FE001FC0007F003F80003FC0FF00007FFFFF00007FFFFE0000FFFFF80
000F9FFE00000F87F800000F800000000F800000000F800000000FC000000007E0000000
07FFFFF00003FFFFFE0007FFFFFF800FFFFFFFE01FFFFFFFF03FC0001FF87F000003FC7E
000000FC7C0000007CFC0000007EF80000003EF80000003EF80000003EF80000003EFC00
00007E7E000000FC7F800003FC3FE0000FF81FFC007FF00FFFFFFFE003FFFFFF8001FFFF
FF00003FFFF8000007FFC00028387EA42C>I<7FF000000000FFF800000000FFF8000000
00FFF8000000007FF80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F81FE0000001F87FFC000001F9FFFE000001FBFFFF000001FFFFFF000001FFF03F80
0001FFC01F800001FF801FC00001FF000FC00001FE000FC00001FC000FC00001FC000FC0
0001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC0
0001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC0
0001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC0
0001F8000FC0007FFFE0FFFF00FFFFF1FFFF80FFFFF1FFFF80FFFFF1FFFF807FFFE0FFFF
0029337FB22C>I<00070000001FC000001FC000003FE000003FE000003FE000001FC000
001FC0000007000000000000000000000000000000000000000000000000000000000000
7FFFC0007FFFE000FFFFE0007FFFE0007FFFE0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0007FFFFFFCFFFFFFFEFFFFFFFEFFFFFFFE7FFFFFFC
1F3479B32C>I<7FE0000000FFF0000000FFF0000000FFF00000007FF000000001F00000
0001F000000001F000000001F000000001F000000001F000000001F000000001F0000000
01F000000001F000000001F01FFFF001F03FFFF801F03FFFF801F03FFFF801F01FFFF001
F000FE0001F001FC0001F003F80001F007F00001F00FE00001F01FC00001F03F800001F0
7F000001F0FE000001F1FC000001F3FC000001F7FE000001FFFF000001FFFF000001FF9F
800001FF0FC00001FE0FE00001FC07E00001F803F00001F001F80001F001FC0001F000FC
0001F0007E0001F0003F0001F0003F8001F0001F807FFFC0FFFCFFFFE1FFFEFFFFE1FFFE
FFFFE1FFFE7FFFC0FFFC27337EB22C>107 D<7FFFE00000FFFFF00000FFFFF00000FFFF
F000007FFFF000000003F000000003F000000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000000003F000007FFFFF
FF80FFFFFFFFC0FFFFFFFFC0FFFFFFFFC07FFFFFFF8022337BB22C>I<7F83F007E0007F
CFFC1FF800FFDFFE3FFC007FFFFEFFFC007FFFFFFFFE0007FE1FFC3E0007FC1FF83F0007
F80FF01F0007F00FE01F0007E00FC01F0007E00FC01F0007E00FC01F0007C00F801F0007
C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007
C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007
C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F007F
FC3FF87FF07FFC7FF8FFF0FFFE7FFCFFF87FFC7FF8FFF07FFC3FF87FF02D2481A32C>I<
7FF01FE00000FFF87FFC0000FFF9FFFE0000FFFBFFFF00007FFFFFFF000001FFF03F8000
01FFC01F800001FF801FC00001FF000FC00001FE000FC00001FC000FC00001FC000FC000
01F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC000
01F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC000
01F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC000
01F8000FC0007FFFE0FFFF00FFFFF1FFFF80FFFFF1FFFF80FFFFF1FFFF807FFFE0FFFF00
29247FA32C>I<0007FC0000001FFF0000007FFFC00001FFFFF00003FFFFF80007FC07FC
000FF001FE001FE000FF001F80003F003F80003F803F00001F807E00000FC07E00000FC0
7E00000FC0FC000007E0FC000007E0FC000007E0FC000007E0FC000007E0FC000007E0FC
000007E0FE00000FE07E00000FC07E00000FC07F00001FC03F00001F803F80003F801FC0
007F001FE000FF000FF001FE0007FC07FC0003FFFFF80001FFFFF000007FFFC000001FFF
00000007FC000023247CA32C>I<7FF01FE000FFF8FFF800FFFBFFFE00FFFFFFFF007FFF
FFFF8001FFF07FC001FF801FE001FF0007F001FE0003F801FC0003F801FC0001FC01F800
00FC01F80000FC01F80000FE01F800007E01F800007E01F800007E01F800007E01F80000
7E01F800007E01F800007E01F800007E01F80000FE01FC0000FC01FC0000FC01FC0001F8
01FE0003F801FF0007F001FF000FF001FF801FE001FFE07FC001FFFFFF8001FFFFFF0001
FBFFFE0001F8FFF80001F83FC00001F800000001F800000001F800000001F800000001F8
00000001F800000001F800000001F800000001F800000001F800000001F800000001F800
000001F80000007FFFE00000FFFFF00000FFFFF00000FFFFF000007FFFE0000027367FA3
2C>I<7FFE003FC0FFFF01FFF0FFFF07FFF8FFFF1FFFFC7FFF3FFFFC003F7FE1FC003FFF
01FC003FFC00F8003FF80070003FF00000003FE00000003FE00000003FC00000003F8000
00003F800000003F800000003F000000003F000000003F000000003F000000003F000000
003F000000003F000000003F000000003F000000003F000000003F000000003F00000000
3F000000003F000000003F0000007FFFFFE000FFFFFFF000FFFFFFF000FFFFFFF0007FFF
FFE00026247EA32C>114 D<007FF87003FFFFF80FFFFFF81FFFFFF83FFFFFF87FC00FF8
7E0003F8FC0001F8F80001F8F80001F8F80001F8FC0000F07F0000007FF000003FFFC000
1FFFFE000FFFFF8003FFFFE0007FFFF80001FFFC000007FC000000FE7800007FFC00003F
FC00001FFE00001FFE00001FFF00003FFF80003EFFC000FEFFF007FCFFFFFFFCFFFFFFF8
FFFFFFE0F8FFFF80701FFC0020247AA32C>I<001E000000003F000000003F000000003F
000000003F000000003F000000003F000000003F000000003F000000003F0000007FFFFF
FF00FFFFFFFF80FFFFFFFF80FFFFFFFF807FFFFFFF00003F000000003F000000003F0000
00003F000000003F000000003F000000003F000000003F000000003F000000003F000000
003F000000003F000000003F000000003F000000003F000000003F000000003F00000000
3F0003C0003F0007E0003F0007E0003F0007E0003F0007E0003F0007E0003F800FE0001F
801FC0001FE07FC0000FFFFF80000FFFFF000003FFFE000001FFF80000003FE000232E7E
AD2C>I<7FF003FF8000FFF807FFC000FFF807FFC000FFF807FFC0007FF803FFC00001F8
000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8
000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8
000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8
000FC00001F8000FC00001F8000FC00001F8001FC00001F8001FC00001F8003FC00001FC
007FC00000FE03FFC00000FFFFFFFF00007FFFFFFF80003FFFFFFF80001FFFCFFF800003
FE07FF0029247FA32C>I<7FFF007FFF007FFF80FFFF00FFFF80FFFF807FFF80FFFF007F
FF007FFF0007C00001F00007C00001F00007C00001F00007C00001F00007C00001F00007
C00001F00003E00003E00003E00003E00003E00003E00003E03E03E00003E07F03E00003
E07F03E00001F07F07C00001F0FF87C00001F0FF87C00001F0F787C00001F0F787C00001
F1F7C7C00000F1F7C7800000F9E3CF800000F9E3CF800000FBE3EF800000FBE3EF800000
FBE3EF8000007BC1EF0000007FC1FF0000007FC1FF0000007F80FF0000007F80FF000000
3F80FE0000001F007C000029247FA32C>119 D<7FFF01FFFCFFFF81FFFEFFFF83FFFEFF
FF81FFFE7FFF01FFFC03E0000F8001F0000F8001F0001F8001F8001F0000F8001F0000F8
003F0000FC003E00007C003E00007E007E00003E007C00003E007C00003F00FC00001F00
F800001F00F800000F81F800000F81F000000F81F0000007C1F0000007C3E0000007C3E0
000003E3E0000003E7C0000001E7C0000001F7C0000001F780000000FF80000000FF8000
0000FF000000007F000000007F000000003E000000003E000000007E000000007C000000
007C00000000FC00000000F800000000F800000C01F800003F01F000007F83F000007F87
E000007E0FE000007E1FC000007FFF8000003FFF0000001FFE0000000FFC00000007E000
000027367EA32C>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv ecrm1095 10.95 50
/Fv 50 251 df<000003FE000000001FFFC0000000FE01E0000001F80078000007E0001C
00000FC0007C00001F8000FE00003F0001FE00007F0001FE00007E0001FE0000FE0001FE
0000FC0000FC0000FC0000780000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC00007E00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE0000FC0001FE
0000FC0000FE0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0001FE0000FF007FFFF83FFFFC7FFFF83FFFFC7FFFF83FFFFC2E407FBF32
>28 D<0000300000700000E00001C0000380000700000F00001E00003C00003C00007800
00F00000F00001E00001E00003C00003C00007C0000780000F80000F80000F00001F0000
1F00001E00003E00003E00003E00003C00007C00007C00007C00007C00007C00007C0000
780000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000
F80000F80000F80000F80000F80000F80000F800007800007C00007C00007C00007C0000
7C00007C00003C00003E00003E00003E00001E00001F00001F00000F00000F80000F8000
07800007C00003C00003C00001E00001E00000F00000F000007800003C00003C00001E00
000F000007000003800001C00000E0000070000030145A77C323>40
D<C00000E000007000003800001C00000E00000F000007800003C00003C00001E00000F0
0000F000007800007800003C00003C00003E00001E00001F00001F00000F00000F80000F
800007800007C00007C00007C00003C00003E00003E00003E00003E00003E00003E00001
E00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001
F00001F00001F00001F00001F00001F00001F00001E00003E00003E00003E00003E00003
E00003E00003C00007C00007C00007C0000780000F80000F80000F00001F00001F00001E
00003E00003C00003C0000780000780000F00000F00001E00003C00003C0000780000F00
000E00001C0000380000700000E00000C00000145A7BC323>I<1C007F00FF80FF80FFC0
FFC0FFC07FC01CC000C000C000C000C000C001C00180018003800300070006000E000C00
1C003800700060000A1B788819>44 D<FFFFFEFFFFFEFFFFFEFFFFFEFFFFFE17057F951E
>I<1C007F00FF80FF80FF80FF80FF807F001C000909788819>I<0003FC0000001FFF8000
003E07C00000F801F00001F000F80003E0007C0003C0003C0007C0003E000F80001F000F
80001F001F00000F801F00000F803F00000FC03F00000FC03F00000FC03F00000FC07E00
0007E07E000007E07E000007E07E000007E07E000007E0FE000007F0FE000007F0FE0000
07F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007
F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0
FE000007F0FE000007F0FE000007F0FE000007F07E000007E07E000007E07E000007E07E
000007E07F00000FE03F00000FC03F00000FC03F00000FC03F00000FC01F00000F801F80
001F800F80001F000F80001F0007C0003E0007C0003E0003E0007C0001F000F80000F801
F000003E07C000001FFF80000003FC0000243F7CBC2D>48 D<0000C0000003C0000007C0
00001FC000007FC00007FFC000FFFFC000FF9FC000F81FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00007FF000FFFFFFF8FFFFFFF8FFFFFFF81D3D78BC2D>I<0007FC0000003FFF800000FF
FFE00001F00FF800078003FC000F0001FE000E0000FF001C00007F803800003FC0300000
3FC07000001FE06000001FE06000001FE0FE00000FF0FF00000FF0FF80000FF0FF80000F
F0FF80000FF0FF80000FF0FF80000FF07F00000FF01C00000FF00000000FE00000001FE0
0000001FE00000001FC00000003FC00000003F800000007F800000007F00000000FE0000
0001FC00000001FC00000003F800000007F00000000FE00000000FC00000001F80000000
3E000000007C00000000F800000001F000000003E000000003C000000007800000000F00
0030001E000030003C000030007800003000F000006001E000006003C000006007800000
6007000000E00FFFFFFFE01FFFFFFFE03FFFFFFFE07FFFFFFFC0FFFFFFFFC0FFFFFFFFC0
FFFFFFFFC0243D7CBC2D>I<0007FC0000003FFF800000FFFFE00001F807F80007C003FC
000F0001FE000E0000FF001C00007F801F80007F803FC0003FC03FE0003FC03FE0003FC0
3FE0003FC03FE0003FC03FE0003FC01FC0003FC00700003FC00000003F800000007F8000
00007F800000007F00000000FF00000000FE00000001FC00000003F800000003F0000000
0FC00000003F0000001FFC0000001FFF800000000FE000000003F800000001FC00000000
FE000000007F000000007F800000003FC00000003FC00000003FE00000003FE00000001F
E00000001FF00000001FF00C00001FF03F00001FF07F80001FF0FFC0001FF0FFC0001FF0
FFC0001FF0FFC0001FF0FFC0003FE0FF80003FE07F00003FC07000003FC07000007F8038
00007F801C0000FF000F0001FE0007C003FC0003F80FF00000FFFFE000003FFF80000007
FC0000243F7CBC2D>I<0000000E000000000E000000001E000000003E000000003E0000
00007E00000000FE00000000FE00000001FE00000003FE00000003FE00000006FE000000
0EFE0000000CFE00000018FE00000038FE00000030FE00000060FE000000E0FE000000C0
FE00000180FE00000380FE00000300FE00000600FE00000E00FE00000C00FE00001800FE
00003800FE00003000FE00006000FE0000E000FE0000C000FE00018000FE00038000FE00
030000FE00060000FE000E0000FE000C0000FE00180000FE00380000FE00300000FE0060
0000FE00E00000FE00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE00000000FE00000001FF000001FFFFFF0001FFFFFF0001FFFFFF283E7EBD
2D>I<00001FE0000000FFF8000003FFFE00000FF01F00001F800780003F000380007E00
0FC000FC001FC001F8003FC003F0003FC003F0003FC007E0003FC00FE0001F800FC0000F
001FC00000001FC00000001F800000003F800000003F800000003F800000007F80000000
7F000000007F01FE00007F07FF8000FF0E03E000FF1C01F000FF3800FC00FF70007E00FF
60003E00FFE0003F00FFC0001F80FFC0001FC0FF80001FC0FF80001FE0FF80000FE0FF80
000FE0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF07F0000
0FF07F00000FF07F00000FF07F00000FF07F00000FF03F80000FF03F80000FE03F80000F
E01F80000FE01F80001FC01FC0001FC00FC0001F800FC0003F8007E0003F0003F0007E00
01F800FC0000FC01F800007E07F000003FFFE000000FFF80000003FC0000243F7CBC2D>
54 D<FFFFFFFFFFFFFFE0FFFFFFFFFFFFFFE00000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000FFFFFFFFFFFFFFE0FFFFFFFFFFFFFFE03B147BA046>61 D<FFFFFFFFFC000000FF
FFFFFFFF800000FFFFFFFFFFE0000000FFC0001FF80000007F800003FE0000007F800000
FF0000007F8000003F8000007F8000001FC000007F8000000FE000007F80000007F00000
7F80000003F800007F80000001FC00007F80000001FC00007F80000000FE00007F800000
00FF00007F800000007F00007F800000007F80007F800000003F80007F800000003FC000
7F800000003FC0007F800000003FC0007F800000003FE0007F800000001FE0007F800000
001FE0007F800000001FE0007F800000001FE0007F800000001FF0007F800000001FF000
7F800000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F800000
001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F800000001FF000
7F800000001FE0007F800000001FE0007F800000001FE0007F800000001FE0007F800000
003FE0007F800000003FC0007F800000003FC0007F800000003F80007F800000007F8000
7F800000007F80007F800000007F00007F80000000FE00007F80000000FE00007F800000
01FC00007F80000003F800007F80000007F800007F8000000FF000007F8000001FE00000
7F8000003FC000007F800000FF0000007F800003FE000000FFC0001FF80000FFFFFFFFFF
F00000FFFFFFFFFF800000FFFFFFFFFC0000003C3E7DBD45>68 D<FFFFFFFFFFFFC0FFFF
FFFFFFFFC0FFFFFFFFFFFFC000FFC00001FFC0007F8000001FC0007F8000000FE0007F80
000003E0007F80000003E0007F80000001E0007F80000000E0007F80000000E0007F8000
0000E0007F8000000060007F8000000060007F8000000060007F8000000060007F800000
0030007F8000300030007F8000300030007F8000300030007F8000300030007F80003000
00007F8000300000007F8000700000007F8000700000007F8000F00000007F8001F00000
007F8007F00000007FFFFFF00000007FFFFFF00000007FFFFFF00000007F8007F0000000
7F8001F00000007F8000F00000007F8000700000007F8000700000007F8000300000007F
8000300000007F8000300006007F8000300006007F8000300006007F800030000C007F80
0000000C007F800000000C007F800000000C007F800000000C007F800000001C007F8000
000018007F8000000018007F8000000038007F8000000038007F8000000078007F800000
0078007F80000000F0007F80000001F0007F80000003F0007F80000007F0007F8000001F
F000FFC00001FFF0FFFFFFFFFFFFE0FFFFFFFFFFFFE0FFFFFFFFFFFFE0373E7DBD3D>I<
FFFFFFC01FFFFFF8FFFFFFC01FFFFFF8FFFFFFC01FFFFFF800FFC000001FF800007F8000
000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000
007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000
000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000
007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000
000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000
007F8000000FF000007FFFFFFFFFF000007FFFFFFFFFF000007FFFFFFFFFF000007F8000
000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000
007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000
000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000
007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000
000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000
007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF00000FFC000
001FF800FFFFFFC01FFFFFF8FFFFFFC01FFFFFF8FFFFFFC01FFFFFF83D3E7DBD44>72
D<FFFFFFF00000FFFFFFF00000FFFFFFF0000000FFE0000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000000007F80000000007F80000000007F800000
00007F80000000007F80000000007F80000003007F80000003007F80000003007F800000
03007F80000003007F80000007007F80000006007F80000006007F80000006007F800000
06007F8000000E007F8000000E007F8000000E007F8000001E007F8000001E007F800000
3E007F8000007E007F800000FE007F800001FC007F800007FC00FFC0003FFCFFFFFFFFFF
FCFFFFFFFFFFFCFFFFFFFFFFFC303E7DBD38>76 D<FFFF8000007FFFF8FFFFC000007FFF
F8FFFFE000007FFFF8007FE0000003FF00007FF0000000FC00006FF80000007800006FFC
00000030000067FC00000030000063FE00000030000063FF00000030000061FF00000030
000060FF800000300000607FC00000300000607FC00000300000603FE00000300000601F
F00000300000601FF00000300000600FF800003000006007FC00003000006007FC000030
00006003FE00003000006001FF00003000006001FF00003000006000FF80003000006000
7FC00030000060007FE00030000060003FE00030000060001FF00030000060001FF80030
000060000FF800300000600007FC00300000600007FE00300000600003FE003000006000
01FF00300000600000FF80300000600000FF803000006000007FC03000006000003FE030
00006000003FE03000006000001FF03000006000000FF83000006000000FF83000006000
0007FC30000060000003FE30000060000003FE30000060000001FF30000060000000FFB0
000060000000FFF00000600000007FF00000600000003FF00000600000003FF000006000
00001FF00000600000000FF000006000000007F000006000000007F000006000000003F0
0000F000000001F00001F800000001F00007FE00000000F000FFFFF00000007000FFFFF0
0000007000FFFFF000000030003D3E7DBD44>78 D<000000FFE0000000000007FFFC0000
0000003FC07F8000000000FE000FE000000001F80003F000000007E00000FC0000000FC0
00007E0000001F8000003F0000003F0000001F8000007E0000000FC00000FE0000000FE0
0001FC00000007F00003F800000003F80003F800000003F80007F000000001FC0007F000
000001FC000FE000000000FE001FE000000000FF001FE000000000FF001FC0000000007F
003FC0000000007F803FC0000000007F803FC0000000007F807FC0000000007FC07F8000
0000003FC07F80000000003FC07F80000000003FC0FF80000000003FE0FF80000000003F
E0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF8000
0000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003F
E0FF80000000003FE07F80000000003FC07FC0000000007FC07FC0000000007FC07FC000
0000007FC07FC0000000007FC03FC0000000007F803FE000000000FF801FE000000000FF
001FE000000000FF001FE000000000FF000FF000000001FE000FF000000001FE0007F800
000003FC0003F800000003F80003FC00000007F80001FC00000007F00000FE0000000FE0
00007F0000001FC000003F8000003F8000001F8000003F0000000FE00000FE00000007F0
0001FC00000001F80003F000000000FE000FE0000000003FC07F800000000007FFFC0000
00000000FFE00000003B427BBF46>I<FFFFFFFFF00000FFFFFFFFFF0000FFFFFFFFFFC0
0000FFC0003FF000007F800007F800007F800001FE00007F800000FF00007F8000007F00
007F8000007F80007F8000003FC0007F8000003FC0007F8000001FE0007F8000001FE000
7F8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F
8000001FF0007F8000001FF0007F8000001FF0007F8000001FE0007F8000001FE0007F80
00003FC0007F8000003FC0007F8000007F80007F8000007F00007F800000FE00007F8000
03FC00007F800007F800007F80003FE000007FFFFFFF8000007FFFFFFC0000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F8000000000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
8000000000007F8000000000007F8000000000007F800000000000FFC000000000FFFFFF
C0000000FFFFFFC0000000FFFFFFC0000000343E7DBD3D>I<0007FC0018003FFF803800
FFFFE03801FC03F87803F0007C7807C0001EF80F80000FF81F000007F83F000003F83E00
0001F87E000000F87E000000F87C00000078FC00000078FC00000078FC00000038FC0000
0038FC00000038FE00000018FE00000018FF00000018FF000000187F800000007FC00000
007FE00000003FF80000003FFF0000001FFFF000000FFFFF00000FFFFFF00007FFFFFC00
01FFFFFE0000FFFFFF80003FFFFFC00007FFFFE000007FFFE0000007FFF00000007FF800
00001FF80000000FFC00000007FC00000003FC00000001FE00000001FEC0000000FEC000
0000FEC0000000FEC00000007EC00000007EE00000007EE00000007EE00000007EE00000
007CF00000007CF0000000FCF8000000F8FC000001F8FE000001F0FF000003F0FF800007
E0FBE0000FC0F1F8001F80F07F007F00E01FFFFC00E007FFF000C0007FC00027427BBF32
>83 D<001FF0000000FFFC000003E03F00000F000FC0001C0007E0001F0003F0003F8001
F8003FC000FC003FC000FC003FC000FC003FC0007E001F80007E000F00007E000000007E
000000007E000000007E000000007E0000001FFE000003FFFE00001FF87E00007F807E00
01FC007E0007F0007E000FE0007E001FC0007E003F80007E007F80007E007F00007E007F
00007E03FE00007E03FE00007E03FE00007E03FE0000FE03FE0000FE03FE0001FE037F00
01BE037F0003BE033F80071F061FC00E1F8E0FF03C0FFC03FFF007F8003FC003E0282A7C
A82D>97 D<01F800000000FFF800000000FFF800000000FFF80000000007F80000000003
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001
F807F8000001F81FFF000001F8780FC00001F9E003F00001FB8001F80001FF0000FC0001
FE00007E0001FC00003F0001FC00001F8001F800001F8001F800001FC001F800000FC001
F800000FE001F800000FE001F8000007E001F8000007F001F8000007F001F8000007F001
F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001
F8000007F001F8000007E001F800000FE001F800000FE001F800000FE001F800000FC001
F800001FC001F800001F8001FC00003F0001FE00003F0001F600007E0001F70000FC0001
E38001F80001C1C003E00001C0F81F800001803FFE0000000007F000002C407EBE32>I<
0001FF0000000FFFE000003F00F800007C001E0001F800070003F0001F0007E0003F800F
C0007F800FC0007F801F80007F801F80007F803F00003F003F00001E007F000000007F00
0000007E00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0000
0000FE00000000FE00000000FE00000000FE00000000FE000000007F000000007F000000
007F000000003F000000C03F800000C01F800001C01FC00001800FC000038007E0000700
03F000060001F8001E0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>
I<00000001F800000000FFF800000000FFF800000000FFF80000000007F80000000003F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F8000000FF01F8
000007FFC1F800001F80F1F800007C0039F80001F8001DF80003F0000FF80007E00007F8
000FC00003F8000FC00003F8001F800001F8003F800001F8003F000001F8007F000001F8
007F000001F8007F000001F8007E000001F800FE000001F800FE000001F800FE000001F8
00FE000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE000001F8
00FE000001F8007E000001F8007F000001F8007F000001F8003F000001F8003F800001F8
001F800003F8001F800003F8000FC00007F80007E0000FF80003F0000DFC0001F8003DFE
0000FC0071FFF0003F01E1FFF0000FFF81FFF00001FE01F8002C407DBE32>I<0003FC00
00001FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E000FC0003F00
1F80001F001F80001F803F00001F803F00000F807F00000F807F00000FC07E00000FC07E
00000FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE00000000FE00
000000FE00000000FE00000000FE000000007E000000007F000000007F000000007F0000
00003F000000C03F800000C01F800001C00FC00001800FC000038007E000070003F0000E
0001F8001C0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>I<00001F
C00000FFF00003F0380007C0FC000F81FE001F81FE003F01FE003E01FE007E01FE007E00
FC00FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC0000FFFFFF00FFFFFF00FFFFFF
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000001FE00007FFFFE007FFFFE007FFFFE
001F407FBF1C>I<000000007E000003FC01FF00000FFF078780003E07CE0F8000FC03FC
0F8001F801F80F8003F000FC070003E0007C000007E0007E000007E0007E00000FC0003F
00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F
00000FC0003F000007E0007E000007E0007E000003E0007C000003F000FC000001F801F8
000001FC03F0000001BE07C00000038FFF0000000303FC00000007000000000007000000
000007000000000007000000000007800000000007800000000007C00000000003E00000
000003FFFFF0000001FFFFFE000001FFFFFF8000007FFFFFE00001FFFFFFF80007C0001F
F8001F800003FC003F000000FE003E0000007E007C0000003E007C0000003F00F8000000
1F00F80000001F00F80000001F00F80000001F00F80000001F00FC0000003F007C000000
3E007E0000007E003F000000FC001F800001F8000FC00003F00003F0000FC00000FE007F
0000003FFFFC00000003FFC00000293D7EA82D>I<01F800000000FFF800000000FFF800
000000FFF80000000007F80000000003F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F803FC000001F80FFF800001F83C0FC00001F8F0
03E00001F9C003F00001FB8001F80001FB0001F80001FF0000FC0001FE0000FC0001FE00
00FC0001FC0000FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F800
00FC0001F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF0
7FFFF82D3F7EBE32>I<01C00007F0000FF8000FF8000FF8000FF8000FF80007F00001C0
000000000000000000000000000000000000000000000000000000000000000000000000
0001F8007FF8007FF8007FF80007F80003F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0003FC00FFFFE0FFFFE0FFFFE0133D7EBC19>I<0000700001FC0003FE0003FE0003FE00
03FE0003FE0001FC00007000000000000000000000000000000000000000000000000000
00000000000000000000000000FE003FFE003FFE003FFE0001FE0000FE00007E00007E00
007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00
007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00
007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00
007E00007E00007E00007E3C007E7E007CFF00FCFF00FCFF00F8FF01F8FE01F07803E03E
07C00FFF0001FC00175084BC1C>I<01F800FFF800FFF800FFF80007F80003F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80003FC00FFFFF0FFFFF0FFFFF0143F7EBE19>108
D<01F803FC0001FE0000FFF80FFF8007FFC000FFF83C0FC01E07E000FFF8F003E07801F0
0007F9C003F0E001F80003FB8001F9C000FC0001FB0001F98000FC0001FF0000FF80007E
0001FE0000FF00007E0001FE0000FF00007E0001FC0000FE00007E0001FC0000FE00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0003FC0001FE0000FF00FFFFF07FFFF83FFFFCFFFFF07FFFF83FFFFCFFFFF07FFFF83FFF
FC46287EA74B>I<01F803FC0000FFF80FFF8000FFF83C0FC000FFF8F003E00007F9C003
F00003FB8001F80001FB0001F80001FF0000FC0001FE0000FC0001FE0000FC0001FC0000
FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D287EA7
32>I<0001FE0000000FFFC000003F03F000007C00F80001F0003E0003E0001F0007C000
0F8007C0000F800F800007C01F800007E01F000003E03F000003F03F000003F07E000001
F87E000001F87E000001F87E000001F8FE000001FCFE000001FCFE000001FCFE000001FC
FE000001FCFE000001FCFE000001FCFE000001FCFE000001FC7E000001F87E000001F87E
000001F87F000003F83F000003F03F000003F01F800007E00F800007C00FC0000FC007C0
000F8003E0001F0001F0003E0000FC00FC00003F03F000000FFFC0000001FE0000262A7D
A82D>I<01F807F80000FFF81FFF0000FFF8780FC000FFF9E003F00003FB8001F80001FF
0000FC0001FE00007E0001FC00007F0001FC00003F8001F800001F8001F800001FC001F8
00001FC001F800000FE001F800000FE001F800000FE001F800000FF001F8000007F001F8
000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8
000007F001F8000007F001F800000FE001F800000FE001F800000FE001F800000FE001F8
00001FC001F800001FC001F800003F8001FC00003F0001FE00007F0001FE0000FE0001FF
0001FC0001FB8003F80001F9C007E00001F8F81F800001F83FFE000001F807F0000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000003FC00000000FFFFF0000000FFFFF0000000FFFFF00000002C3A7EA732>I<00
00FF000C000007FFC01C00001F80F01C00007E00381C0000FC001C3C0003F8000E3C0007
F000077C0007E000037C000FC00003FC001FC00001FC003F800001FC003F800000FC007F
000000FC007F000000FC007F000000FC007F000000FC00FE000000FC00FE000000FC00FE
000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE
000000FC00FF000000FC007F000000FC007F000000FC007F000000FC003F800000FC003F
800001FC001FC00001FC000FC00003FC000FE00003FC0007E00007FC0003F0000EFC0001
F8001CFC00007E0078FC00003F01E0FC00000FFFC0FC000001FE00FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000001FE000000007FFFF80000007FFFF80000007FFFF82D3A7DA730>I<03F00FC0FFF0
3FF0FFF0F0F8FFF1C3FC07F183FC03F383FC01F703FC01F603FC01F601F801FE006001FC
000001FC000001FC000001FC000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000003FC0000FFFF
F800FFFFF800FFFFF8001E287EA723>I<007FC06003FFF8E007C03DE01E000FE03C0003
E0780001E0780001E0700000E0F00000E0F0000060F0000060F8000060F8000060FC0000
60FF0000007FC000007FFE00003FFFE0001FFFFC0007FFFE0003FFFF80007FFFC00007FF
E000003FE000000FF0C00003F0C00001F8C00000F8E00000F8E0000078E0000078F00000
78F0000078F8000078F80000F0FC0000F0FC0001E0FE0001C0F7800780F1E01F00E0FFFC
00C01FE0001D2A7DA824>I<001800000018000000180000001800000018000000180000
00380000003800000038000000380000007800000078000000F8000000F8000001F80000
03F8000007F800001FFFFFC0FFFFFFC0FFFFFFC001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8006001F80060
01F8006001F8006001F8006001F8006001F8006001F8006001F8006000FC00E000FC00C0
00FC00C0007E01C0003F0380001F87000007FE000001F8001B397EB723>I<01F80000FC
00FFF8007FFC00FFF8007FFC00FFF8007FFC0007F80003FC0003F80001FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80001FC0001F80001FC
0001F80001FC0001F80003FC0000F80003FC0000FC0007FC0000FC000EFE00007C001CFF
00003E0038FFF8001F80F0FFF80007FFE0FFF80000FF00FC002D297EA732>I<FFFFC007
FFE0FFFFC007FFE0FFFFC007FFE007FC0001FF0003F800007C0003F80000780001F80000
700001FC0000700000FC0000600000FC00006000007E0000C000007E0000C000007F0001
C000003F00018000003F00018000001F80030000001F80030000001FC0070000000FC006
0000000FC00600000007E00C00000007E00C00000007F01C00000003F01800000003F018
00000001F83000000001F83000000001FC7000000000FC6000000000FC60000000007EC0
000000007EC0000000007FC0000000003F80000000003F80000000001F00000000001F00
000000001F00000000000E00000000000E0000002B287EA630>I<FFFF87FFFC03FFF0FF
FF87FFFC03FFF0FFFF87FFFC03FFF00FFC003FE0007FC007F0001FC0003F0003F0000F80
001E0003F0000FC0001C0001F8000FC0001C0001F80007C000180001F80007E000180000
FC000FE000300000FC000FE000300000FE000FF0007000007E0019F0006000007E0019F0
006000007F0019F800E000003F0030F800C000003F0030F800C000003F8030FC01C00000
1F80607C018000001F80607C018000000FC0E07E030000000FC0C03E030000000FC0C03E
0300000007E1C03F0600000007E1801F0600000007E1801F8600000003F3801F8C000000
03F3000F8C00000003F3000FCC00000001FE0007D800000001FE0007D800000001FE0007
F800000000FC0003F000000000FC0003F000000000FC0003F000000000780001E0000000
00780001E000000000780001E000000000300000C000003C287EA641>I<FFFFC007FFE0
FFFFC007FFE0FFFFC007FFE007FC0001FF0003F800007C0001F80000780001F800007000
01FC0000700000FC0000600000FE00006000007E0000C000007E0000C000003F00018000
003F00018000003F80038000001F80030000001F80030000000FC0060000000FC0060000
000FE00E00000007E00C00000007E00C00000003F01800000003F01800000003F8380000
0001F83000000001FC3000000000FC6000000000FC60000000007EC0000000007EC00000
00007FC0000000003F80000000003F80000000001F00000000001F00000000001F000000
00000E00000000000E00000000000C00000000000C00000000001C000000000018000000
0000180000000000300000000000300000000000600000003800600000007C00E0000000
FE00C0000000FE01C0000000FE0180000000FE03000000007C0700000000700E00000000
383C000000001FF80000000007E0000000002B3A7EA630>121 D<1FFFFFFF801FFFFFFF
801FE0007F801F00007F001E0000FE001C0001FC001C0003FC00180003F800380007F000
38000FE00030001FE00030001FC00030003F800030007F000030007F00000000FE000000
01FC00000003FC00000003F800000007F00000000FE00000001FE00000001FC00180003F
800180007F000180007F00018000FE00018001FC00018003FC00038003F800038007F000
03000FE00003001FE00007001FC0000F003F80000F007F00003F00FF0001FF00FFFFFFFF
00FFFFFFFF0021277EA628>I<0000038000000007C00000000FC00000001FC00000003F
C00000007F80000000FF00000001FC00000003F000000007E00000000F800000001E0000
00001C0000000010000000000000000000000000000000000000001FF0000000FFFC0000
03E03F00000F000FC0001C0007E0001F0003F0003F8001F8003FC000FC003FC000FC003F
C000FC003FC0007E001F80007E000F00007E000000007E000000007E000000007E000000
007E0000001FFE000003FFFE00001FF87E00007F807E0001FC007E0007F0007E000FE000
7E001FC0007E003F80007E007F80007E007F00007E007F00007E03FE00007E03FE00007E
03FE00007E03FE0000FE03FE0000FE03FE0001FE037F0001BE037F0003BE033F80071F06
1FC00E1F8E0FF03C0FFC03FFF007F8003FC003E0283B7CB92D>225
D<00000E000000001F000000003F000000007F00000000FF00000001FE00000003FC0000
0007F00000000FC00000001F800000003E00000000780000000070000000004000000000
00000000000000000000000000000003FC0000001FFF8000007E07E00000F801F00001F0
00F80003E0007C0007C0003E000FC0003F001F80001F001F80001F803F00001F803F0000
0F807F00000F807F00000FC07E00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFF
C0FFFFFFFFC0FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
7E000000007F000000007F000000007F000000003F000000C03F800000C01F800001C00F
C00001800FC000038007E000070003F0000E0001F8001C0000FC003800003F01F000000F
FFC0000001FE0000223B7DB928>233 D<0003F00010000007FC003800000FFF00700000
1FFFC1E000003C1FFFC000007007FF800000E001FF00000040007C000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000001F803FC0000FF
F80FFF8000FFF83C0FC000FFF8F003E00007F9C003F00003FB8001F80001FB0001F80001
FF0000FC0001FE0000FC0001FE0000FC0001FC0000FC0001FC0000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0003FC0001FE00FF
FFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D3C7EBB32>241 D<000001C000000003E000
000007E00000000FE00000001FE00000003FC00000007F80000000FE00000001F8000000
03F000000007C00000000F000000000E0000000008000000000000000000000000000000
0000000001FE0000000FFFC000003F03F000007C00F80001F0003E0003E0001F0007C000
0F8007C0000F800F800007C01F800007E01F000003E03F000003F03F000003F07E000001
F87E000001F87E000001F87E000001F8FE000001FCFE000001FCFE000001FCFE000001FC
FE000001FCFE000001FCFE000001FCFE000001FCFE000001FC7E000001F87E000001F87E
000001F87F000003F83F000003F03F000003F01F800007E00F800007C00FC0000FC007C0
000F8003E0001F0001F0003E0000FC00FC00003F03F000000FFFC0000001FE0000263B7D
B92D>243 D<0000003800000000007C0000000000FC0000000001FC0000000003FC0000
000007F8000000000FF0000000001FC0000000003F00000000007E0000000000F8000000
0001E00000000001C0000000000100000000000000000000000000000000000000000000
00000000000001F80000FC00FFF8007FFC00FFF8007FFC00FFF8007FFC0007F80003FC00
03F80001FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC00
01F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC00
01F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC00
01F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC00
01F80001FC0001F80001FC0001F80001FC0001F80003FC0000F80003FC0000FC0007FC00
00FC000EFE00007C001CFF00003E0038FFF8001F80F0FFF80007FFE0FFF80000FF00FC00
2D3B7EB932>250 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 118 118 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 118 118 a 118 118 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 118
118 a 0 TeXcolorgray 218 -372 a
SDict begin H.S end
 218 -372 a 0 TeXcolorgray
0 TeXcolorgray 218 -372 a
SDict begin H.R end
 218 -372 a 218 -372 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 218 -372
a Black 0 TeXcolorgray Black 0 TeXcolorgray 250 -83 a
Fv(basicst)m(yle=)p Fu(,)44 b(framerule=0pt,fr)o(am)o(e=)o(sin)o(gl)o
(e,)37 b(lineskip=0pt,)h(emptylines=1,)109 30 y(showstringspace)o(s=)o
(fal)o(se)o(,)f(escapechar=)p Ft(\001)p Fu(,)i(language=Python)109
48 y
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 109 48 a 109 48 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 109 48 a 109 48 a
SDict begin H.S end
 109 48 a 109
48 a
SDict begin 14.96008 H.A end
 109 48 a 109 48 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 109 48 a 1202 324 a Fs(Pr\341ctica)32
b(1)685 568 y Fr(Ecuaci\363n)45 b(de)g(tercer)h(grado)931
692 y Fv(26)31 b(de)f(no)m(viem)m(bre)i(de)f(2013)3168
211 y Fq(Inform\341tica)3101 345 y Fp(A\361o)c(2013/2014)3056
480 y(F)-7 b(acultad)27 b(de)h(CC.)3188 589 y(Matem\341ticas)250
881 y Fv(Las)48 b(soluciones)h(de)f(las)g(ecuaciones)h(p)s
(olin\363micas)g(han)g(preo)s(cupado)g(a)f(gran)h(parte)g(de)f(los)109
1006 y(matem\341ticos.)29 b(Las)g(m\341s)f(sencillas)g(son)g(las)g(de)h
(grado)g Fo(1)p Fv(.)f(Las)h(de)f(grado)h Fo(2)f Fv(y)m(a)h(tienen)g
(cierta)g(compli-)109 1130 y(caci\363n)24 b(que)f(seguro)h(te)g
(ense\361aron)g(a)g(sup)s(erar)f(en)h(el)g(cole.)g(En)g(este)f
(ejercicio)i(nos)e(v)-5 b(amos)23 b(a)h(preo)s(cupar)109
1254 y(de)k(las)g(de)h(grado)g Fo(3)p Fv(.)f(Si)h(te)f(in)m(teresa)h
(la)g(historia)f(de)h(las)f(ecuaciones)h(de)g(tercer)g(grado)g(un)f
(buen)h(lugar)109 1378 y(para)i(emp)s(ezar)g(es)p 0 1 0 0
TeXcolorcmyk 780 1398 a
SDict begin H.S end
 780 1398 a 0 1 0 0 TeXcolorcmyk
-20 x Fn(http://en.wikipedia.org/wiki/Cubic_equation)p
0 1 0 0 TeXcolorcmyk 2800 1315 a
SDict begin H.R end
 2800 1315 a 2800 1378
a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<< /Subtype /URI /URI (http://en.wikipedia.org/wiki/Cubic_equation)
>>/Subtype /Link H.B /ANN pdfmark end
 2800 1378 a 0 TeXcolorgray 109 1398 a
SDict begin H.S end
 109 1398 a 109
1398 a
SDict begin 14.96008 H.A end
 109 1398 a 109 1398 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.1) cvn /DEST pdfmark
end
 109 1398 a 223 x Fm(1)112
b(N\372mero)36 b(de)i(soluciones.)109 1768 y Fv(Escrib)s(e)30
b(un)g(programa)i(que)e(calcule)h(el)f(n)m(\372mero)i(de)e(soluciones)h
(reales)f(de)h(una)f(ecuaci\363n)i(de)e(tercer)109 1893
y(grado.)1426 2017 y Fl(ax)1526 1979 y Fk(3)1586 2017
y Fo(+)20 b Fl(bx)1768 1979 y Fk(2)1827 2017 y Fo(+)g
Fl(cx)h Fo(+)f Fl(d)25 b Fo(=)g(0)109 2170 y Fv(Ob)m(viamen)m(te,)32
b(los)e(datos)g(de)g(en)m(trada)h(ser\341n)f(los)g(co)s(e\034cien)m
(tes)h Fl(a;)15 b(b;)g(c)30 b Fv(y)g Fl(d)p Fv(.)2752
2170 y
SDict begin H.S end
 2752 2170 a 2752 2170 a
SDict begin 14.96008 H.A end
 2752 2170 a 2752 2170
a
SDict begin [/View [/XYZ H.V]/Dest (ue@numpista.1) cvn /DEST pdfmark
end
 2752 2170 a Fv(\(P)m(ara)i(m\341s)d(informaci\363n)109
2294 y(cons\372ltese)i(la)f(pista)h(1.\))109 2317 y
SDict begin H.S end
 109
2317 a 109 2317 a
SDict begin 14.96008 H.A end
 109 2317 a 109 2317 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numsec.2) cvn /DEST pdfmark
end
 109 2317 a 220
x Fm(2)112 b(C\341lculo)36 b(de)i(las)f(soluciones)109
2684 y Fv(Haz)h(un)h(programa)h(que)e(calcule)i(las)e(soluciones)h(de)g
(la)f(ecuaci\363n)i(de)f(tercer)g(grado.)3238 2684 y
SDict begin H.S end

3238 2684 a 3238 2684 a
SDict begin 14.96008 H.A end
 3238 2684 a 3238 2684 a
SDict begin [/View [/XYZ H.V]/Dest (ue@numpista.2) cvn /DEST pdfmark
end
 3238
2684 a Fv(\(P)m(ara)h(m\341s)109 2809 y(informaci\363n)31
b(cons\372ltese)g(la)g(pista)f(2.\))109 3114 y Fj(F)-9
b(ec)m(ha)39 b(l\355mite)f(de)g(en)m(trega:)c Fv(Semana)g(del)g(10)f
(al)h(14)f(de)g(Diciem)m(bre.)j(No)d(olvides)g(concertar)h(una)109
3238 y(cita)c(con)h(el)f(profesor,)g(a)h(tra)m(v)m(\351s)f(de)h(la)f(w)
m(eb)h(de)f(la)h(asignatura,)g(con)g(el)f(ob)5 b(jeto)30
b(de)h(\034jar)f(el)g(momen)m(to)109 3362 y(de)g(la)h(en)m(trega.)1727
3722 y Fi(Pist)-8 b(as)109 3878 y Fh(1.)76 b Fg(Si)26
b(consideramos)g(la)g(funci\363n)g Ff(p)p Fe(\()p Ff(x)p
Fe(\))20 b(=)h Ff(ax)1499 3846 y Fd(3)1550 3878 y Fe(+)c
Ff(bx)1704 3846 y Fd(2)1755 3878 y Fe(+)g Ff(cx)g Fe(+)g
Ff(d)p Fg(,)25 b(se)h(tiene)g(que:)p 0 TeXcolorgray 260
3989 23 23 v 0 TeXcolorgray 336 3995 a(Si)g Ff(a)21 b(>)g
Fe(0)p Fg(,)49 b Fe(l)-9 b(\023)-29 b(\020)q(m)628 4040
y Fc(x)p Fb(!\0001)833 3995 y Ff(p)p Fe(\()p Ff(x)p Fe(\))20
b(=)h Fa(\0001)k Fg(y)50 b Fe(l)-9 b(\023)-29 b(\020)q(m)1305
4040 y Fc(x)p Fb(!1)1462 3995 y Ff(p)p Fe(\()p Ff(x)p
Fe(\))20 b(=)h Fa(1)p Fg(.)p 0 TeXcolorgray 260 4130
V 0 TeXcolorgray 336 4136 a(Si)26 b Ff(a)21 b(<)g Fe(0)p
Fg(,)49 b Fe(l)-9 b(\023)-29 b(\020)q(m)628 4181 y Fc(x)p
Fb(!\0001)833 4136 y Ff(p)p Fe(\()p Ff(x)p Fe(\))20 b(=)h
Fa(1)k Fg(y)50 b Fe(l)-9 b(\023)-29 b(\020)q(m)1246 4181
y Fc(x)p Fb(!1)1402 4136 y Ff(p)p Fe(\()p Ff(x)p Fe(\))20
b(=)h Fa(\0001)p Fg(.)p 0 TeXcolorgray 260 4279 V 0 TeXcolorgray
336 4285 a(La)28 b(funci\363n)f Ff(p)761 4253 y Fb(0)783
4285 y Fe(\()p Ff(x)p Fe(\))c(=)h(3)p Ff(ax)1117 4253
y Fd(2)1170 4285 y Fe(+)18 b(2)p Ff(bx)g Fe(+)f Ff(c)28
b Fg(es)g(p)r(ositiv)l(a)g(en)f(los)h(pun)n(tos)f(en)g(que)f
Ff(p)p Fe(\()p Ff(x)p Fe(\))g Fg(es)i(crecien)n(te)g(y)e(negativ)l(a)i
(en)336 4386 y(los)f(que)d(es)i(decrecien)n(te.)250 4503
y(Calculando)j(\(si)g(existen\))f(las)i(ra\355ces)f(reales)h(de)e(la)h
(ecuaci\363n)g Ff(p)2152 4471 y Fb(0)2174 4503 y Fe(\()p
Ff(x)p Fe(\))c(=)g(0)k Fg(y)f(los)h(v)l(alores)g(que)f(toma)g
Ff(p)p Fe(\()p Ff(x)p Fe(\))f Fg(en)h(esas)109 4603 y(ra\355ces)g(p)r
(o)r(demos)e(tener)h(en)g(cuen)n(ta)f(las)i(consideraciones)h(an)n
(teriores)f(para)f(deducir)f(f\341cilmen)n(te)i(el)f(n)n(\372mero)e(de)
i(ceros)109 4704 y(de)e Ff(p)p Fe(\()p Ff(x)p Fe(\))p
Fg(.)109 4817 y Fh(2.)76 b Fg(P)n(ara)25 b(calcular)h(las)f(soluciones)
h(con)n(viene)e(simpli\034car)g(lo)h(m\341s)f(p)r(osible)h(la)g
(ecuaci\363n,)g(primero)f(p)r(o)r(demos)g(sup)r(oner)109
4918 y(que)e(la)i(ecuaci\363n)f(es)h(de)f(la)g(forma)h
Ff(x)1172 4886 y Fd(3)1218 4918 y Fe(+)12 b Ff(ax)1375
4886 y Fd(2)1420 4918 y Fe(+)g Ff(bx)g Fe(+)g Ff(c)p
Fg(.)22 b(A)n(dem\341s)g(p)r(o)r(demos)h(realizar)h(las)g(siguien)n
(tes)g(transformaciones:)p 0 TeXcolorgray 260 5029 V
0 TeXcolorgray 336 5035 a(Si)i(hacemos)f Ff(t)c Fe(=)g
Ff(x)c Fa(\000)1011 5004 y Fc(a)p 1011 5018 34 4 v 1013
5060 a Fd(3)1080 5035 y Fg(la)26 b(ecuaci\363n)g(resulta)h
Ff(t)1757 5003 y Fd(3)1808 5035 y Fe(+)17 b Ff(pt)f Fe(+)h
Ff(q)24 b Fe(=)d(0)26 b Fg(con:)1492 5214 y Ff(p)21 b
Fe(=)g Ff(b)c Fa(\000)1770 5166 y Ff(a)1811 5134 y Fd(2)p
1770 5197 76 4 v 1789 5265 a Fe(3)1855 5214 y Ff(;)d(q)24
b Fe(=)d Ff(c)c Fe(+)2166 5166 y(2)p Ff(a)2245 5134 y
Fd(3)2297 5166 y Fa(\000)f Fe(9)p Ff(ab)p 2166 5197 320
4 v 2287 5265 a Fe(27)p 0 TeXcolorgray 260 5372 23 23
v 0 TeXcolorgray 336 5378 a Fg(Si)31 b(ahora)g(hacemos)g
Ff(t)f Fe(=)g Ff(y)23 b Fa(\000)1277 5345 y Fc(p)p 1261
5361 64 4 v 1261 5404 a Fd(3)p Fc(y)1335 5378 y Fg(,)31
b(m)n(ultiplicamos)f(am)n(b)r(os)h(miem)n(bros)e(p)r(or)i
Ff(y)2668 5346 y Fd(3)2733 5378 y Fg(y)g(simpli\034camos)f(\(m)n(uc)n
(ho\))f(la)336 5479 y(ecuaci\363n)d(resulta)h(ser)f(de)f(grado)i
Fe(2)f Fg(en)f Ff(y)1543 5447 y Fd(3)1577 5479 y Fg(:)1688
5647 y Ff(y)1729 5611 y Fd(6)1780 5647 y Fe(+)17 b Ff(q)s(y)1935
5611 y Fd(3)1986 5647 y Fa(\000)2074 5599 y Ff(p)2113
5567 y Fd(3)p 2073 5630 77 4 v 2073 5698 a Fe(27)2181
5647 y(=)k(0)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

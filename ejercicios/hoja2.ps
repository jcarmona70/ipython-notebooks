%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: hoja2.dvi
%%CreationDate: Tue Nov 26 13:29:05 2013
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMMI10 CMSY10 CMR8 CMR10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o hoja2.ps hoja2.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.11.26:1329
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 90 2009-01-30 10:58:51Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.02, 2009/01/30.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
end
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  /next ED 			% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge { 
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  GetEdgeA GetEdgeB GetArmA GetArmB mark 
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  GetEdgeA GetArmA 
  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
  GetEdgeB 
  mark 
  xB1 yB1 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E0B5622DF6FC4BF52147208D9A91EB49B03BB40DE7F8FBFB566F251942C8FFB1
1DFA50465919400C21CE4724D12E4EB47AA5F392BA927329DBCA28A78FC1DF2E
6FF27F4E4E3F8971D7BCB5F3FBF8F30C214A26E5E32E0E8CBC71BF20AE573BBB
163DD66E89F2C4E2B1A1532AE81C060146F755A1ABA3F1365FEA30B403DE7B22
76F43EDB1A2230934225C290D98237E3E19012E75EB1297250A477781904F794
39BEC3C61A62874766DC1356C9D659D4ACDC62D0745195F53282A0F0627B5CE3
F6D33CCDE56F883A549EB0A6EC0DB565832A6720B0735E076D0487F56EBB1C20
24A69292599D3F1FC2C8FC899392922FCAB4BF6CC3CA6F57EF6C6CDF71C1277C
B8F2841483AFDDED298F812F9B9D2C84BDA25405EB37F30EB9AFB70FCCDADB9B
B35A5AA332BBC01217DD58E5FA0190F77925805A0D8627BAD54C1F79F5C4CCC9
69D3D2079050666A81BC36E69C47C85AAB211586CAEC1E43FC55A807749FC8F9
BCDB256906B11608FD2D9677F638317977FB8696AA7F17F69D35719EC29D29E4
6A838B2EE170127A62F3FFB0B8463C991082FEC2C649428E57D1E024A93A7A48
FAEF7861D7893A93E41F2CF0A298E2CE1EE6F4E7A2234AACA8386FA97F03F057
6BA51505E86FEE41BBD172CCE6CD2B605DB1DE83B5F8E96D57018A2AFF20BEA1
CD6D03703E081260E06C5E55E63040AF808D8630ECCBE35DAE82B530F710D029
2E3033229161BC45D2CFE9AEC54AFE285C29ADCDFC5AC180CDA53CCCDBF45C37
E9C890D8F3CB505A6B6C5DD7EBA1E553E459F464038A1D81CC10BA0866C7E090
1C258871B5172AAA539A287295ACB7148A129875C160CC6BACF873B3BB600606
6165D7145FE6CB0E79AF513FF589CBF72C2549B860942467
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DF4743FAE6668B61F72C8700992755522AB11C765981A9BEE0D040039D
6C2D64ABED527082C97CA606127AF5C0C98647BF46AB8149F215BB0F1087E62E
740D8676CE8A486096DFA164A37E97EE630B2A16FF4BCF31B9A630D93C278ED7
6D6003D463C33B8AB5E8BFB9777F0B3D3243D650AC5641B91082A85801F907A1
54CDCD22CDDFA0F5E255F1F7E04A621013F0F3841D824897E67DFC2F5AE51C4D
36411D26424AA9702018C26AE65120CE396C9B001DBE259A3638455C3F4949F2
BB23F04E53097AC814F9DD04F0F26BE3F8C2118311C916D2FD21628BBC018A31
021BC222B518F904ABE96333EB8A033D13E80033452B2F7C8F400CE65F0EAB91
81EF6447CEE4BB024AC35075D24EF62ED3E393401BA04C01CA115E0231AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC434AFB2D0C28359EE36A63B5584392FCCAAD696E61EC2B757A
1DC3F0AD50200A15715177C4CE424AF4E484131D7D41397CA16F94ECDAEE6F50
4993ACB7DFDCE53402EA5735B39DD765146BF85A6457A2AEC22A9DD1C21C71B6
250216362D339354391F795EAB160C08136C08B4E4D9B0DD864CF7DDAC5CB67C
C39406C8F712B2D5A78D4A1D0EAF1AAEF7173842216339B40BF0356970D895DF
1F4BB3A9E77D3B4C08F061113877E6DF96CAB4404F3AA0D2CD799A1E1ABEBD08
153F22FE69F59DE85BBBEAD7A81DE32825848FCF97B7D1CB5D8F121EC7175CCC
937A0F9E49F8B27EEF8E1087FF370606241EC1977967D9988DE1196E1195BEC8
A5E1724C1F8C43F22DF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /triangleright put
dup 59 /comma put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 90 /Z put
dup 110 /n put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D9154A639FAC92F771
75C01085B97FFB2E1A79FBA5107117665961BE9FAD2B57A35AA33B5B84599AE5
741EFCAA965AA7F3ACA7182CC4E0E1A4D65A57033334FAF8CB61DD5E0BF5E1FB
DEDF3F54628CD156A14D3E0ACE57881DD92A0D2F5981B5BB99A95227E01604DD
7BCDC9233E943F78897AABFFB9CE3627213E6221DB341B0F63900652D3B8F1FF
87E5935F5FFD756D39BD00A471CC9FFF5F69D6B1AB8AEA97419F877141FE92A7
5A72C8B04EC8E28D600AAA1E3D7C6B29B548CC7E43BA9AF1DC1A701FA9F85824
1D668613AFB879577546D22861B6507ACCEFD3D25694CB0F9695727F53F641ED
D7CEA205417CD8E28223620A0EE60A2033A817B24E4883C4BA348E4482C7140C
C128F24D36CB1239BED1B526FDF7CD484D767B3D3A02C6173FFA94E81732439F
BDF4456AE49E9C44C99972218167FCB15D8E2251CB5BB64CF3F87FC9183239F9
CA4F168E966A7D856FF29EB4C0DD3168927E9C8D0949D30C2F1F95FB746F7565
FF748F485D8C8F26A13A19E182E2ADBE6A0BF38424281EA448A86281323E72C4
150E349391BB287E171D06EEDE5FD62BF28A0A0E7AF9D677A17B3477BFC09DC8
701FFE315B06768657E213B270DC563C288676BF711BFC7DCDFD53F3C40EF09B
EBF95232E105C67A7B670979A48DB64439CF119A03A5A58A1470F53DBB69F9BD
08E6CCA97353253E1864DD3D86D23C752413B572983EAE83318B32C62B5C7B6F
C1BF262B0AE7F221DA82E5C61AE28573F4625B28DA400C5F9C2F4BFF0200A20B
B2C04832DFD7514EDB02B3F9D3E43C4BC02D07A0FA4027A0741045D951570A3A
34810C780C0E43857BA2F88320312A9F24369D8D6C70C2C5BB4E82DE9129750E
F1506948FA9703642F4117905360316EC68532C3FB6193B2BE9EA57E9ABCB8A1
2EC7C20FC6750A6CC96A8FFAB40ADB9D000A563786AAB8C0E69898135B4AAF32
CA94D6666A31290CBDB35586E33E3C3E7CB77188821606263ADCD481EE69CE6D
9C66ED01B8553417D75A43531A678C5E370BCE40EFEBAE9B65E230B1EE270953
260207E793719309E1BA0AB01ABFFF4F86FF9CFEC0D78EC549D0AA062312FB39
CE294B90C95F22E89620C46A11F45216DA0A1366DE06D8467AF0C6F6BB311F15
039D8AE6CFB1DF14D42903C88F3375E79B6093995B9731A4ACC72CD3C388EFA2
D30CEE2CD61278032F35B5694E801D7120AEC0DA35BBCE3D56A7F88BBF6BEFBE
7875071214109D653820FB3EEA993AC840CF7B06D75E2E02000F053CEF8835B1
880FEB13D66057E18A0CFCB5F791F8CDAC816C8626DE807B3FBCEE81C6E63A28
12197537D82598016A7C3165284063524116DAE2EAE4B0F2AD8122512CB701A9
837FDF31C048611D5294B56DBCFCEF42ADA56227F25FDECAA3CE3CFEC1B12F40
1A366A11BD273097AE797E2E42B0BF27D10D06BE3F3BFD3422AE6400022AFF94
E8C2C0C39627B5F98CE4446BD663E6EBF841AC1F60D78689D95961E3A06F8C1E
CF5C8A2C1278044DED4991124B22A8F252E421C3048B27D5A8FFADF0C3CE501A
76AD0DB835B43B6FD2AE9559DFBBFC80E8DC4C1E1F66C81B02D7A75F42CD6562
4C90D9429AA2A4703381652E551DA02B534885A9BB96618B7855ABD0415567CE
9FBAE3697764359CA96850C4A2BB8CF6A0D67EDB00D7F6160F56C66575F9DF3F
4F0CA1D7A239673F8A933F8CC1DE48D44702228501ABD0BFB01ABC666C9BD439
132B8E0C2C5796AC695BFB9B28043F8378A19CF76F3FBFB3E4D8D7258D018F94
E082E176233E69494C684DE372A0BFD949F3E5FA628407B29DAA72E59DF763B7
ED8E0B3CD59E4A0AA472EE113C2835864079FCAC04C6FD337D61C48A0F915F44
A82AC4631DE66EB92435862BC08AAA8FFF132C13E73A5174FB95F2A32D33B439
7EBFF26C7B27C905051FBEFB07E1DA4FAEEC1578E7550D3EE4C11F5CFD7FFADC
7B6BE6B0D75849216E8F943CAFFEFB0256FE60D0AB84E437CA48E1742C385C3A
E76FCC30CDD2F77BF01BE15A2B61E71D8A0D65747B8DC61EFD5FD6D1BE9C9649
CB574F4996DBD9CD77735B0DD691357BE970C8E468F2CFACA664B6BFA66B290B
6DE9AA96A67EE4EDCB9A41B9E2D10B213646BEE490182A800D64532CC866191F
B526FE7BE65872B0FB5D18CC342B86B29FEB3F8D7709374E7A58F9DDB85176BE
30114966C5A1A4A083BC9D0391644EF66647412850208238FC07941535AB46A5
A1A4E473A0B5D03591E6471CC2BAD3B141DA9A1F253AEA657A9373093386BADE
AADD7203DC80471B7858D6A02B7D6FB46E1EFAA2DA56A4D7DCB89CD56F9A928F
A2143263974EE173072077F4F202396A2B2A5F52F912C450887871C2FAAB252F
3C013A9C9E25B4CAD5F2FE525ADC9C89BDB66FA6B6F6B479A85FCFFEF86B820F
CE387103E78D289DDC59978AE924B99ED6D17A8FBDC9164CC0E6E460D0E79480
441EEC1C21D15B47E9D6C8A5F6FD3CACC852FE84F8D10AC4B2FD7605A5085B3C
719CDAAE701DAFBB90A63C8DDA36F859407F532078426A4E9DC993C328D42507
A42C7B8E2B3C0B6B9F75A66F0665BE0174713C721C75E23F7D532B6F509DE4EE
9E43CE666EED54C4BCB4FBD6D4AF55891D871B778919C342A8CDCE7C78795FB4
683EB4466E34627692AEC194E39E916D6790B01F4096AC6EE7A27E375DA00FBF
1AEF77DA3B2828B87426CBE0A7FC5639B3CBFEA541DDB7EB986AE2FF1772FEB1
9341CFF9C71C896542E62E36C18B53B5C72B152C51A0EF55BAC31EA52C1A891E
19B39C9E8D4F898FA50D91F16E319788D0DB2DB78AE8393082860442E225026F
73395CF6BA28E81D160C3080D25984A3A33E496FA24B620338EE98C603DC7212
A0DA011B86C2C9CB29E9EC0B88AE1643E8737D689F51492BB17D2676655E7541
E2AC18E0ED88C8911BE54E1AA440A140049A82278233F6E12B6F7272BC4EAF4F
FEFD19E034590D1F8326FAA1DDECDBF6B5D0EAEB0EE65B19A59B4601EE2C2390
F95E6F8C243D5BB4E793C0398048C7C77FD24C3ED21997691E053FD1B13A8C69
CB7E5C7F488135FD896FC53A0DE15118D2E6F94C3938B346B6B5EE0222EBBA00
30792DCA8ECB13451ACF909A1CC9CC3FA5814F35E6A306DCA40B2B8F7B3B6DBE
3C8F82EAEF9A62CF14460FF4E6CC9A137DBBE232F2A1DA190769018FBA117AD7
FEC9E1909FA735DC0C976AC4DF773CB09A3F76AF32CF06BEFD566B26CF52A602
E507C70B97D762DFFE7BDAB23DAD264843513DFC5EFC1BD2CE8D8BF11C207173
8257F353803A09A7514F41BB6502D58FB96307C9565675D93C9F8D54767E4695
DA52AF34C27D3BEE23F1468631CD2883AB842CBC13E63473C797571918204475
350632A0BF78679A2FC12B66696C013CD5A42122EE8152E731119AC2D48F6BDD
A4AE50F47519CB9933F8AEE550BF1C06F81795891B8EDC94EEC1FF52B91EBA39
6F56BF0C85336F493EB189013EECF340E34ACDD3F551400CED592434DDCA3F72
EE6DDC813AA3EA0985E6D556BEB43D7BE213DBA363FCFFE61770B2B57C2C88D1
0321B38A3CAE751E6B6CBFB9BDD31C6A12B5B539C96AE94DE259E7B0BF61F1A5
17C156CD9BB29355EFBA0333CDAD7F2E59138C10E4444EAE691E029C1B51593A
749C4802676AA65CCA1EFF342CF0BDFED35B401EB1ACDCC655CA051F988F4269
5A481D3C73C8AB83A6BA9EB32D5C3D359E12EA325E56BCCD860B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (hoja2.dvi)
@start /Fa 194[71 12[45 4[71 43[{}3 90.9091 /CMR10 rf
/Fb 205[35 50[{}1 66.4176 /CMR8 rf /Fc 235[71 20[{}1
90.9091 /CMSY10 rf
%DVIPSBitmapFont: Fd ecbx1095 10.95 43
/Fd 43 251 df<07801FE03FF07FF8FFFCFFFCFFFCFFFCFFFCFFFC7FF83FF01FE007800E
0E798D1D>46 D<00000F000000001F000000007F00000001FF0000000FFF000001FFFF00
00FFFFFF0000FFFFFF0000FFF7FF0000FE07FF00000007FF00000007FF00000007FF0000
0007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF000000
07FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007
FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF
00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00
000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF0000
0007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00003F
FFFFFFF83FFFFFFFF83FFFFFFFF83FFFFFFFF8253C79BB34>49 D<0003FF800000003FFF
F8000000FFFFFE000003FFFFFF800007F80FFFC0000FC001FFF0001F8000FFF8003F0000
7FFC007FC0003FFE007FE0003FFE00FFF0001FFF00FFF8001FFF00FFF8001FFF00FFF800
0FFF80FFF8000FFF80FFF8000FFF80FFF8000FFF807FF0000FFF807FF0000FFF801FC000
0FFF800700000FFF800000000FFF000000001FFF000000001FFF000000001FFE00000000
3FFE000000003FFC000000007FF8000000007FF000000000FFE000000001FFC000000001
FF8000000003FF0000000007FE000000000FF8000000001FF0000000001FE0000000003F
80000000007F0000000000FE0000000001F80007800003F00007800007E0000780000FC0
000F00001F80000F00003E00000F00007C00000F0000F800001F0001F000001F0001FFFF
FFFF0003FFFFFFFE0007FFFFFFFE000FFFFFFFFE001FFFFFFFFE003FFFFFFFFE007FFFFF
FFFE00FFFFFFFFFE00FFFFFFFFFC00FFFFFFFFFC00FFFFFFFFFC00293C7BBB34>I<0000
FFE00000000FFFFC0000003FFFFF800000FF01FFE00001F8007FF00003E0003FF80007C0
003FFC000FF0001FFE000FFC001FFE001FFE001FFF001FFE001FFF001FFE001FFF001FFE
001FFF001FFF001FFF001FFE001FFF001FFE001FFF000FFE001FFF0007FC001FFE0003F0
003FFE000000003FFC000000003FFC000000007FF8000000007FF000000000FFE0000000
01FFC000000003FF000000000FFC00000007FFF000000007FFE000000007FFFE00000000
01FF80000000007FE0000000003FF8000000001FFC000000001FFE000000000FFF000000
000FFF8000000007FFC000000007FFC000000007FFC007800007FFE01FE00007FFE07FF8
0007FFE07FF80007FFE0FFFC0007FFE0FFFC0007FFE0FFFC0007FFE0FFFC0007FFE0FFFC
0007FFC0FFFC0007FFC0FFF8000FFFC07FF8000FFF807FF0000FFF003FC0001FFF001FC0
003FFE000FF0007FFC0007FE01FFF00003FFFFFFE00000FFFFFF8000001FFFFC00000001
FFC000002B3D7CBB34>I<00000001F00000000001F00000000003F00000000007F00000
00000FF0000000001FF0000000001FF0000000003FF0000000007FF000000000FFF00000
0000FFF000000001FFF000000003FFF000000007FFF00000000FBFF00000000F3FF00000
001E3FF00000003C3FF00000007C3FF0000000783FF0000000F03FF0000001E03FF00000
03E03FF0000003C03FF0000007803FF000000F003FF000001F003FF000003E003FF00000
3C003FF0000078003FF00000F0003FF00001F0003FF00001E0003FF00003C0003FF00007
80003FF0000F80003FF0001F00003FF0001E00003FF0003C00003FF0007800003FF000F8
00003FF000FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF80000007FF00000
00007FF0000000007FF0000000007FF0000000007FF0000000007FF0000000007FF00000
00007FF0000000007FF0000000007FF0000000007FF0000001FFFFFFF80001FFFFFFF800
01FFFFFFF80001FFFFFFF82D3C7DBB34>I<0E00000018000FC00000F8000FFC001FF800
0FFFFFFFF0000FFFFFFFF0000FFFFFFFE0000FFFFFFFC0000FFFFFFF80000FFFFFFF0000
0FFFFFFC00000FFFFFF800000FFFFFE000000FFFFF0000000FFFF80000000F8000000000
0F80000000000F80000000000F80000000000F80000000000F80000000000F8000000000
0F80000000000F80000000000F81FFC000000F8FFFF800000FBFFFFE00000FFF01FF8000
0FF8007FE0000FE0003FF0000FC0003FF8000F80001FFC000700001FFC000000001FFE00
0000000FFE000000000FFF000000000FFF000000000FFF000000000FFF800000000FFF80
0F00000FFF803FC0000FFF807FE0000FFF80FFF0000FFF80FFF0000FFF80FFF0000FFF80
FFF0000FFF80FFF0000FFF00FFF0000FFF00FFE0000FFF007FC0001FFE007F80001FFE00
7C00001FFC003E00003FFC003F00003FF8001F80007FF0000FE000FFE00007FC07FFC000
01FFFFFF000000FFFFFC0000003FFFF000000007FF000000293D7BBB34>I<000003FE00
0000003FFFC0000000FFFFF0000003FE01F800000FF8007C00003FE0003E00007FC001FE
0000FF8003FF0001FF8007FF0003FF0007FF0003FE0007FF0007FE0007FF000FFE0007FF
000FFC0007FF001FFC0003FE001FFC0001FC003FFC000000003FFC000000003FF8000000
007FF8000000007FF8000000007FF8000000007FF83FFC0000FFF87FFF8000FFF9FFFFC0
00FFFBC03FF000FFFB800FF800FFFF000FFC00FFFF0007FE00FFFE0007FF00FFFE0003FF
80FFFC0003FF80FFFC0003FFC0FFFC0003FFC0FFFC0003FFC0FFF80003FFE0FFF80003FF
E0FFF80003FFE0FFF80003FFE0FFF80003FFE07FF80003FFE07FF80003FFE07FF80003FF
E07FF80003FFE07FF80003FFE03FF80003FFE03FF80003FFE03FF80003FFC01FF80003FF
C01FFC0003FFC00FFC0003FF800FFC0007FF8007FE0007FF0003FE0007FE0003FF000FFC
0001FF801FF80000FFE07FF000003FFFFFE000000FFFFF80000003FFFE000000007FE000
002B3D7CBB34>I<1E00000000001F00000000001FF0000000001FFFFFFFFFF01FFFFFFF
FFF01FFFFFFFFFF03FFFFFFFFFF03FFFFFFFFFE03FFFFFFFFFC03FFFFFFFFF803FFFFFFF
FF003FFFFFFFFE003FFFFFFFFE007FFFFFFFFC007C000001F8007C000003F00078000007
E00078000007C0007800000FC0007800001F8000F000003F0000F000007E0000F00000FC
0000000000F80000000001F80000000003F00000000007E00000000007E0000000000FC0
000000001FC0000000001F80000000003F80000000003F80000000007F00000000007F00
00000000FF0000000000FF0000000001FE0000000001FE0000000003FE0000000003FE00
00000003FE0000000007FE0000000007FC0000000007FC000000000FFC000000000FFC00
0000000FFC000000000FFC000000000FFC000000001FFC000000001FFC000000001FFC00
0000001FFC000000001FFC000000001FFC000000001FFC000000001FFC000000001FFC00
0000001FFC000000000FF80000000007F00000000003E00000002C3F7ABD34>I<0000FF
E000000007FFFE0000001FFFFF8000007F803FE00000FC000FF00001F00007F80003E000
03FC0007E00001FE0007C00000FE000FC00000FF000FC000007F000FC000007F001FE000
007F001FE000007F001FF000007F001FF800007F001FFC00007F001FFF0000FE001FFFC0
00FE001FFFE001FE000FFFF803FC000FFFFE03F8000FFFFF87F00007FFFFDFE00007FFFF
FF800003FFFFFE000001FFFFFF000000FFFFFF8000007FFFFFE000001FFFFFF000001FFF
FFFC00007FFFFFFE0001FEFFFFFE0003F83FFFFF0007F00FFFFF800FE007FFFF801FC001
FFFFC03FC0007FFFC07F80001FFFE07F00000FFFE07F000003FFE0FF000000FFE0FE0000
007FE0FE0000003FE0FE0000001FE0FE0000001FE0FE0000000FE0FE0000000FE0FE0000
000FC0FF0000000FC07F0000000FC07F8000001F803FC000001F003FC000003F001FF000
007E000FF80001FC0007FF801FF80001FFFFFFE000007FFFFF8000001FFFFE00000001FF
E000002B3D7CBB34>I<07801FE03FF07FF8FFFCFFFCFFFCFFFCFFFCFFFC7FF83FF01FE0
078000000000000000000000000000000000000000000000000007801FE03FF07FF8FFFC
FFFCFFFCFFFCFFFCFFFC7FF83FF01FE007800E2879A71D>58 D<000FFF000000FFFFF000
03FFFFFC000FF007FF001F8001FF803F0001FFC07E0000FFE07F8000FFE0FFC000FFF0FF
E000FFF0FFE000FFF0FFE000FFF0FFE000FFF0FFE000FFF07FC000FFF07FC001FFE01F00
01FFE0000001FFC0000003FF80000007FF0000000FFE0000000FF80000001FF00000003F
E00000003FC00000003F800000007F000000007E00000000FC00000000FC00000000F800
000000F000000001F000000001F000000001E000000001E000000001E000000001E00000
0001E000000001E000000001E000000001E000000001E000000000000000000000000000
0000000000000000000000000000000000000000000000000003F000000007F80000000F
FC0000001FFE0000003FFF0000003FFF0000003FFF0000003FFF0000003FFF0000003FFF
0000001FFE0000000FFC00000007F800000003F0000024407ABF31>63
D<00000000F80000000000000001FC0000000000000001FC0000000000000003FE000000
0000000003FE0000000000000003FE0000000000000007FF0000000000000007FF000000
000000000FFF800000000000000FFF800000000000000FFF800000000000001FFFC00000
000000001FFFC00000000000003FFFE00000000000003FFFE00000000000003FFFE00000
000000007FFFF00000000000007DFFF0000000000000FDFFF8000000000000F8FFF80000
00000000F8FFF8000000000001F8FFFC000000000001F07FFC000000000003F07FFE0000
00000003E03FFE000000000003E03FFE000000000007C03FFF000000000007C01FFF0000
0000000FC01FFF80000000000F800FFF80000000001F800FFFC0000000001F000FFFC000
0000001F0007FFC0000000003F0007FFE0000000003E0003FFE0000000007E0003FFF000
0000007C0003FFF0000000007C0001FFF000000000FC0001FFF800000000F80000FFF800
000001F80000FFFC00000001F00000FFFC00000001FFFFFFFFFC00000003FFFFFFFFFE00
000003FFFFFFFFFE00000007FFFFFFFFFF00000007C000003FFF00000007C000001FFF00
00000FC000001FFF8000000F8000000FFF8000001F8000000FFFC000001F0000000FFFC0
00001F00000007FFC000003F00000007FFE000003E00000003FFE000007E00000003FFF0
00007C00000003FFF000007C00000001FFF00001FE00000001FFF800FFFFFC0001FFFFFF
F8FFFFFC0001FFFFFFF8FFFFFC0001FFFFFFF8FFFFFC0001FFFFFFF8453F7CBE4E>65
D<FFFFFFFFFFFFFE00FFFFFFFFFFFFFE00FFFFFFFFFFFFFE00FFFFFFFFFFFFFE00003FFE
00003FFF00003FFE000007FF00003FFE000001FF00003FFE000000FF00003FFE0000007F
00003FFE0000003F00003FFE0000001F00003FFE0000001F80003FFE0000000F80003FFE
0000000F80003FFE0000000780003FFE0000000780003FFE0000000780003FFE00078007
80003FFE00078007C0003FFE00078003C0003FFE00078003C0003FFE00078003C0003FFE
0007800000003FFE000F800000003FFE000F800000003FFE001F800000003FFE003F8000
00003FFE00FF800000003FFFFFFF800000003FFFFFFF800000003FFFFFFF800000003FFF
FFFF800000003FFE00FF800000003FFE003F800000003FFE001F800000003FFE000F8000
00003FFE000F800000003FFE0007800078003FFE0007800078003FFE0007800078003FFE
00078000F0003FFE00078000F0003FFE00078000F0003FFE00000000F0003FFE00000000
F0003FFE00000001F0003FFE00000001E0003FFE00000001E0003FFE00000003E0003FFE
00000003E0003FFE00000007E0003FFE00000007E0003FFE0000000FE0003FFE0000001F
C0003FFE0000003FC0003FFE000000FFC0003FFE000003FFC0003FFE00003FFFC0FFFFFF
FFFFFFFFC0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF803D3E7DBD44>69
D<00000007FFC0000E00000000FFFFF8001E00000007FFFFFF003E0000003FFFFFFFC07E
000000FFFF801FE0FE000001FFF80003FBFE000007FFC00000FFFE00001FFF0000007FFE
00003FFE0000003FFE00007FFC0000001FFE0000FFF00000000FFE0001FFF000000007FE
0003FFE000000003FE0003FFC000000001FE0007FF8000000001FE000FFF8000000000FE
000FFF0000000000FE001FFF00000000007E001FFF00000000007E003FFE00000000007E
003FFE00000000007E003FFE00000000003E007FFE00000000003E007FFE00000000003E
007FFC000000000000007FFC00000000000000FFFC00000000000000FFFC000000000000
00FFFC00000000000000FFFC00000000000000FFFC00000000000000FFFC000000000000
00FFFC00000000000000FFFC00000000000000FFFC00000000000000FFFC000000000000
00FFFC00000000000000FFFC000007FFFFFFFC7FFC000007FFFFFFFC7FFC000007FFFFFF
FC7FFE000007FFFFFFFC7FFE000000003FFE003FFE000000003FFE003FFE000000003FFE
003FFE000000003FFE001FFF000000003FFE001FFF000000003FFE000FFF800000003FFE
000FFF800000003FFE0007FFC00000003FFE0003FFC00000003FFE0003FFE00000003FFE
0001FFF00000003FFE0000FFF80000003FFE00007FFC0000007FFE00003FFE0000007FFE
00001FFF000000FFFE000007FFC00001FFFE000001FFF80003FFFE000000FFFF801FF1FE
0000003FFFFFFFC07E00000007FFFFFF001E00000000FFFFFC00060000000007FFC00000
0046407ABE52>71 D<FFFFFFFFC00000FFFFFFFFC00000FFFFFFFFC00000FFFFFFFFC000
00007FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000
007FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC0000000000
7FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007F
FC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC
00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00
000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC0000
0000007FFC00000000007FFC00000000007FFC00000078007FFC00000078007FFC000000
78007FFC00000078007FFC000000F0007FFC000000F0007FFC000000F0007FFC000000F0
007FFC000001F0007FFC000001F0007FFC000001F0007FFC000003F0007FFC000003F000
7FFC000007E0007FFC000007E0007FFC00000FE0007FFC00001FE0007FFC00003FE0007F
FC0000FFE0007FFC0003FFE0007FFC001FFFE0FFFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFF
FFFFFFC0FFFFFFFFFFFFC0353E7CBD3E>76 D<FFFFFE00000000001FFFFFE0FFFFFF0000
0000003FFFFFE0FFFFFF00000000003FFFFFE0FFFFFF80000000007FFFFFE0003FFF8000
0000007FFF8000003FFF80000000007FFF8000003DFFC000000000F7FF8000003DFFC000
000000F7FF8000003CFFE000000001E7FF8000003CFFE000000001E7FF8000003C7FF000
000003C7FF8000003C7FF000000003C7FF8000003C3FF80000000787FF8000003C3FF800
00000787FF8000003C3FF80000000787FF8000003C1FFC0000000F07FF8000003C1FFC00
00000F07FF8000003C0FFE0000001E07FF8000003C0FFE0000001E07FF8000003C07FF00
00003C07FF8000003C07FF0000003C07FF8000003C03FF8000007807FF8000003C03FF80
00007807FF8000003C03FF8000007807FF8000003C01FFC00000F007FF8000003C01FFC0
0000F007FF8000003C00FFE00001E007FF8000003C00FFE00001E007FF8000003C007FF0
0003C007FF8000003C007FF00003C007FF8000003C003FF800078007FF8000003C003FF8
00078007FF8000003C003FF800078007FF8000003C001FFC000F0007FF8000003C001FFC
000F0007FF8000003C000FFE001E0007FF8000003C000FFE001E0007FF8000003C0007FF
003C0007FF8000003C0007FF003C0007FF8000003C0003FF80780007FF8000003C0003FF
80780007FF8000003C0003FF80780007FF8000003C0001FFC0F00007FF8000003C0001FF
C0F00007FF8000003C0000FFE1E00007FF8000003C0000FFE1E00007FF8000003C00007F
F3C00007FF8000003C00007FF3C00007FF8000003C00003FFF800007FF8000003C00003F
FF800007FF8000003C00003FFF800007FF8000003C00001FFF000007FF8000003C00001F
FF000007FF8000003C00000FFE000007FF8000003C00000FFE000007FF8000003C000007
FC000007FF8000003C000007FC000007FF8000007E000003F8000007FF8000FFFFFF0003
F8001FFFFFFFE0FFFFFF0003F8001FFFFFFFE0FFFFFF0001F0001FFFFFFFE0FFFFFF0000
E0001FFFFFFFE05B3E7DBD62>I<FFFFFFFFFFF00000FFFFFFFFFFFF0000FFFFFFFFFFFF
E000FFFFFFFFFFFFF800003FFE0001FFFC00003FFE00003FFE00003FFE00000FFF80003F
FE000007FF80003FFE000003FFC0003FFE000003FFE0003FFE000003FFE0003FFE000001
FFF0003FFE000001FFF0003FFE000001FFF0003FFE000001FFF8003FFE000001FFF8003F
FE000001FFF8003FFE000001FFF8003FFE000001FFF8003FFE000001FFF8003FFE000001
FFF8003FFE000001FFF0003FFE000001FFF0003FFE000001FFF0003FFE000003FFE0003F
FE000003FFE0003FFE000003FFC0003FFE000007FF80003FFE00000FFF00003FFE00003F
FE00003FFE0001FFFC00003FFFFFFFFFF000003FFFFFFFFFC000003FFFFFFFFC0000003F
FE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE000000
0000003FFE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003F
FE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE000000
0000003FFE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003F
FE0000000000003FFE0000000000003FFE0000000000003FFE0000000000003FFE000000
0000003FFE0000000000FFFFFFFF80000000FFFFFFFF80000000FFFFFFFF80000000FFFF
FFFF800000003D3E7DBD47>80 D<FFFFFFFFFFC000000000FFFFFFFFFFFC00000000FFFF
FFFFFFFF80000000FFFFFFFFFFFFF0000000003FFE0001FFFC000000003FFE00003FFE00
0000003FFE00001FFF000000003FFE000007FF800000003FFE000007FFC00000003FFE00
0003FFE00000003FFE000003FFE00000003FFE000001FFF00000003FFE000001FFF00000
003FFE000001FFF80000003FFE000001FFF80000003FFE000001FFF80000003FFE000001
FFF80000003FFE000001FFF80000003FFE000001FFF80000003FFE000001FFF80000003F
FE000001FFF00000003FFE000001FFF00000003FFE000003FFE00000003FFE000003FFE0
0000003FFE000007FFC00000003FFE000007FF800000003FFE00001FFE000000003FFE00
003FFC000000003FFE0003FFF0000000003FFFFFFFFFC0000000003FFFFFFFFE00000000
003FFFFFFFFE00000000003FFE000FFF80000000003FFE0003FFE0000000003FFE0000FF
F0000000003FFE00007FF8000000003FFE00007FFC000000003FFE00003FFC000000003F
FE00003FFE000000003FFE00001FFE000000003FFE00001FFF000000003FFE00001FFF00
0000003FFE00001FFF000000003FFE00001FFF000000003FFE00001FFF000000003FFE00
001FFF000000003FFE00001FFF800000003FFE00001FFF800000003FFE00001FFF800000
003FFE00001FFF800000003FFE00001FFF800000003FFE00001FFF800180003FFE00001F
FF8003C0003FFE00001FFFC003C0003FFE00000FFFC003C0003FFE00000FFFC003C0003F
FE000007FFE00780003FFE000007FFE00780FFFFFFFF8003FFF00F00FFFFFFFF8001FFFC
3F00FFFFFFFF80007FFFFE00FFFFFFFF80001FFFF80000000000000000FFE0004A3F7DBD
4E>82 D<0001FF8001C0001FFFF803C0007FFFFE07C001FFFFFF8FC003FF007FDFC007F8
000FFFC00FF00003FFC01FE00001FFC03FC000007FC03FC000003FC07FC000003FC07F80
00001FC07F8000000FC0FF8000000FC0FF80000007C0FF80000007C0FFC0000007C0FFC0
000007C0FFE0000003C0FFE0000003C0FFF0000003C0FFFC00000000FFFF000000007FFF
F80000007FFFFF8000007FFFFFFC00003FFFFFFF80001FFFFFFFE0001FFFFFFFF8000FFF
FFFFFC0007FFFFFFFE0003FFFFFFFF0001FFFFFFFF80007FFFFFFFC0001FFFFFFFC00007
FFFFFFE000007FFFFFE0000003FFFFF00000001FFFF000000003FFF000000000FFF80000
00007FF8000000003FF8F00000003FF8F00000001FF8F00000001FF8F00000000FF8F000
00000FF8F80000000FF8F80000000FF8F80000000FF0FC0000000FF0FE0000000FF0FE00
00001FE0FF0000001FE0FF8000003FC0FFE000003FC0FFF000007F80FFFE0001FF00FEFF
E007FE00FC3FFFFFF800F80FFFFFF000F003FFFF8000E0001FFC00002D407ABE3A>I<00
07FF800000003FFFF0000001FFFFFC000003FC03FF000007E000FFC0000FF8007FE0001F
F8003FF0001FFC003FF0001FFC001FF8001FFC001FF8001FFC000FFC001FFC000FFC000F
F8000FFC0007F0000FFC0001C0000FFC000000000FFC000000000FFC000000000FFC0000
0003FFFC000001FFFFFC00000FFFFFFC00007FFF8FFC0001FFF00FFC0007FF800FFC000F
FF000FFC001FFC000FFC003FF8000FFC007FF8000FFC007FF0000FFC00FFF0000FFC00FF
E0000FFC00FFE0000FFC00FFE0000FFC00FFE0001FFC00FFE0001FFC00FFF0003FFC007F
F0003FFC007FF8007FFF003FFC01F7FFFC1FFE07E3FFFC07FFFF81FFFC01FFFE007FFC00
1FF80000002E2B7DA932>97 D<00FF0000000000FFFF0000000000FFFF0000000000FFFF
0000000000FFFF000000000007FF000000000003FF000000000003FF000000000003FF00
0000000003FF000000000003FF000000000003FF000000000003FF000000000003FF0000
00000003FF000000000003FF000000000003FF000000000003FF000000000003FF000000
000003FF000000000003FF000000000003FF000000000003FF007FE0000003FF07FFFC00
0003FF1FFFFF000003FF7F00FFC00003FFF8003FF00003FFF0001FF80003FFE0000FFC00
03FF800007FE0003FF800007FF0003FF000003FF0003FF000003FF8003FF000003FF8003
FF000003FFC003FF000001FFC003FF000001FFC003FF000001FFC003FF000001FFE003FF
000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF00
0001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFC003FF0000
01FFC003FF000001FFC003FF000003FFC003FF000003FF8003FF000003FF8003FF000007
FF0003FF800007FE0003FFC0000FFE0003FFE0000FFC0003FDF0001FF80003F8F8007FE0
0003F07F01FFC00003E01FFFFF000003C007FFF80000000000FFC0000033407DBE3A>I<
00007FF0000003FFFF00001FFFFFC0007FE01FE000FF8003F001FF000FF803FE000FFC07
FE001FFC0FFC001FFC1FFC001FFC1FF8001FFC3FF8001FFC3FF8000FF87FF80007F07FF0
0001C07FF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF000
0000FFF0000000FFF0000000FFF0000000FFF0000000FFF00000007FF00000007FF00000
007FF80000007FF80000003FF800001E3FFC00001E1FFC00003E0FFC00003C0FFE00007C
07FF0000F803FF8001F000FFC003E0007FF00FC0001FFFFF000007FFFC0000007FE00027
2B7DA92E>I<0000000007F80000000007FFF80000000007FFF80000000007FFF8000000
0007FFF800000000003FF800000000001FF800000000001FF800000000001FF800000000
001FF800000000001FF800000000001FF800000000001FF800000000001FF80000000000
1FF800000000001FF800000000001FF800000000001FF800000000001FF800000000001F
F800000000001FF800000000001FF80000007FE01FF8000003FFFC1FF800001FFFFF1FF8
00007FF00FDFF80000FFC003FFF80003FF0000FFF80007FE00007FF8000FFE00003FF800
0FFC00001FF8001FFC00001FF8003FF800001FF8003FF800001FF8007FF800001FF8007F
F000001FF8007FF000001FF8007FF000001FF800FFF000001FF800FFF000001FF800FFF0
00001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000
001FF800FFF000001FF800FFF000001FF8007FF000001FF8007FF000001FF8007FF00000
1FF8007FF800001FF8003FF800001FF8003FF800001FF8001FF800001FF8001FFC00003F
F8000FFC00007FF80007FE0000FFF80003FF0001FFFC0001FF8007FFFFE0007FE01F9FFF
E0001FFFFE1FFFE00007FFF81FFFE000007FC01FE00033407DBE3A>I<0000FFE0000007
FFFC00003FFFFF00007FE0FF8001FF803FC003FF001FE007FE000FF00FFC000FF80FFC00
07FC1FF80007FC3FF80003FE3FF80003FE3FF80003FE7FF00003FE7FF00003FF7FF00003
FFFFF00001FFFFF00001FFFFF00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000
FFF0000000FFF0000000FFF0000000FFF00000007FF00000007FF00000007FF00000003F
F80000003FF800000F1FF800000F1FFC00001F0FFC00001E07FE00003E03FE00007C01FF
0000F800FFC003F0007FF01FE0001FFFFFC00007FFFE0000007FF000282B7DA92F>I<00
0007FC0000007FFF000001FFFFC00007FE1FE0001FF83FE0003FF07FF0007FE07FF0007F
E07FF000FFC07FF000FFC07FF001FF807FF001FF803FE001FF800F8001FF80000001FF80
000001FF80000001FF80000001FF80000001FF80000001FF80000001FF80000001FF8000
0001FF80000001FF800000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE00001FF800000
01FF80000001FF80000001FF80000001FF80000001FF80000001FF80000001FF80000001
FF80000001FF80000001FF80000001FF80000001FF80000001FF80000001FF80000001FF
80000001FF80000001FF80000001FF80000001FF80000001FF80000001FF80000001FF80
000001FF80000001FF80000001FF80000001FF80000001FF80000001FF80000001FF8000
0001FF80000001FF8000007FFFFF80007FFFFF80007FFFFF80007FFFFF800024407DBF20
>I<0003FF8003F0003FFFF81FFC00FFFFFE7FFE03FF01FFFCFE07FC007FE1FE0FFC007F
E0FE1FF8003FF0FE3FF8003FF87C3FF0001FF8003FF0001FF8007FF0001FFC007FF0001F
FC007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC007FF0001FFC003FF0001F
F8003FF0001FF8003FF8003FF8001FF8003FF0000FFC007FE00007FC007FC00007FF01FF
800007FFFFFE00000F3FFFF800000F03FF8000001E00000000001E00000000001F000000
00001F00000000001F00000000001F80000000001FC0000000001FFFFFFF00000FFFFFFF
F0000FFFFFFFFC0007FFFFFFFF0007FFFFFFFF8003FFFFFFFFC003FFFFFFFFE00FFFFFFF
FFE01FC00001FFF03F8000001FF07F0000000FF87F00000007F8FE00000007F8FE000000
03F8FE00000003F8FE00000003F8FE00000003F8FF00000007F87F00000007F07F800000
0FF03FC000001FE01FE000003FC00FF80000FF8003FF800FFE0000FFFFFFF800001FFFFF
C0000001FFFC00002F3D7DA834>I<00FF0000000000FFFF0000000000FFFF0000000000
FFFF0000000000FFFF000000000007FF000000000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF00
0000000003FF000000000003FF000000000003FF000000000003FF003FF0000003FF00FF
FE000003FF03FFFF800003FF0FC0FFC00003FF1E007FE00003FF3C003FF00003FF78003F
F00003FFF0003FF00003FFE0001FF80003FFC0001FF80003FFC0001FF80003FF80001FF8
0003FF80001FF80003FF80001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800FFFFFC07
FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0333F7CBE3A>I<01F80003FC
0007FE000FFF001FFF801FFF801FFF801FFF801FFF801FFF800FFF0007FE0003FC0001F8
0000000000000000000000000000000000000000000000000000000000FF00FFFF00FFFF
00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFF
F8FFFFF8FFFFF815407CBF1D>I<00001F8000003FC000007FE00000FFF00001FFF80001
FFF80001FFF80001FFF80001FFF80001FFF80000FFF000007FE000003FC000001F800000
000000000000000000000000000000000000000000000000000000000000000000000000
07F8000FFFF8000FFFF8000FFFF8000FFFF800003FF800001FF800001FF800001FF80000
1FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80000
1FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80000
1FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80000
1FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF80000
1FF81F001FF83F801FF87FC01FF8FFE01FF0FFE03FF0FFE03FF0FFE03FE0FFE07FC07FC0
7F807F80FF003F81FE001FFFFC0007FFF00000FF80001D5385BF20>I<00FF00FFFF00FF
FF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003
FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFFCFFFFFCFFFFFCFF
FFFC163F7CBE1D>108 D<01FE003FF00001FF8000FFFE00FFFE0007FFF000FFFE03FFFF
801FFFFC00FFFE0FC0FFC07E07FE00FFFE1E007FE0F003FF0007FE3C003FF1E001FF8003
FE78003FF3C001FF8003FEF0003FF78001FF8003FFE0001FFF0000FFC003FFC0001FFE00
00FFC003FFC0001FFE0000FFC003FF80001FFC0000FFC003FF80001FFC0000FFC003FF80
001FFC0000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FF
C003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001F
F80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003
FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF800
00FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00
001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FFC003FF00001FF80000FF
C003FF00001FF80000FFC003FF00001FF80000FFC0FFFFFC07FFFFE03FFFFFFFFFFC07FF
FFE03FFFFFFFFFFC07FFFFE03FFFFFFFFFFC07FFFFE03FFFFF50297CA857>I<01FE003F
F00000FFFE00FFFE0000FFFE03FFFF8000FFFE0FC0FFC000FFFE1E007FE00007FE3C003F
F00003FE78003FF00003FEF0003FF00003FFE0001FF80003FFC0001FF80003FFC0001FF8
0003FF80001FF80003FF80001FF80003FF80001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF
00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00
001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF0000
1FF800FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE033297CA83A
>I<00007FF000000003FFFE0000001FFFFFC000007FE03FF00000FF800FF80001FF0007
FC0003FE0003FE0007FC0001FF000FF80000FF801FF80000FFC01FF80000FFC03FF80000
FFE03FF000007FE07FF000007FF07FF000007FF07FF000007FF07FF000007FF0FFF00000
7FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF00000
7FF8FFF000007FF8FFF000007FF8FFF000007FF87FF000007FF07FF000007FF07FF00000
7FF07FF000007FF03FF80000FFE03FF80000FFE01FF80000FFC00FF80000FF800FFC0001
FF8007FE0003FF0003FF0007FE0001FF800FFC00007FE03FF000001FFFFFC0000007FFFF
000000007FF000002D2B7DA934>I<00FF007FE00000FFFF07FFFC0000FFFF1FFFFF0000
FFFF7F01FFC000FFFFF8007FF00007FFF0003FF80003FFE0001FFC0003FF80000FFE0003
FF80000FFF0003FF000007FF0003FF000007FF8003FF000003FF8003FF000003FFC003FF
000003FFC003FF000003FFC003FF000001FFC003FF000001FFE003FF000001FFE003FF00
0001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF000001FFE003FF0000
01FFE003FF000001FFE003FF000001FFE003FF000001FFC003FF000003FFC003FF000003
FFC003FF000003FFC003FF000007FF8003FF000007FF8003FF000007FF0003FF80000FFE
0003FFC0001FFE0003FFE0001FFC0003FFF0003FF80003FFF800FFE00003FF7F03FFC000
03FF1FFFFF000003FF07FFF8000003FF00FFC0000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF
000000000003FF000000000003FF000000000003FF000000000003FF000000000003FF00
00000000FFFFFC00000000FFFFFC00000000FFFFFC00000000FFFFFC00000000333B7DA8
3A>I<01FE01FC00FFFE07FF80FFFE0FFFE0FFFE3F1FF0FFFE3C1FF007FE783FF803FEF0
3FF803FEE03FF803FFE03FF803FFC03FF803FFC01FF003FF800FE003FF80038003FF8000
0003FF80000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF000000FFFFFF0000FFFFFF0000FFFFFF0000FFFFFF000025297DA82B>114
D<001FF80E0001FFFF3E0007FFFFFE000FE007FE001F8001FE003F0000FE007E00007E00
7C00003E00FC00003E00FC00001E00FC00001E00FE00001E00FF00001E00FF80000000FF
E0000000FFFF0000007FFFFC00007FFFFF80003FFFFFE0001FFFFFF8000FFFFFFC0003FF
FFFE0000FFFFFF00003FFFFF000003FFFF8000000FFF80000001FFC0F000007FC0F00000
3FC0F800001FC0F800001FC0F800000FC0FC00000FC0FC00000FC0FE00000F80FE00001F
80FF00001F00FF80003F00FFE0007E00FFF803FC00FCFFFFF000F03FFFC000E007FE0000
222B7DA929>I<0007800000078000000780000007800000078000000F8000000F800000
0F8000000F8000001F8000001F8000001F8000003F8000007F8000007F800000FF800001
FF800007FF80001FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC01FF800001FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001
FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF800001FF801E01
FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E01FF801E00FF803C00
FFC03C00FFC03C007FE078003FF0F0001FFFE00007FFC00000FF001F3B7EB928>I<00FF
000007F800FFFF0007FFF800FFFF0007FFF800FFFF0007FFF800FFFF0007FFF80007FF00
003FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF0000
1FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001F
F80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00003FF80003
FF00003FF80003FF00003FF80003FF00007FF80001FF0000FFF80001FF0000FFF80001FF
8001FFFC0000FF8007DFFFE0007FE01F9FFFE0001FFFFE1FFFE00007FFF81FFFE00000FF
E01FE000332A7CA83A>I<FFFFF8001FFFC0FFFFF8001FFFC0FFFFF8001FFFC0FFFFF800
1FFFC003FF800003F80001FF800001E00001FFC00003E00000FFC00003C00000FFE00003
C000007FE000078000007FF000078000007FF0000F8000003FF0000F0000003FF8001F00
00001FF8001E0000001FFC003E0000000FFC003C0000000FFE007C00000007FE00780000
0007FF00F800000003FF00F000000003FF81F000000001FF81E000000001FFC1E0000000
00FFC3C000000000FFE3C000000000FFE7C0000000007FE780000000007FFF8000000000
3FFF00000000003FFF00000000001FFE00000000001FFE00000000000FFC00000000000F
FC000000000007F8000000000007F8000000000003F0000000000003F0000000000001E0
00000032287EA737>I<0003F000000007F80000000FFC0000001FFE0000003FFF000000
3FFF0000003FFF0000003FFF0000003FFF0000003FFF0000001FFE0000000FFC00000007
F800000003F0000000000000000000000000000000000000000000000000000000000000
000000000000000001E000000001E000000001E000000001E000000001E000000001E000
000001E000000001E000000001E000000003E000000003E000000003E000000007C00000
0007C00000000FC00000000FC00000001F800000003F800000007F80000000FF00000001
FF00000003FE00000007FE0000001FFC0000003FFC0000003FF80000007FF8000F807FF0
003FE0FFF0003FE0FFF0007FF0FFF0007FF0FFF0007FF0FFF0007FF0FFF0007FF0FFF000
3FF07FF0001FE07FF00007E03FF0000FC03FF8003F800FFC01FE0007FFFFF80001FFFFE0
00001FFE000024407AAC31>190 D<0000600001F80003FC0007FC000FFE001FFE003FFE
007FFE00FFFC01FFFC03FFF007FF800FFE0007F000078000020000000000000000000000
00FF00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF00
03FF00FFFFF8FFFFF8FFFFF8FFFFF8173C7CBB1D>237 D<0000007C0000000000FE0000
000001FF0000000007FF800000000FFF800000001FFF800000003FFF800000007FFF0000
0000FFFE00000001FFFC00000003FFE000000007FF0000000003F80000000003C0000000
00010000000000000000000000000000000000007FF000000003FFFE0000001FFFFFC000
007FE03FF00000FF800FF80001FF0007FC0003FE0003FE0007FC0001FF000FF80000FF80
1FF80000FFC01FF80000FFC03FF80000FFE03FF000007FE07FF000007FF07FF000007FF0
7FF000007FF07FF000007FF0FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8
FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8FFF000007FF8
7FF000007FF07FF000007FF07FF000007FF07FF000007FF03FF80000FFE03FF80000FFE0
1FF80000FFC00FF80000FF800FFC0001FF8007FE0003FF0003FF0007FE0001FF800FFC00
007FE03FF000001FFFFFC0000007FFFF000000007FF000002D3C7DBA34>243
D<0000000F8000000000001FC000000000003FE00000000000FFF00000000001FFF00000
000003FFF00000000007FFF0000000000FFFE0000000001FFFC0000000003FFF80000000
007FFC0000000000FFE000000000007F0000000000007800000000000020000000000000
0000000000000000000000000000000000000000FF000007F800FFFF0007FFF800FFFF00
07FFF800FFFF0007FFF800FFFF0007FFF80007FF00003FF80003FF00001FF80003FF0000
1FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001F
F80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00003FF80003FF00003FF80003FF00003FF80003FF
00007FF80001FF0000FFF80001FF0000FFF80001FF8001FFFC0000FF8007DFFFE0007FE0
1F9FFFE0001FFFFE1FFFE00007FFF81FFFE00000FFE01FE000333C7CBA3A>250
D E
%EndDVIPSBitmapFont
/Fe 135[52 9[55 19[62 53 1[86 53 17[75 65 69 68 5[25
12[45 46[{}12 90.9091 /CMMI10 rf
%DVIPSBitmapFont: Ff ecrm1000 10 24
/Ff 24 242 df<1C007F00FF80FF80FF80FF80FF807F001C000909798817>46
D<00000006000000060000000E0000000C0000000C0000001C0000001800000038000000
3000000030000000700000006000000060000000E0000000C0000000C0000001C0000001
8000000180000003800000030000000700000006000000060000000E0000000C0000000C
0000001C00000018000000180000003800000030000000300000007000000060000000E0
000000C0000000C0000001C0000001800000018000000380000003000000030000000700
000006000000060000000E0000000C0000001C0000001800000018000000380000003000
000030000000700000006000000060000000E0000000C0000000C0000001C00000018000
000380000003000000030000000700000006000000060000000E0000000C0000000C0000
001C00000018000000180000003800000030000000700000006000000060000000E00000
00C0000000C00000001F537BBD2A>I<0003F80000001FFF0000007E0FC00000F803E000
01E000F00003C000780007C0007C000F80003E000F80003E001F00001F001F00001F003F
00001F803F00001F803F00001F807E00000FC07E00000FC07E00000FC07E00000FC07E00
000FC0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE0000
0FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000F
E0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE07E00000FC07E00000FC0
7E00000FC07E00000FC07F00001FC03F00001F803F00001F803F00001F801F00001F001F
00001F000F80003E000F80003E0007C0007C0003E000F80003F001F80000F803E000007E
0FC000001FFF00000003F8000023397DB62A>I<0001C0000003C0000007C000001FC000
00FFC000FFFFC000FFFFC000FF1FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000003FE0007FFFFFF07FFFFFF07FFFFFF01C3779B62A>I<000FF00000
007FFE000001FFFF800003E03FE0000F000FF0001E0007F8001C0003FC00380001FE0070
0001FE00700000FF00600000FF00FE0000FF00FF00007F80FF80007F80FF80007F80FF80
007F80FF80007F80FF80007F807F00007F801C00007F800000007F80000000FF00000000
FF00000000FE00000001FE00000001FC00000003FC00000003F800000007F00000000FE0
0000000FC00000001F800000003F000000007E00000000FC00000001F800000001E00000
0003C000000007800000000F000000001E000180003C000180007800018000F000038001
E000030003C0000300078000030007000007000FFFFFFF001FFFFFFF003FFFFFFF007FFF
FFFE00FFFFFFFE00FFFFFFFE00FFFFFFFE0021377CB62A>I<0007F80000003FFF000000
FFFFC00001F80FF00003C007F800078003FC000E0001FE000F8001FE001FE000FF001FF0
00FF001FF000FF001FF000FF001FF000FF001FF000FF000FE000FF0007C000FF00000001
FE00000001FE00000001FC00000003FC00000003F800000007F000000007E00000000F80
0000007F0000001FFC0000001FFF800000000FE000000007F000000001FC00000001FE00
000000FF000000007F800000007F800000007FC00000007FC00000003FC00000003FE000
00003FE01E00003FE07F80003FE07F80003FE0FFC0003FE0FFC0003FE0FFC0003FE0FFC0
003FC0FFC0007FC0FF80007F807E00007F80700000FF00380001FE001E0001FE000F8003
F80007F00FF00001FFFFC000007FFF0000000FF8000023397DB62A>I<00000038000000
0038000000007800000000F800000000F800000001F800000003F800000007F800000007
F80000000FF80000001FF80000001BF800000033F800000073F800000063F8000000C3F8
000001C3F800000183F800000303F800000703F800000603F800000C03F800001C03F800
001803F800003003F800007003F800006003F80000C003F80001C003F800038003F80003
0003F800070003F8000E0003F8000C0003F800180003F800380003F800300003F8006000
03F800E00003F800FFFFFFFFF8FFFFFFFFF8FFFFFFFFF8000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8
00000007FC000003FFFFF80003FFFFF80003FFFFF825387EB72A>I<0000003800000000
000038000000000000380000000000007C0000000000007C0000000000007C0000000000
00FE000000000000FE000000000000FE000000000001FF000000000001FF000000000001
FF0000000000037F8000000000037F8000000000077FC000000000063FC000000000063F
C0000000000E3FE0000000000C1FE0000000000C1FE0000000001C1FF000000000180FF0
00000000180FF000000000380FF8000000003007F8000000003007F8000000007007FC00
0000006003FC000000006003FC00000000C003FE00000000C001FE00000000C001FE0000
00018001FF000000018000FF000000018000FF000000030000FF8000000300007F800000
0300007F8000000600007FC0000007FFFFFFC0000007FFFFFFC000000FFFFFFFE000000C
00001FE000000C00001FE000001800000FF000001800000FF000001800000FF000003000
0007F8000030000007F8000030000007F8000060000003FC000060000003FC0000E00000
03FC0000E0000001FE0001E0000001FE0003F0000001FF000FFC000007FF80FFFF8000FF
FFFEFFFF8000FFFFFEFFFF8000FFFFFE373C7DBB3E>65 D<000001FF80018000000FFFE0
038000007FFFF803800001FF807E07800003FC000F0F80000FF000039F80001FE00001DF
80003F800000FF80007F0000007F8000FE0000003F8001FE0000003F8003FC0000001F80
07F80000000F8007F80000000F800FF000000007800FF000000007801FE000000007801F
E000000003803FE000000003803FC000000003807FC000000001807FC000000001807FC0
00000001807F800000000180FF800000000000FF800000000000FF800000000000FF8000
00000000FF800000000000FF800000000000FF800000000000FF800000000000FF800000
000000FF800000000000FF800000000000FF800000000000FF8000000000007F80000000
00007FC000000001807FC000000001807FC000000001803FC000000001803FE000000001
801FE000000003801FE000000003000FF000000003000FF0000000070007F80000000700
07F8000000060003FC0000000E0001FE0000001C0000FE0000001800007F000000380000
3F8000007000001FE00000E000000FF00003C0000003FC000F80000001FF803F00000000
7FFFFC000000000FFFF00000000001FF800000313D7BBA3C>67 D<FFFFFFFFFFF8FFFFFF
FFFFF8FFFFFFFFFFF801FF80001FF800FF000001F800FF000000FC00FF0000007C00FF00
00003C00FF0000001C00FF0000001C00FF0000000C00FF0000000C00FF0000000C00FF00
00000C00FF0000000E00FF0000000600FF0000000600FF0001800600FF0001800600FF00
01800000FF0001800000FF0001800000FF0001800000FF0003800000FF0003800000FF00
07800000FF001F800000FFFFFF800000FFFFFF800000FFFFFF800000FF001F800000FF00
07800000FF0003800000FF0003800000FF0001800000FF0001800000FF0001800000FF00
01800000FF0001800000FF0001800000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00
00000000FF0000000000FF0000000000FF0000000001FFC0000000FFFFFFC00000FFFFFF
C00000FFFFFFC000002F397DB836>70 D<FFFF0000000007FFF8FFFF800000000FFFF8FF
FF800000000FFFF801FF800000000FFC0000DFC00000001BF80000DFC00000001BF80000
CFE000000033F80000CFE000000033F80000CFE000000033F80000C7F000000063F80000
C7F000000063F80000C7F000000063F80000C3F8000000C3F80000C3F8000000C3F80000
C1FC00000183F80000C1FC00000183F80000C1FC00000183F80000C0FE00000303F80000
C0FE00000303F80000C07F00000603F80000C07F00000603F80000C07F00000603F80000
C03F80000C03F80000C03F80000C03F80000C03F80000C03F80000C01FC0001803F80000
C01FC0001803F80000C00FE0003003F80000C00FE0003003F80000C00FE0003003F80000
C007F0006003F80000C007F0006003F80000C003F800C003F80000C003F800C003F80000
C003F800C003F80000C001FC018003F80000C001FC018003F80000C001FC018003F80000
C000FE030003F80000C000FE030003F80000C0007F060003F80000C0007F060003F80000
C0007F060003F80000C0003F8C0003F80000C0003F8C0003F80000C0001FD80003F80000
C0001FD80003F80000C0001FD80003F80000C0000FF00003F80000C0000FF00003F80000
C0000FF00003F80001E00007E00003F80003F00007E00003F8000FFC0003C00007FC00FF
FFC003C003FFFFF8FFFFC003C003FFFFF8FFFFC0018003FFFFF845397DB84C>77
D<001FE0000000FFFC000003E03F000007000F80000F8007E0001FC003F0001FE003F000
1FE001F8001FE001F8001FE000FC000FC000FC00078000FC00000000FC00000000FC0000
0000FC00000000FC0000007FFC000007FFFC00003FE0FC0000FE00FC0003F800FC000FF0
00FC001FC000FC003FC000FC007F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000
FC0CFE0000FC0CFE0001FC0CFE0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E
180FE0781FF003FFF00FE0007F8007C026277DA52A>97 D<0003FC00001FFF80007E03E0
01F8007003F000F807E001FC0FC003FC0FC003FC1F8003FC3F8003FC3F0001F87F0000F0
7F0000007F0000007E000000FE000000FE000000FE000000FE000000FE000000FE000000
FE000000FE000000FE000000FE0000007E0000007F0000007F0000003F0000063F800006
1F80000E1FC0000C0FC0001C07E0003803F0007001F800E0007C07C0001FFF000007F800
1F277DA525>99 D<0000000FC0000003FFC0000003FFC0000003FFC00000003FC0000000
0FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000F
C00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0
0000000FC00003F80FC0001FFF0FC0007E078FC000F801EFC003F0007FC007E0003FC00F
C0001FC00FC0001FC01F80000FC03F80000FC03F00000FC07F00000FC07F00000FC07E00
000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE00000FC0FE0000
0FC0FE00000FC0FE00000FC0FE00000FC07E00000FC07F00000FC07F00000FC03F00000F
C03F00000FC01F80001FC01F80001FC00FC0003FC007E0007FC003F000EFF001F801CFFF
007C078FFF001FFE0FFF0007F80FC0283B7DB92E>I<0007F800001FFF00007C0FC001F8
03E003F001F007E001F80FC000F81F80007C1F80007C3F00007E3F00003E7F00003E7F00
003F7E00003FFE00003FFE00003FFE00003FFFFFFFFFFFFFFFFFFE000000FE000000FE00
0000FE000000FE0000007E0000007E0000007F0000007F0000003F0000033F8000031F80
00070FC0000607C0000E07E0001C01F0003800F80070007E03E0001FFF800003FC002027
7EA525>I<0380000FE0001FF0001FF0001FF0001FF0001FF0000FE00003800000000000
000000000000000000000000000000000000000000000000000003F000FFF000FFF000FF
F00007F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC012387EB717>
105 D<03F000FFF000FFF000FFF0000FF00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00007F800FFFFC0FFFFC0FFFFC0123A7E
B917>108 D<03F00FF0001FE000FFF03FFC007FF800FFF0F03F01E07E00FFF1C01F8380
3F000FF3800FC7001F8003F7000FCE001F8003FE000FDC001F8003FC0007F8000FC003FC
0007F8000FC003F80007F0000FC003F80007F0000FC003F80007F0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F0
0007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F0
0007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC007F8000FF0001FE0FFFFC1FFFF83FFFFFFFF
C1FFFF83FFFFFFFFC1FFFF83FFFF40257EA445>I<0003FE0000000FFF8000003E03E000
00F800F80001F0007C0003E0003E0007C0001F000F80000F801F80000FC01F000007C03F
000007E03F000007E07E000003F07E000003F07E000003F07E000003F0FE000003F8FE00
0003F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE0000
03F87E000003F07E000003F07F000007F03F000007E03F000007E01F80000FC00F80000F
800FC0001F8007E0003F0003F0007E0000F800F800007E03F000001FFFC0000003FE0000
25277EA52A>111 D<00FF030003FFE7000F80FF001E003F003C001F0078000F00700007
00F0000700F0000700F0000300F8000300F8000300FC000300FF0000007FE000007FFF00
003FFFE0001FFFF8000FFFFC0003FFFE0000FFFF000007FF8000007F8000001F80C0000F
C0C00007C0C00007C0E00003C0E00003C0E00003C0F00003C0F0000380F8000780FC0007
80FC000F00FF001E00F3C07C00E1FFF000C03F80001A277DA521>115
D<0018000000180000001800000018000000180000003800000038000000380000007800
00007800000078000000F8000001F8000003F8000007F800001FFFFF00FFFFFF00FFFFFF
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F800C001F800C001F800C001F800C001F800C001F800C001F800C001F800C001F800
C000FC01C000FC0180007C0380007E0300003F0700000FFE000001F8001A347FB220>I<
03F00007E000FFF001FFE000FFF001FFE000FFF001FFE0000FF0001FE00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E000
03F00007E00003F00007E00003F00007E00003F0000FE00003F0000FE00003F0000FE000
03F0001FE00001F0001FE00001F8003FE00000F80077F80000FC00E7FF80003F03C7FF80
001FFF87FF800003FC07E00029267EA42E>I<000003000000000F800000001FC0000000
3FC00000007FC0000000FF80000001FE00000003F800000007F00000000FC00000001F00
0000001C0000000010000000000000000000000000000000000000001FE0000000FFFC00
0003E03F000007000F80000F8007E0001FC003F0001FE003F0001FE001F8001FE001F800
1FE000FC000FC000FC00078000FC00000000FC00000000FC00000000FC00000000FC0000
007FFC000007FFFC00003FE0FC0000FE00FC0003F800FC000FF000FC001FC000FC003FC0
00FC007F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000FC0CFE0000FC0CFE0001
FC0CFE0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E180FE0781FF003FFF00F
E0007F8007C026377DB52A>225 D<0003C0008000000FF001C000001FFC038000003FFF
0F000000787FFE000000E01FFC000001C007F80000008001F00000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000003F00FF00000FFF03FFC0000FFF0F0
3F0000FFF1C01F80000FF3800FC00003F7000FC00003FE000FC00003FC0007E00003FC00
07E00003F80007E00003F80007E00003F80007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F000
07E00007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029387EB72E>241
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg ecbx1000 10 11
/Fg 11 226 df<FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF800007FF80000
7FF800FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC1E397DB824>73 D<003FFE00000003FFFF
E000000FFFFFF800001FF00FFE00003FF003FF00003FF801FF80003FF800FFC0003FF800
FFC0003FF8007FE0003FF8007FE0001FF0007FE0000FE0007FE0000380007FE000000000
7FE0000000007FE00000003FFFE000000FFFFFE000007FFFFFE00001FFF87FE00007FF80
7FE0000FFE007FE0003FF8007FE0003FF0007FE0007FE0007FE000FFE0007FE000FFC000
7FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC000FFE000FFE001FFE0007FE001
FFE0003FF007FFF8001FFC1FBFFFC00FFFFE1FFFC003FFF80FFFC0003FE003FFC02A257D
A42E>97 D<0001FFC000000FFFFC00007FFFFF0000FF80FF8003FE00FFC007FC01FFC00F
F801FFC01FF801FFC01FF001FFC03FF001FFC03FF000FF807FE0007F007FE0001C007FE0
000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE000
0000FFE0000000FFE00000007FE00000007FE00000007FF00000003FF00000003FF00001
E01FF80001E01FF80003E00FFC0007C007FE00078003FF001F8000FFC07E00007FFFFC00
000FFFF0000001FF800023257DA42A>99 D<00001FF0000001FFFC000007FFFF00001FF8
7F80003FE0FF8000FFC1FFC000FFC1FFC001FF81FFC001FF81FFC003FF01FFC003FF00FF
8003FF00FF8003FF003E0003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FFFFFF0000FFFFFF000003
FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE0000223A7DB91D>102
D<01F00007FC000FFE000FFE001FFF001FFF001FFF001FFF001FFF000FFE000FFE0007FC
0001F00000000000000000000000000000000000000000000000000000000000FF007FFF
007FFF007FFF007FFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF00FFFFF8FFFFF8FFFFF8FFFFF8153B
7DBA1B>105 D<00FE007FE0000FFC0000FFFE01FFFC003FFF8000FFFE07FFFF00FFFFE0
00FFFE1F81FF83F03FF000FFFE3C00FF87801FF00007FE7800FFCF001FF80003FEF000FF
DE001FF80003FFE0007FFC000FFC0003FFC0007FF8000FFC0003FFC0007FF8000FFC0003
FF80007FF0000FFC0003FF80007FF0000FFC0003FF00007FE0000FFC0003FF00007FE000
0FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00
007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC
0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007F
E0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003
FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE0000FFC0003FF00007FE000
0FFC0003FF00007FE0000FFC00FFFFFC1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF0FFFFFC
1FFFFF83FFFFF0FFFFFC1FFFFF83FFFFF04C257DA451>109 D<00FE007FC000FFFE03FF
F800FFFE0FFFFE00FFFE1F03FF00FFFE3C01FF8007FE7801FF8003FEF000FF8003FFE000
FFC003FFC000FFC003FFC000FFC003FF8000FFC003FF8000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000FFC003FF0000
FFC003FF0000FFC0FFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFFFFFFFC3FFFFF30257DA4
35>I<0001FFC00000000FFFF80000007FFFFF000000FF80FF800003FE003FE00007FC00
1FF0000FF8000FF8001FF00007FC001FF00007FC003FF00007FE003FE00003FE007FE000
03FF007FE00003FF007FE00003FF00FFE00003FF80FFE00003FF80FFE00003FF80FFE000
03FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF807FE000
03FF007FE00003FF007FE00003FF003FE00003FE003FF00007FE001FF00007FC001FF000
07FC000FF8000FF80007FC001FF00003FE003FE00001FF80FFC000007FFFFF0000001FFF
FC00000001FFC0000029257DA430>I<00FE03F000FFFE0FFE00FFFE3FFF00FFFE7C7F80
FFFEF8FFC007FEF0FFC003FFE0FFC003FFC0FFC003FFC0FFC003FF807F8003FF803F0003
FF800C0003FF80000003FF00000003FF00000003FF00000003FF00000003FF00000003FF
00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
00FFFFFE0000FFFFFE0000FFFFFE0000FFFFFE000022257EA427>114
D<000F0000000F0000000F0000000F0000000F0000001F0000001F0000001F0000001F00
00003F0000003F0000007F000000FF000000FF000001FF000007FF00001FFFFFE0FFFFFF
E0FFFFFFE0FFFFFFE003FF000003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF000003FF00
0003FF000003FF000003FF007803FF007803FF007803FF007803FF007803FF007803FF00
7803FF007803FF00F801FF80F001FF81F000FFC3E0003FFFC0001FFF800003FE001D357E
B425>116 D<000007C0000000000FE0000000001FF0000000003FF8000000007FF80000
0000FFF800000001FFF800000003FFF000000007FFF00000000FFFC00000001FFE000000
000FF0000000000F80000000000400000000000000000000000000000000000000000000
000000000000003FFE00000003FFFFE000000FFFFFF800001FF00FFE00003FF003FF0000
3FF801FF80003FF800FFC0003FF800FFC0003FF8007FE0003FF8007FE0001FF0007FE000
0FE0007FE0000380007FE0000000007FE0000000007FE00000003FFFE000000FFFFFE000
007FFFFFE00001FFF87FE00007FF807FE0000FFE007FE0003FF8007FE0003FF0007FE000
7FE0007FE000FFE0007FE000FFC0007FE000FFC0007FE000FFC0007FE000FFC0007FE000
FFC000FFE000FFE001FFE0007FE001FFE0003FF007FFF8001FFC1FBFFFC00FFFFE1FFFC0
03FFF80FFFC0003FE003FFC02A377DB62E>225 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecrm1095 10.95 77
/Fh 77 253 df<000003FE000000001FFFC0000000FE01E0000001F80078000007E0001C
00000FC0007C00001F8000FE00003F0001FE00007F0001FE00007E0001FE0000FE0001FE
0000FC0000FC0000FC0000780000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000000
0000FC0000000000FC00007E00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFFFE0000FC0001FE
0000FC0000FE0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E
0000FC00007E0001FE0000FF007FFFF83FFFFC7FFFF83FFFFC7FFFF83FFFFC2E407FBF32
>28 D<0000300000700000E00001C0000380000700000F00001E00003C00003C00007800
00F00000F00001E00001E00003C00003C00007C0000780000F80000F80000F00001F0000
1F00001E00003E00003E00003E00003C00007C00007C00007C00007C00007C00007C0000
780000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000
F80000F80000F80000F80000F80000F80000F800007800007C00007C00007C00007C0000
7C00007C00003C00003E00003E00003E00001E00001F00001F00000F00000F80000F8000
07800007C00003C00003C00001E00001E00000F00000F000007800003C00003C00001E00
000F000007000003800001C00000E0000070000030145A77C323>40
D<C00000E000007000003800001C00000E00000F000007800003C00003C00001E00000F0
0000F000007800007800003C00003C00003E00001E00001F00001F00000F00000F80000F
800007800007C00007C00007C00003C00003E00003E00003E00003E00003E00003E00001
E00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001
F00001F00001F00001F00001F00001F00001F00001E00003E00003E00003E00003E00003
E00003E00003C00007C00007C00007C0000780000F80000F80000F00001F00001F00001E
00003E00003C00003C0000780000780000F00000F00001E00003C00003C0000780000F00
000E00001C0000380000700000E00000C00000145A7BC323>I<1C007F00FF80FF80FFC0
FFC0FFC07FC01CC000C000C000C000C000C001C00180018003800300070006000E000C00
1C003800700060000A1B788819>44 D<FFFFFEFFFFFEFFFFFEFFFFFEFFFFFE17057F951E
>I<1C007F00FF80FF80FF80FF80FF807F001C000909788819>I<0003FC0000001FFF8000
003E07C00000F801F00001F000F80003E0007C0003C0003C0007C0003E000F80001F000F
80001F001F00000F801F00000F803F00000FC03F00000FC03F00000FC03F00000FC07E00
0007E07E000007E07E000007E07E000007E07E000007E0FE000007F0FE000007F0FE0000
07F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007
F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0
FE000007F0FE000007F0FE000007F0FE000007F07E000007E07E000007E07E000007E07E
000007E07F00000FE03F00000FC03F00000FC03F00000FC03F00000FC01F00000F801F80
001F800F80001F000F80001F0007C0003E0007C0003E0003E0007C0001F000F80000F801
F000003E07C000001FFF80000003FC0000243F7CBC2D>48 D<0000C0000003C0000007C0
00001FC000007FC00007FFC000FFFFC000FF9FC000F81FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0
00007FF000FFFFFFF8FFFFFFF8FFFFFFF81D3D78BC2D>I<0007FC0000003FFF800000FF
FFE00001F00FF800078003FC000F0001FE000E0000FF001C00007F803800003FC0300000
3FC07000001FE06000001FE06000001FE0FE00000FF0FF00000FF0FF80000FF0FF80000F
F0FF80000FF0FF80000FF0FF80000FF07F00000FF01C00000FF00000000FE00000001FE0
0000001FE00000001FC00000003FC00000003F800000007F800000007F00000000FE0000
0001FC00000001FC00000003F800000007F00000000FE00000000FC00000001F80000000
3E000000007C00000000F800000001F000000003E000000003C000000007800000000F00
0030001E000030003C000030007800003000F000006001E000006003C000006007800000
6007000000E00FFFFFFFE01FFFFFFFE03FFFFFFFE07FFFFFFFC0FFFFFFFFC0FFFFFFFFC0
FFFFFFFFC0243D7CBC2D>I<0007FC0000003FFF800000FFFFE00001F807F80007C003FC
000F0001FE000E0000FF001C00007F801F80007F803FC0003FC03FE0003FC03FE0003FC0
3FE0003FC03FE0003FC03FE0003FC01FC0003FC00700003FC00000003F800000007F8000
00007F800000007F00000000FF00000000FE00000001FC00000003F800000003F0000000
0FC00000003F0000001FFC0000001FFF800000000FE000000003F800000001FC00000000
FE000000007F000000007F800000003FC00000003FC00000003FE00000003FE00000001F
E00000001FF00000001FF00C00001FF03F00001FF07F80001FF0FFC0001FF0FFC0001FF0
FFC0001FF0FFC0001FF0FFC0003FE0FF80003FE07F00003FC07000003FC07000007F8038
00007F801C0000FF000F0001FE0007C003FC0003F80FF00000FFFFE000003FFF80000007
FC0000243F7CBC2D>I<0000000E000000000E000000001E000000003E000000003E0000
00007E00000000FE00000000FE00000001FE00000003FE00000003FE00000006FE000000
0EFE0000000CFE00000018FE00000038FE00000030FE00000060FE000000E0FE000000C0
FE00000180FE00000380FE00000300FE00000600FE00000E00FE00000C00FE00001800FE
00003800FE00003000FE00006000FE0000E000FE0000C000FE00018000FE00038000FE00
030000FE00060000FE000E0000FE000C0000FE00180000FE00380000FE00300000FE0060
0000FE00E00000FE00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FE00000000FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE00000000FE00000001FF000001FFFFFF0001FFFFFF0001FFFFFF283E7EBD
2D>I<060000030007C0000F0007F800FE0007FFFFFC0007FFFFFC0007FFFFF00007FFFF
E00007FFFFC00007FFFF0000063FF8000006000000000600000000060000000006000000
000600000000060000000006000000000600000000060000000006000000000600000000
060000000006000000000601FE0000060FFF8000063E03E000067001F80006E000FC0007
C0007E000780003F000700003F800600001F800000001FC00000001FC00000001FE00000
000FE00000000FE00000000FE00000000FF00000000FF00000000FF00000000FF03E0000
0FF07F00000FF0FF80000FF0FF80000FF0FF80000FF0FF80000FF0FF00000FE0FE00001F
E0E000001FE06000001FC07000001FC03000003F803800003F801C00007F001E0000FE00
0F0001FC0007C003F80003F00FE00000FFFFC000003FFF00000007F80000243F7CBC2D>
I<00001FE0000000FFF8000003FFFE00000FF01F00001F800780003F000380007E000FC0
00FC001FC001F8003FC003F0003FC003F0003FC007E0003FC00FE0001F800FC0000F001F
C00000001FC00000001F800000003F800000003F800000003F800000007F800000007F00
0000007F01FE00007F07FF8000FF0E03E000FF1C01F000FF3800FC00FF70007E00FF6000
3E00FFE0003F00FFC0001F80FFC0001FC0FF80001FC0FF80001FE0FF80000FE0FF80000F
E0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF07F00000FF0
7F00000FF07F00000FF07F00000FF07F00000FF03F80000FF03F80000FE03F80000FE01F
80000FE01F80001FC01FC0001FC00FC0001F800FC0003F8007E0003F0003F0007E0001F8
00FC0000FC01F800007E07F000003FFFE000000FFF80000003FC0000243F7CBC2D>I<30
0000000038000000003E000000003FFFFFFFFC3FFFFFFFFC3FFFFFFFFC3FFFFFFFF87FFF
FFFFF87FFFFFFFF07FFFFFFFE070000000E060000001C060000003806000000300600000
0700C000000E00C000000C00C000001C00C00000380000000030000000007000000000E0
00000001C000000001800000000380000000070000000007000000000E000000000E0000
00001C000000001C000000003C00000000380000000078000000007800000000F8000000
00F000000001F000000001F000000001F000000003F000000003F000000003F000000007
F000000007E000000007E000000007E00000000FE00000000FE00000000FE00000000FE0
0000000FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE000
00001FE00000001FE00000001FE00000001FE00000000FC00000000780000026407BBD2D
>I<1C007F00FF80FF80FF80FF80FF807F001C0000000000000000000000000000000000
00000000000000000000000000000000000000000000000000001C007F00FF80FF80FF80
FF80FF807F001C00092778A619>58 D<1C007F00FF80FF80FF80FF80FF807F001C000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000001C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000C000C000C000C001C00180
018003800300070006000E000C001C003800700060000A3978A619>I<0000000000000E
0000000000003C000000000000F0000000000007C000000000001F000000000000780000
00000001E00000000000078000000000001E000000000000F8000000000003E000000000
000F0000000000003C000000000000F0000000000003C000000000001F0000000000007C
000000000001E00000000000078000000000001E00000000000078000000000003E00000
0000000F8000000000003C000000000000F0000000000000F00000000000003C00000000
00000F80000000000003E0000000000000780000000000001E0000000000000780000000
000001E00000000000007C0000000000001F00000000000003C0000000000000F0000000
0000003C0000000000000F00000000000003E0000000000000F80000000000001E000000
0000000780000000000001E0000000000000780000000000001F00000000000007C00000
00000000F00000000000003C0000000000000E373279AF46>I<E0000000000000780000
000000001E00000000000007C0000000000001F00000000000003C0000000000000F0000
0000000003C0000000000000F00000000000003E0000000000000F80000000000001E000
0000000000780000000000001E0000000000000780000000000001F00000000000007C00
00000000000F00000000000003C0000000000000F00000000000003C0000000000000F80
000000000003E0000000000000780000000000001E0000000000001E0000000000007800
0000000003E000000000000F8000000000003C000000000000F0000000000003C0000000
00000F0000000000007C000000000001F00000000000078000000000001E000000000000
78000000000001E000000000000F8000000000003E000000000000F0000000000003C000
000000000F0000000000003C000000000001F0000000000007C000000000001E00000000
000078000000000000E0000000000000373279AF46>62 D<000000070000000000000007
0000000000000007000000000000000F800000000000000F800000000000001FC0000000
0000001FC00000000000001FC00000000000003FE00000000000003FE00000000000003F
E00000000000007FF00000000000006FF00000000000006FF0000000000000CFF8000000
000000C7F8000000000000C7F800000000000187FC00000000000183FC00000000000183
FC00000000000301FE00000000000301FE00000000000301FE00000000000600FF000000
00000600FF00000000000E00FF80000000000C007F80000000000C007F80000000001C00
7FC00000000018003FC00000000018003FC00000000030003FE00000000030001FE00000
000030001FE00000000060001FF00000000060000FF00000000060000FF000000000C000
07F800000000C00007F800000000C00007F800000001800003FC00000001FFFFFFFC0000
0003FFFFFFFE00000003FFFFFFFE00000003000001FE00000007000001FF000000060000
00FF00000006000000FF0000000C000000FF8000000C0000007F8000000C0000007F8000
00180000007FC00000180000003FC00000180000003FC00000300000001FE00000300000
001FE00000700000001FE00000700000000FF00000F00000000FF00001F00000000FF800
03F80000000FF8000FFE0000003FFE00FFFFC00007FFFFF8FFFFC00007FFFFF8FFFFC000
07FFFFF83D417DC044>65 D<FFFFFFFFFC0000FFFFFFFFFFC000FFFFFFFFFFF00000FFC0
000FFC00007F800003FE00007F800000FF00007F8000007F80007F8000003FC0007F8000
003FE0007F8000001FE0007F8000001FF0007F8000000FF0007F8000000FF8007F800000
0FF8007F8000000FF8007F8000000FF8007F8000000FF8007F8000000FF8007F8000000F
F8007F8000000FF0007F8000001FF0007F8000001FE0007F8000003FE0007F8000003FC0
007F8000007F80007F800000FF00007F800003FE00007F80000FF800007F80007FE00000
7FFFFFFF0000007FFFFFFFE000007F800003FC00007F800000FE00007F8000007F80007F
8000003FC0007F8000001FE0007F8000000FF0007F8000000FF8007F80000007F8007F80
000007FC007F80000003FC007F80000003FC007F80000003FE007F80000003FE007F8000
0003FE007F80000003FE007F80000003FE007F80000003FE007F80000003FE007F800000
03FC007F80000007FC007F80000007FC007F8000000FF8007F8000000FF0007F8000001F
F0007F8000003FE0007F8000007FC0007F800001FF8000FFC0000FFE00FFFFFFFFFFFC00
FFFFFFFFFFE000FFFFFFFFFF0000373E7DBD40>I<0000003FF0000C000003FFFE001C00
001FFFFF801C00007FE00FC03C0000FF0001F07C0003FC0000787C0007F000003CFC001F
E000000FFC003FC0000007FC007F80000003FC00FF00000003FC01FE00000001FC01FC00
000000FC03FC00000000FC07F8000000007C07F8000000007C0FF0000000003C0FF00000
00003C1FE0000000001C1FE0000000001C3FE0000000001C3FC0000000001C3FC0000000
000C7FC0000000000C7FC0000000000C7FC0000000000C7F800000000000FF8000000000
00FF800000000000FF800000000000FF800000000000FF800000000000FF800000000000
FF800000000000FF800000000000FF800000000000FF800000000000FF800000000000FF
8000000000007F8000000000007FC000000000007FC0000000000C7FC0000000000C3FC0
000000000C3FC0000000000C3FE0000000000C1FE0000000001C1FE000000000180FF000
000000180FF0000000001807F8000000003807F8000000003003FC000000007001FC0000
00006001FE00000000E000FF00000001C0007F8000000380003FC000000780001FE00000
0F000007F000001E000003FC00003C000000FF0000F00000007FE007E00000001FFFFF80
00000003FFFE00000000003FF0000036427BBF41>I<FFFFFFFFFC000000FFFFFFFFFF80
0000FFFFFFFFFFE0000000FFC0001FF80000007F800003FE0000007F800000FF0000007F
8000003F8000007F8000001FC000007F8000000FE000007F80000007F000007F80000003
F800007F80000001FC00007F80000001FC00007F80000000FE00007F80000000FF00007F
800000007F00007F800000007F80007F800000003F80007F800000003FC0007F80000000
3FC0007F800000003FC0007F800000003FE0007F800000001FE0007F800000001FE0007F
800000001FE0007F800000001FE0007F800000001FF0007F800000001FF0007F80000000
1FF0007F800000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F
800000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F80000000
1FE0007F800000001FE0007F800000001FE0007F800000001FE0007F800000003FE0007F
800000003FC0007F800000003FC0007F800000003F80007F800000007F80007F80000000
7F80007F800000007F00007F80000000FE00007F80000000FE00007F80000001FC00007F
80000003F800007F80000007F800007F8000000FF000007F8000001FE000007F8000003F
C000007F800000FF0000007F800003FE000000FFC0001FF80000FFFFFFFFFFF00000FFFF
FFFFFF800000FFFFFFFFFC0000003C3E7DBD45>I<FFFFFFFFFFFFC0FFFFFFFFFFFFC0FF
FFFFFFFFFFC000FFC00001FFC0007F8000001FC0007F8000000FE0007F80000003E0007F
80000003E0007F80000001E0007F80000000E0007F80000000E0007F80000000E0007F80
00000060007F8000000060007F8000000060007F8000000060007F8000000030007F8000
300030007F8000300030007F8000300030007F8000300030007F8000300000007F800030
0000007F8000700000007F8000700000007F8000F00000007F8001F00000007F8007F000
00007FFFFFF00000007FFFFFF00000007FFFFFF00000007F8007F00000007F8001F00000
007F8000F00000007F8000700000007F8000700000007F8000300000007F800030000000
7F8000300006007F8000300006007F8000300006007F800030000C007F800000000C007F
800000000C007F800000000C007F800000000C007F800000001C007F8000000018007F80
00000018007F8000000038007F8000000038007F8000000078007F8000000078007F8000
0000F0007F80000001F0007F80000003F0007F80000007F0007F8000001FF000FFC00001
FFF0FFFFFFFFFFFFE0FFFFFFFFFFFFE0FFFFFFFFFFFFE0373E7DBD3D>I<FFFFFFFFFFFF
80FFFFFFFFFFFF80FFFFFFFFFFFF8000FFC00003FF80007F8000003F80007F8000001FC0
007F80000007C0007F80000003C0007F80000003C0007F80000001C0007F80000001C000
7F80000001C0007F80000000C0007F80000000C0007F80000000C0007F80000000C0007F
8000000060007F8000000060007F8000300060007F8000300060007F8000300060007F80
00300000007F8000300000007F8000300000007F8000700000007F8000700000007F8000
F00000007F8001F00000007F8007F00000007FFFFFF00000007FFFFFF00000007FFFFFF0
0000007F8007F00000007F8001F00000007F8000F00000007F8000700000007F80007000
00007F8000300000007F8000300000007F8000300000007F8000300000007F8000300000
007F8000300000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
0000000000FFE000000000FFFFFFF0000000FFFFFFF0000000FFFFFFF0000000333E7DBD
3B>I<0000003FF0000C00000003FFFE001C0000001FFFFF801C0000007FE00FC03C0000
00FF0001F07C000003FC0000787C000007F000003CFC00001FE000000FFC00003FC00000
07FC00007F80000003FC0000FF00000003FC0001FE00000001FC0001FC00000000FC0003
FC00000000FC0007F8000000007C0007F8000000007C000FF0000000003C000FF0000000
003C001FE0000000001C001FE0000000001C003FE0000000001C003FC0000000001C003F
C0000000000C007FC0000000000C007FC0000000000C007FC0000000000C007F80000000
000000FF80000000000000FF80000000000000FF80000000000000FF80000000000000FF
80000000000000FF80000000000000FF80000000000000FF80000000000000FF80000000
000000FF80000000000000FF80000000000000FF8000001FFFFFF07F8000001FFFFFF07F
C000001FFFFFF07FC00000000FFE007FC000000003FC003FC000000003FC003FC0000000
03FC003FE000000003FC001FE000000003FC001FE000000003FC000FF000000003FC000F
F000000003FC0007F800000003FC0007F800000003FC0003FC00000003FC0001FE000000
03FC0001FE00000003FC0000FF00000003FC00007F80000007FC00003FC0000007FC0000
1FE000000FFC000007F800001CFC000003FC0000387C000000FF0000F03C0000007FF007
E01C0000001FFFFF800C00000003FFFE0000000000003FF00000003C427BBF47>I<FFFF
FFC01FFFFFF8FFFFFFC01FFFFFF8FFFFFFC01FFFFFF800FFC000001FF800007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007FFFFFFFFFF000007FFFFFFFFFF000007FFFFFFFFFF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000F
F000007F8000000FF000007F8000000FF000007F8000000FF000007F8000000FF000007F
8000000FF000007F8000000FF000007F8000000FF000007F8000000FF00000FFC000001F
F800FFFFFFC01FFFFFF8FFFFFFC01FFFFFF8FFFFFFC01FFFFFF83D3E7DBD44>I<FFFFFF
C0FFFFFFC0FFFFFFC001FFE000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80
00007F8000007F8000007F800001FFE000FFFFFFC0FFFFFFC0FFFFFFC01A3E7DBD21>I<
000FFFFFF8000FFFFFF8000FFFFFF8000007FF00000001FE00000001FE00000001FE0000
0001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE000000
01FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001
FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE
00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00
000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE0000
0001FE00000001FE00000001FE00000001FE003F0001FE007F8001FE00FFC001FE00FFC0
01FE00FFC001FE00FFC001FE00FFC003FC00FF8003FC007F0003F8006C0007F800700007
F00038000FE0001C001FC0000F003F800003C07E000000FFF80000003FC0000025407DBD
2E>I<FFFFFFC0000FFFF8FFFFFFC0000FFFF8FFFFFFC0000FFFF800FFC0000003FF8000
7F80000001FC00007F80000001F800007F80000001E000007F80000003C000007F800000
038000007F800000070000007F8000000E0000007F8000001C0000007F80000038000000
7F800000F00000007F800001C00000007F800003800000007F800007000000007F80000E
000000007F80001C000000007F800038000000007F800070000000007F8000E000000000
7F8001C0000000007F800380000000007F800780000000007F800FC0000000007F801FC0
000000007F803FE0000000007F807FF0000000007F80FFF0000000007F81CFF800000000
7F8387FC000000007F8707FC000000007F8E03FE000000007F9C01FF000000007FB801FF
000000007FF000FF800000007FE0007FC00000007F80007FC00000007F80003FE0000000
7F80001FF00000007F80001FF00000007F80000FF80000007F800007FC0000007F800007
FC0000007F800003FE0000007F800001FF0000007F800001FF0000007F800000FF800000
7F8000007FC000007F8000007FC000007F8000003FE000007F8000001FF000007F800000
1FF000007F8000000FF800007F8000000FFC00007F80000007FE00007F8000000FFF0000
FFC000001FFF80FFFFFFC000FFFFFCFFFFFFC000FFFFFCFFFFFFC000FFFFFC3E3E7DBD46
>I<FFFFFFF00000FFFFFFF00000FFFFFFF0000000FFE0000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000000007F80000000007F80000000007F8000
0000007F80000000007F80000000007F80000003007F80000003007F80000003007F8000
0003007F80000003007F80000007007F80000006007F80000006007F80000006007F8000
0006007F8000000E007F8000000E007F8000000E007F8000001E007F8000001E007F8000
003E007F8000007E007F800000FE007F800001FC007F800007FC00FFC0003FFCFFFFFFFF
FFFCFFFFFFFFFFFCFFFFFFFFFFFC303E7DBD38>I<FFFF80000000001FFFF0FFFFC00000
00003FFFF0FFFFC0000000003FFFF000FFC0000000003FF000006FE0000000006FE00000
6FE0000000006FE0000067F000000000CFE0000067F000000000CFE0000067F000000000
CFE0000063F8000000018FE0000063F8000000018FE0000061FC000000030FE0000061FC
000000030FE0000061FC000000030FE0000060FE000000060FE0000060FE000000060FE0
0000607F0000000C0FE00000607F0000000C0FE00000607F0000000C0FE00000603F8000
00180FE00000603F800000180FE00000603F800000180FE00000601FC00000300FE00000
601FC00000300FE00000600FE00000600FE00000600FE00000600FE00000600FE0000060
0FE000006007F00000C00FE000006007F00000C00FE000006003F80001800FE000006003
F80001800FE000006003F80001800FE000006001FC0003000FE000006001FC0003000FE0
00006000FE0006000FE000006000FE0006000FE000006000FE0006000FE0000060007F00
0C000FE0000060007F000C000FE0000060003F8018000FE0000060003F8018000FE00000
60003F8018000FE0000060001FC030000FE0000060001FC030000FE0000060000FE06000
0FE0000060000FE060000FE0000060000FE060000FE00000600007F0C0000FE000006000
07F0C0000FE00000600003F980000FE00000600003F980000FE00000600003F980000FE0
0000600001FF00000FE00000600001FF00000FE00000600000FE00000FE00000600000FE
00000FE00000F00000FE00000FE00001F800007C00000FE00007FE00007C00001FF000FF
FFF00038001FFFFFF0FFFFF00038001FFFFFF0FFFFF00038001FFFFFF04C3E7DBD53>I<
FFFF8000007FFFF8FFFFC000007FFFF8FFFFE000007FFFF8007FE0000003FF00007FF000
0000FC00006FF80000007800006FFC00000030000067FC00000030000063FE0000003000
0063FF00000030000061FF00000030000060FF800000300000607FC00000300000607FC0
0000300000603FE00000300000601FF00000300000601FF00000300000600FF800003000
006007FC00003000006007FC00003000006003FE00003000006001FF00003000006001FF
00003000006000FF800030000060007FC00030000060007FE00030000060003FE0003000
0060001FF00030000060001FF80030000060000FF800300000600007FC00300000600007
FE00300000600003FE00300000600001FF00300000600000FF80300000600000FF803000
006000007FC03000006000003FE03000006000003FE03000006000001FF0300000600000
0FF83000006000000FF830000060000007FC30000060000003FE30000060000003FE3000
0060000001FF30000060000000FFB0000060000000FFF00000600000007FF00000600000
003FF00000600000003FF00000600000001FF00000600000000FF000006000000007F000
006000000007F000006000000003F00000F000000001F00001F800000001F00007FE0000
0000F000FFFFF00000007000FFFFF00000007000FFFFF000000030003D3E7DBD44>I<00
0000FFE0000000000007FFFC00000000003FC07F8000000000FE000FE000000001F80003
F000000007E00000FC0000000FC000007E0000001F8000003F0000003F0000001F800000
7E0000000FC00000FE0000000FE00001FC00000007F00003F800000003F80003F8000000
03F80007F000000001FC0007F000000001FC000FE000000000FE001FE000000000FF001F
E000000000FF001FC0000000007F003FC0000000007F803FC0000000007F803FC0000000
007F807FC0000000007FC07F80000000003FC07F80000000003FC07F80000000003FC0FF
80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000
003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF
80000000003FE0FF80000000003FE0FF80000000003FE07F80000000003FC07FC0000000
007FC07FC0000000007FC07FC0000000007FC07FC0000000007FC03FC0000000007F803F
E000000000FF801FE000000000FF001FE000000000FF001FE000000000FF000FF0000000
01FE000FF000000001FE0007F800000003FC0003F800000003F80003FC00000007F80001
FC00000007F00000FE0000000FE000007F0000001FC000003F8000003F8000001F800000
3F0000000FE00000FE00000007F00001FC00000001F80003F000000000FE000FE0000000
003FC07F800000000007FFFC000000000000FFE00000003B427BBF46>I<FFFFFFFFF000
00FFFFFFFFFF0000FFFFFFFFFFC00000FFC0003FF000007F800007F800007F800001FE00
007F800000FF00007F8000007F00007F8000007F80007F8000003FC0007F8000003FC000
7F8000001FE0007F8000001FE0007F8000001FF0007F8000001FF0007F8000001FF0007F
8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F80
00001FE0007F8000001FE0007F8000003FC0007F8000003FC0007F8000007F80007F8000
007F00007F800000FE00007F800003FC00007F800007F800007F80003FE000007FFFFFFF
8000007FFFFFFC0000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F8000000000007F8000000000
007F8000000000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
0000000000FFC000000000FFFFFFC0000000FFFFFFC0000000FFFFFFC0000000343E7DBD
3D>I<000000FFE0000000000007FFFC00000000003FC07F8000000000FE000FE0000000
01F80003F000000007F00001FC0000000FC000007E0000001F8000003F0000003F000000
1F8000007F0000001FC00000FE0000000FE00001FC00000007F00003FC00000007F80003
F800000003F80007F800000003FC0007F000000001FC000FF000000001FE001FE0000000
00FF001FE000000000FF001FE000000000FF003FC0000000007F803FC0000000007F803F
C0000000007F807FC0000000007FC07FC0000000007FC07F80000000003FC07F80000000
003FC0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF
80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000
003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE07F80000000003FC07F
80000000003FC07FC0000000007FC07FC0000000007FC07FC0000000007FC03FC0000000
007F803FC0000000007F801FE000000000FF001FE000000000FF001FE000000000FF000F
F000000001FE000FF000000001FE0007F0001F0001FC0003F8007FC003F80003F800E070
03F80001FC01C03807F00000FE0380180FE000007E03001C0FC000003F03000C1F800000
1F83000E3F0000000FC300067E00000007F30007FC00000001FB8007F000000000FFC00F
E0000000003FE07F800060000007FFFF800060000000FFE38000600000000003C0006000
00000003C000E00000000003E000E00000000003E001E00000000001F003E00000000001
F807C00000000001FC0FC00000000001FFFFC00000000001FFFFC00000000000FFFF8000
00000000FFFF8000000000007FFF0000000000007FFE0000000000003FFE000000000000
1FF800000000000007E0003B527BBF46>I<FFFFFFFFC0000000FFFFFFFFFC000000FFFF
FFFFFF80000000FFC0007FE00000007F80000FF00000007F800003FC0000007F800001FE
0000007F800000FF0000007F8000007F8000007F8000003FC000007F8000003FC000007F
8000003FE000007F8000001FE000007F8000001FF000007F8000001FF000007F8000001F
F000007F8000001FF000007F8000001FF000007F8000001FF000007F8000001FF000007F
8000001FE000007F8000003FE000007F8000003FC000007F8000003F8000007F8000007F
8000007F800000FF0000007F800001FC0000007F800003F80000007F80000FE00000007F
8000FF800000007FFFFFFC000000007FFFFFF8000000007F8000FF000000007F80003FC0
0000007F80000FE00000007F800007F00000007F800003F80000007F800003FC0000007F
800001FE0000007F800001FE0000007F800000FF0000007F800000FF0000007F800000FF
0000007F800000FF0000007F800000FF0000007F800000FF0000007F800000FF8000007F
800000FF8000007F800000FF8000007F800000FF8000007F800000FF8000007F800000FF
8000007F800000FF8000007F800000FF8006007F800000FFC006007F8000007FC006007F
8000007FC006007F8000007FC00E00FFC000003FE00CFFFFFFC0001FE01CFFFFFFC0000F
F038FFFFFFC00007F870000000000001FFE00000000000003F803F407DBD43>I<0007FC
0018003FFF803800FFFFE03801FC03F87803F0007C7807C0001EF80F80000FF81F000007
F83F000003F83E000001F87E000000F87E000000F87C00000078FC00000078FC00000078
FC00000038FC00000038FC00000038FE00000018FE00000018FF00000018FF000000187F
800000007FC00000007FE00000003FF80000003FFF0000001FFFF000000FFFFF00000FFF
FFF00007FFFFFC0001FFFFFE0000FFFFFF80003FFFFFC00007FFFFE000007FFFE0000007
FFF00000007FF80000001FF80000000FFC00000007FC00000003FC00000001FE00000001
FEC0000000FEC0000000FEC0000000FEC00000007EC00000007EE00000007EE00000007E
E00000007EE00000007CF00000007CF0000000FCF8000000F8FC000001F8FE000001F0FF
000003F0FF800007E0FBE0000FC0F1F8001F80F07F007F00E01FFFFC00E007FFF000C000
7FC00027427BBF32>I<3FFFFFFFFFFFFF003FFFFFFFFFFFFF003FFFFFFFFFFFFF003FE0
00FFC001FF003F00007F80003F007E00007F80001F807C00007F80000F807800007F8000
07807000007F800003807000007F800003807000007F800003806000007F800001806000
007F800001806000007F800001806000007F800001806000007F80000180C000007F8000
00C0C000007F800000C0C000007F800000C0C000007F800000C0C000007F800000C00000
007F800000000000007F800000000000007F800000000000007F800000000000007F8000
00000000007F800000000000007F800000000000007F800000000000007F800000000000
007F800000000000007F800000000000007F800000000000007F800000000000007F8000
00000000007F800000000000007F800000000000007F800000000000007F800000000000
007F800000000000007F800000000000007F800000000000007F800000000000007F8000
00000000007F800000000000007F800000000000007F800000000000007F800000000000
007F800000000000007F800000000000007F800000000000007F800000000000007F8000
00000000007F800000000000007F800000000000007F800000000000007F800000000000
00FFC0000000000001FFE00000000007FFFFFFF800000007FFFFFFF800000007FFFFFFF8
00003A3E7DBD41>I<FFFFFFC0007FFFF8FFFFFFC0007FFFF8FFFFFFC0007FFFF800FFC0
000003FF00007F80000000FC00007F800000007800007F800000003000007F8000000030
00007F800000003000007F800000003000007F800000003000007F800000003000007F80
0000003000007F800000003000007F800000003000007F800000003000007F8000000030
00007F800000003000007F800000003000007F800000003000007F800000003000007F80
0000003000007F800000003000007F800000003000007F800000003000007F8000000030
00007F800000003000007F800000003000007F800000003000007F800000003000007F80
0000003000007F800000003000007F800000003000007F800000003000007F8000000030
00007F800000003000007F800000003000007F800000003000007F800000003000007F80
0000003000007F800000003000007F800000003000007F800000003000007F8000000030
00007F800000003000007F800000003000003F800000007000003FC00000006000003FC0
0000006000003FC0000000E000001FC0000000C000001FE0000001C000000FE0000001C0
00000FF000000380000007F000000700000003F800000F00000001FC00000E00000000FE
00003C000000007F000078000000003FC001F0000000000FF00FE00000000003FFFF8000
00000000FFFE0000000000001FF00000003D407DBD44>I<FFFFFE000003FFFEFFFFFE00
0003FFFEFFFFFE000003FFFE03FFC00000007FE001FF800000001F8000FF000000001F00
00FF800000000E00007F800000000C00007F800000000C00007FC00000001C00003FC000
00001800003FE00000001800001FE00000003000001FE00000003000001FF00000007000
000FF00000006000000FF000000060000007F8000000C0000007F8000000C0000007FC00
0000C0000003FC00000180000003FC00000180000003FE00000380000001FE0000030000
0001FF00000300000000FF00000600000000FF00000600000000FF80000E000000007F80
000C000000007F80000C000000003FC00018000000003FC00018000000003FE000180000
00001FE00030000000001FE00030000000001FF00070000000000FF00060000000000FF8
00600000000007F800C00000000007F800C00000000007FC01C00000000003FC01800000
000003FC01800000000001FE03000000000001FE03000000000001FF03000000000000FF
06000000000000FF06000000000000FF8E0000000000007F8C0000000000007FCC000000
0000003FD80000000000003FD80000000000003FF80000000000001FF00000000000001F
F00000000000000FE00000000000000FE00000000000000FE000000000000007C0000000
00000007C000000000000007C0000000000000038000000000000003800000003F407EBD
44>I<FFFFFE003FFFFF8001FFFFFFFFFE003FFFFF8001FFFFFFFFFE003FFFFF8001FFFF
07FFC00001FFF000003FF803FF0000007FC000000FE001FF0000007FC0000007C001FF00
00003FC00000038000FF0000003FC00000030000FF0000003FC00000030000FF8000001F
E000000700007F8000001FE000000600007F8000001FE000000600007FC000003FF00000
0600003FC000003FF000000C00003FC000003FF000000C00003FE000007FF800000C0000
1FE0000067F800001800001FE0000067F800001800001FE00000E7FC00001800000FF000
00C3FC00003000000FF00000C3FC00003000000FF00001C3FE000030000007F8000181FE
000060000007F8000181FE000060000007F8000181FF000060000003FC000300FF0000C0
000003FC000300FF0000C0000003FC000300FF0000C0000001FE0006007F800180000001
FE0006007F800180000001FE0006007F800180000001FF000C003FC00380000000FF000C
003FC00300000000FF000C003FC00300000000FF8018001FE007000000007F8018001FE0
06000000007F8018001FE006000000007FC030000FF006000000003FC030000FF00C0000
00003FC030000FF00C000000003FE070000FF80C000000001FE0600007F818000000001F
E0600007F818000000001FE0E00007FC18000000000FF0C00003FC30000000000FF0C000
03FC30000000000FF1C00003FE300000000007F9800001FE600000000007F9800001FE60
0000000007F9800001FF600000000003FF000000FFC00000000003FF000000FFC0000000
0003FF000000FFC00000000001FE0000007F800000000001FE0000007F800000000001FE
0000007F800000000001FC0000003F800000000000FC0000003F000000000000FC000000
3F000000000000F80000001F000000000000780000001E000000000000780000001E0000
00000000700000000E000000000000300000000C00000058407EBD5D>I<7FFFFF8001FF
FFE07FFFFF8001FFFFE07FFFFF8001FFFFE000FFFC00003FFC00003FF800001FE000001F
F000000F8000001FF000000F0000000FF800000E00000007FC00000C00000007FC00001C
00000003FE00003800000001FF00003000000001FF00006000000000FF8000E000000000
7FC000C0000000007FC00180000000003FE00380000000001FF00300000000001FF00600
000000000FF80E000000000007FC0C000000000007FC18000000000003FE380000000000
01FF30000000000001FF60000000000000FFE00000000000007FC00000000000007FC000
00000000003FE00000000000001FF00000000000001FF00000000000000FF80000000000
001FFC0000000000001FFC00000000000033FE00000000000071FF00000000000061FF00
0000000000C0FF800000000001C07FC00000000001807FC00000000003003FE000000000
07001FF00000000006001FF0000000000C000FF8000000001C0007FC00000000380007FC
00000000300003FE00000000700001FF00000000E00001FF00000000C00000FF80000001
8000007FC00000038000007FC00000030000003FE00000070000001FF000000E0000001F
F000001E0000000FF800003E0000000FFC0000FF0000000FFE0007FFC000003FFF00FFFF
F00001FFFFFEFFFFF00001FFFFFEFFFFF00001FFFFFE3F3E7EBD44>I<FFFFFF000000FF
FF80FFFFFF000000FFFF80FFFFFF000000FFFF8001FFF00000003FF80000FFE00000000F
C000007FE00000000F8000003FE00000000F0000003FF00000000E0000001FF00000000C
0000000FF8000000180000000FFC0000003800000007FC0000003000000003FE00000070
00000003FE0000006000000001FF000000C000000001FF800001C000000000FF80000180
000000007FC0000380000000007FE0000300000000003FE0000600000000001FF0000E00
000000001FF0000C00000000000FF8001C00000000000FFC0018000000000007FC003000
0000000003FE0070000000000003FE0060000000000001FF00E0000000000000FF80C000
0000000000FF81800000000000007FC3800000000000007FE3000000000000003FE70000
00000000001FF6000000000000001FFC000000000000000FFC0000000000000007F80000
000000000007F80000000000000007F80000000000000007F80000000000000007F80000
000000000007F80000000000000007F80000000000000007F80000000000000007F80000
000000000007F80000000000000007F80000000000000007F80000000000000007F80000
000000000007F80000000000000007F80000000000000007F80000000000000007F80000
000000000007F80000000000000007F80000000000000007F80000000000000007F80000
000000000007F8000000000000000FFC0000000000000FFFFFFC00000000000FFFFFFC00
000000000FFFFFFC000000413E7FBD44>I<3FFFFFFFFFF03FFFFFFFFFF03FFFFFFFFFF0
3FFE00003FE03FF000003FE03FC000007FC03F0000007FC03E000000FF803C000001FF00
3C000001FF0038000003FE0078000003FC0070000007FC007000000FF8007000000FF800
7000001FF0006000003FE0006000003FE0006000007FC0006000007FC000600000FF8000
000001FF0000000001FF0000000003FE0000000003FC0000000007FC000000000FF80000
00000FF8000000001FF0000000003FE0000000003FE0000000007FC0000000007FC00000
0000FF8000000001FF0000000001FF0000000003FE0000000003FC0000000007FC000018
000FF8000018000FF8000018001FF0000018003FE0000018003FE0000018007FC0000018
007FC000003800FF8000003801FF0000003801FF0000003803FE0000003803FC00000070
07FC000000700FF8000000F00FF8000000F01FF0000001F03FE0000003F03FE000000FF0
7FC000003FF07FC00001FFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF02D3E7BBD37>
I<001FF0000000FFFC000003E03F00000F000FC0001C0007E0001F0003F0003F8001F800
3FC000FC003FC000FC003FC000FC003FC0007E001F80007E000F00007E000000007E0000
00007E000000007E000000007E0000001FFE000003FFFE00001FF87E00007F807E0001FC
007E0007F0007E000FE0007E001FC0007E003F80007E007F80007E007F00007E007F0000
7E03FE00007E03FE00007E03FE00007E03FE0000FE03FE0000FE03FE0001FE037F0001BE
037F0003BE033F80071F061FC00E1F8E0FF03C0FFC03FFF007F8003FC003E0282A7CA82D
>97 D<01F800000000FFF800000000FFF800000000FFF80000000007F80000000003F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F807
F8000001F81FFF000001F8780FC00001F9E003F00001FB8001F80001FF0000FC0001FE00
007E0001FC00003F0001FC00001F8001F800001F8001F800001FC001F800000FC001F800
000FE001F800000FE001F8000007E001F8000007F001F8000007F001F8000007F001F800
0007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F800
0007F001F8000007E001F800000FE001F800000FE001F800000FE001F800000FC001F800
001FC001F800001F8001FC00003F0001FE00003F0001F600007E0001F70000FC0001E380
01F80001C1C003E00001C0F81F800001803FFE0000000007F000002C407EBE32>I<0001
FF0000000FFFE000003F00F800007C001E0001F800070003F0001F0007E0003F800FC000
7F800FC0007F801F80007F801F80007F803F00003F003F00001E007F000000007F000000
007E00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE00000000FE00000000FE00000000FE000000007F000000007F000000007F
000000003F000000C03F800000C01F800001C01FC00001800FC000038007E000070003F0
00060001F8001E0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>I<00
000001F800000000FFF800000000FFF800000000FFF80000000007F80000000003F80000
000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000
000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000
000001F80000000001F80000000001F80000000001F80000000001F8000000FF01F80000
07FFC1F800001F80F1F800007C0039F80001F8001DF80003F0000FF80007E00007F8000F
C00003F8000FC00003F8001F800001F8003F800001F8003F000001F8007F000001F8007F
000001F8007F000001F8007E000001F800FE000001F800FE000001F800FE000001F800FE
000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE
000001F8007E000001F8007F000001F8007F000001F8003F000001F8003F800001F8001F
800003F8001F800003F8000FC00007F80007E0000FF80003F0000DFC0001F8003DFE0000
FC0071FFF0003F01E1FFF0000FFF81FFF00001FE01F8002C407DBE32>I<0003FC000000
1FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E000FC0003F001F80
001F001F80001F803F00001F803F00000F807F00000F807F00000FC07E00000FC07E0000
0FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE00000000FE000000
00FE00000000FE00000000FE000000007E000000007F000000007F000000007F00000000
3F000000C03F800000C01F800001C00FC00001800FC000038007E000070003F0000E0001
F8001C0000FC003800003F01F000000FFFC0000001FE0000222A7DA828>I<00001FC000
00FFF00003F0380007C0FC000F81FE001F81FE003F01FE003E01FE007E01FE007E00FC00
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC0000FFFFFF00FFFFFF00FFFFFF0000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000
FC000000FC000000FC000000FC000000FC000001FE00007FFFFE007FFFFE007FFFFE001F
407FBF1C>I<000000007E000003FC01FF00000FFF078780003E07CE0F8000FC03FC0F80
01F801F80F8003F000FC070003E0007C000007E0007E000007E0007E00000FC0003F0000
0FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F00000FC0003F0000
0FC0003F000007E0007E000007E0007E000003E0007C000003F000FC000001F801F80000
01FC03F0000001BE07C00000038FFF0000000303FC000000070000000000070000000000
07000000000007000000000007800000000007800000000007C00000000003E000000000
03FFFFF0000001FFFFFE000001FFFFFF8000007FFFFFE00001FFFFFFF80007C0001FF800
1F800003FC003F000000FE003E0000007E007C0000003E007C0000003F00F80000001F00
F80000001F00F80000001F00F80000001F00F80000001F00FC0000003F007C0000003E00
7E0000007E003F000000FC001F800001F8000FC00003F00003F0000FC00000FE007F0000
003FFFFC00000003FFC00000293D7EA82D>I<01F800000000FFF800000000FFF8000000
00FFF80000000007F80000000003F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F803FC000001F80FFF800001F83C0FC00001F8F003E0
0001F9C003F00001FB8001F80001FB0001F80001FF0000FC0001FE0000FC0001FE0000FC
0001FC0000FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFF
F82D3F7EBE32>I<01C00007F0000FF8000FF8000FF8000FF8000FF80007F00001C00000
000000000000000000000000000000000000000000000000000000000000000000000001
F8007FF8007FF8007FF80007F80003F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80003
FC00FFFFE0FFFFE0FFFFE0133D7EBC19>I<0000700001FC0003FE0003FE0003FE0003FE
0003FE0001FC000070000000000000000000000000000000000000000000000000000000
0000000000000000000000FE003FFE003FFE003FFE0001FE0000FE00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E3C007E7E007CFF00FCFF00FCFF00F8FF01F8FE01F07803E03E07C0
0FFF0001FC00175084BC1C>I<01F800FFF800FFF800FFF80007F80003F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80003FC00FFFFF0FFFFF0FFFFF0143F7EBE19>108
D<01F803FC0001FE0000FFF80FFF8007FFC000FFF83C0FC01E07E000FFF8F003E07801F0
0007F9C003F0E001F80003FB8001F9C000FC0001FB0001F98000FC0001FF0000FF80007E
0001FE0000FF00007E0001FE0000FF00007E0001FC0000FE00007E0001FC0000FE00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E
0003FC0001FE0000FF00FFFFF07FFFF83FFFFCFFFFF07FFFF83FFFFCFFFFF07FFFF83FFF
FC46287EA74B>I<01F803FC0000FFF80FFF8000FFF83C0FC000FFF8F003E00007F9C003
F00003FB8001F80001FB0001F80001FF0000FC0001FE0000FC0001FE0000FC0001FC0000
FC0001FC0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D287EA7
32>I<0001FE0000000FFFC000003F03F000007C00F80001F0003E0003E0001F0007C000
0F8007C0000F800F800007C01F800007E01F000003E03F000003F03F000003F07E000001
F87E000001F87E000001F87E000001F8FE000001FCFE000001FCFE000001FCFE000001FC
FE000001FCFE000001FCFE000001FCFE000001FCFE000001FC7E000001F87E000001F87E
000001F87F000003F83F000003F03F000003F01F800007E00F800007C00FC0000FC007C0
000F8003E0001F0001F0003E0000FC00FC00003F03F000000FFFC0000001FE0000262A7D
A82D>I<01F807F80000FFF81FFF0000FFF8780FC000FFF9E003F00003FB8001F80001FF
0000FC0001FE00007E0001FC00007F0001FC00003F8001F800001F8001F800001FC001F8
00001FC001F800000FE001F800000FE001F800000FE001F800000FF001F8000007F001F8
000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8
000007F001F8000007F001F800000FE001F800000FE001F800000FE001F800000FE001F8
00001FC001F800001FC001F800003F8001FC00003F0001FE00007F0001FE0000FE0001FF
0001FC0001FB8003F80001F9C007E00001F8F81F800001F83FFE000001F807F0000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000003FC00000000FFFFF0000000FFFFF0000000FFFFF00000002C3A7EA732>I<00
00FF000C000007FFC01C00001F80F01C00007E00381C0000FC001C3C0003F8000E3C0007
F000077C0007E000037C000FC00003FC001FC00001FC003F800001FC003F800000FC007F
000000FC007F000000FC007F000000FC007F000000FC00FE000000FC00FE000000FC00FE
000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE
000000FC00FF000000FC007F000000FC007F000000FC007F000000FC003F800000FC003F
800001FC001FC00001FC000FC00003FC000FE00003FC0007E00007FC0003F0000EFC0001
F8001CFC00007E0078FC00003F01E0FC00000FFFC0FC000001FE00FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000001FE000000007FFFF80000007FFFF80000007FFFF82D3A7DA730>I<03F00FC0FFF0
3FF0FFF0F0F8FFF1C3FC07F183FC03F383FC01F703FC01F603FC01F601F801FE006001FC
000001FC000001FC000001FC000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000003FC0000FFFF
F800FFFFF800FFFFF8001E287EA723>I<007FC06003FFF8E007C03DE01E000FE03C0003
E0780001E0780001E0700000E0F00000E0F0000060F0000060F8000060F8000060FC0000
60FF0000007FC000007FFE00003FFFE0001FFFFC0007FFFE0003FFFF80007FFFC00007FF
E000003FE000000FF0C00003F0C00001F8C00000F8E00000F8E0000078E0000078F00000
78F0000078F8000078F80000F0FC0000F0FC0001E0FE0001C0F7800780F1E01F00E0FFFC
00C01FE0001D2A7DA824>I<001800000018000000180000001800000018000000180000
00380000003800000038000000380000007800000078000000F8000000F8000001F80000
03F8000007F800001FFFFFC0FFFFFFC0FFFFFFC001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8006001F80060
01F8006001F8006001F8006001F8006001F8006001F8006001F8006000FC00E000FC00C0
00FC00C0007E01C0003F0380001F87000007FE000001F8001B397EB723>I<01F80000FC
00FFF8007FFC00FFF8007FFC00FFF8007FFC0007F80003FC0003F80001FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80001FC0001F80001FC
0001F80001FC0001F80003FC0000F80003FC0000FC0007FC0000FC000EFE00007C001CFF
00003E0038FFF8001F80F0FFF80007FFE0FFF80000FF00FC002D297EA732>I<FFFFC007
FFE0FFFFC007FFE0FFFFC007FFE007FC0001FF0003F800007C0003F80000780001F80000
700001FC0000700000FC0000600000FC00006000007E0000C000007E0000C000007F0001
C000003F00018000003F00018000001F80030000001F80030000001FC0070000000FC006
0000000FC00600000007E00C00000007E00C00000007F01C00000003F01800000003F018
00000001F83000000001F83000000001FC7000000000FC6000000000FC60000000007EC0
000000007EC0000000007FC0000000003F80000000003F80000000001F00000000001F00
000000001F00000000000E00000000000E0000002B287EA630>I<7FFFC00FFFE07FFFC0
0FFFE07FFFC00FFFE003FF0007FE0000FF0003F800007F0003E000003F0003C000003F80
038000001FC0070000000FC00E00000007E00C00000007F01800000003F83800000001F8
7000000000FCE000000000FEC0000000007F80000000003F80000000001F80000000000F
C0000000000FE0000000001FE0000000003BF00000000071F800000000E1FC00000000C0
FE00000001807E00000003803F00000007003F8000000E001FC000000C000FC000001C00
07E00000380007F00000F80003F80001F80003FC000FFC0007FE00FFFF001FFFF8FFFF00
1FFFF8FFFF001FFFF82D277FA630>120 D<FFFFC007FFE0FFFFC007FFE0FFFFC007FFE0
07FC0001FF0003F800007C0001F80000780001F80000700001FC0000700000FC00006000
00FE00006000007E0000C000007E0000C000003F00018000003F00018000003F80038000
001F80030000001F80030000000FC0060000000FC0060000000FE00E00000007E00C0000
0007E00C00000003F01800000003F01800000003F83800000001F83000000001FC300000
0000FC6000000000FC60000000007EC0000000007EC0000000007FC0000000003F800000
00003F80000000001F00000000001F00000000001F00000000000E00000000000E000000
00000C00000000000C00000000001C000000000018000000000018000000000030000000
0000300000000000600000003800600000007C00E0000000FE00C0000000FE01C0000000
FE0180000000FE03000000007C0700000000700E00000000383C000000001FF800000000
07E0000000002B3A7EA630>I<1FFFFFFF801FFFFFFF801FE0007F801F00007F001E0000
FE001C0001FC001C0003FC00180003F800380007F00038000FE00030001FE00030001FC0
0030003F800030007F000030007F00000000FE00000001FC00000003FC00000003F80000
0007F00000000FE00000001FE00000001FC00180003F800180007F000180007F00018000
FE00018001FC00018003FC00038003F800038007F00003000FE00003001FE00007001FC0
000F003F80000F007F00003F00FF0001FF00FFFFFFFF00FFFFFFFF0021277EA628>I<00
000FE00002000000003FFC0007000000007FFF000E00000000FFFFE03C00000001E03FFF
F8000000038007FFF0000000070001FFE00000000200003F800000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000FFFF8000007FFFF8FFFFC000007FFFF8FFFFE000007FFFF8007FE00000
03FF00007FF0000000FC00006FF80000007800006FFC00000030000067FC000000300000
63FE00000030000063FF00000030000061FF00000030000060FF800000300000607FC000
00300000607FC00000300000603FE00000300000601FF00000300000601FF00000300000
600FF800003000006007FC00003000006007FC00003000006003FE00003000006001FF00
003000006001FF00003000006000FF800030000060007FC00030000060007FE000300000
60003FE00030000060001FF00030000060001FF80030000060000FF800300000600007FC
00300000600007FE00300000600003FE00300000600001FF00300000600000FF80300000
600000FF803000006000007FC03000006000003FE03000006000003FE03000006000001F
F03000006000000FF83000006000000FF830000060000007FC30000060000003FE300000
60000003FE30000060000001FF30000060000000FFB0000060000000FFF0000060000000
7FF00000600000003FF00000600000003FF00000600000001FF00000600000000FF00000
6000000007F000006000000007F000006000000003F00000F000000001F00001F8000000
01F00007FE00000000F000FFFFF00000007000FFFFF00000007000FFFFF000000030003D
517DD044>209 D<000000001C000000000000007E00000000000000FE00000000000003
FE00000000000007FE0000000000001FFC0000000000003FF0000000000000FF80000000
000003FC00000000000003E0000000000000030000000000000000000000000000000000
000000000000000000000000000000FFE0000000000007FFFC00000000003FC07F800000
0000FE000FE000000001F80003F000000007E00000FC0000000FC000007E0000001F8000
003F0000003F0000001F8000007E0000000FC00000FE0000000FE00001FC00000007F000
03F800000003F80003F800000003F80007F000000001FC0007F000000001FC000FE00000
0000FE001FE000000000FF001FE000000000FF001FC0000000007F003FC0000000007F80
3FC0000000007F803FC0000000007F807FC0000000007FC07F80000000003FC07F800000
00003FC07F80000000003FC0FF80000000003FE0FF80000000003FE0FF80000000003FE0
FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF800000
00003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0
7F80000000003FC07FC0000000007FC07FC0000000007FC07FC0000000007FC07FC00000
00007FC03FC0000000007F803FE000000000FF801FE000000000FF001FE000000000FF00
1FE000000000FF000FF000000001FE000FF000000001FE0007F800000003FC0003F80000
0003F80003FC00000007F80001FC00000007F00000FE0000000FE000007F0000001FC000
003F8000003F8000001F8000003F0000000FE00000FE00000007F00001FC00000001F800
03F000000000FE000FE0000000003FC07F800000000007FFFC000000000000FFE0000000
3B507BCD46>211 D<0000038000000007C00000000FC00000001FC00000003FC0000000
7F80000000FF00000001FC00000003F000000007E00000000F800000001E000000001C00
00000010000000000000000000000000000000000000001FF0000000FFFC000003E03F00
000F000FC0001C0007E0001F0003F0003F8001F8003FC000FC003FC000FC003FC000FC00
3FC0007E001F80007E000F00007E000000007E000000007E000000007E000000007E0000
001FFE000003FFFE00001FF87E00007F807E0001FC007E0007F0007E000FE0007E001FC0
007E003F80007E007F80007E007F00007E007F00007E03FE00007E03FE00007E03FE0000
7E03FE0000FE03FE0000FE03FE0001FE037F0001BE037F0003BE033F80071F061FC00E1F
8E0FF03C0FFC03FFF007F8003FC003E0283B7CB92D>225 D<00000E000000001F000000
003F000000007F00000000FF00000001FE00000003FC00000007F00000000FC00000001F
800000003E00000000780000000070000000004000000000000000000000000000000000
00000003FC0000001FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E
000FC0003F001F80001F001F80001F803F00001F803F00000F807F00000F807F00000FC0
7E00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE
00000000FE00000000FE00000000FE00000000FE000000007E000000007F000000007F00
0000007F000000003F000000C03F800000C01F800001C00FC00001800FC000038007E000
070003F0000E0001F8001C0000FC003800003F01F000000FFFC0000001FE0000223B7DB9
28>233 D<0001C00003E00007F0000FF0001FE0003FC0007F80007E0000FC0001F00003
E00007800007000004000000000000000000000000000001F8007FF8007FF8007FF80007
F80003F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80003FC00FFFFE0FFFFE0FFFFE014
3A7EB919>237 D<0003F00010000007FC003800000FFF007000001FFFC1E000003C1FFF
C000007007FF800000E001FF00000040007C000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000001F803FC0000FFF80FFF8000FFF83C0F
C000FFF8F003E00007F9C003F00003FB8001F80001FB0001F80001FF0000FC0001FE0000
FC0001FE0000FC0001FC0000FC0001FC0000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07F
FFF8FFFFF07FFFF82D3C7EBB32>241 D<000001C000000003E000000007E00000000FE0
0000001FE00000003FC00000007F80000000FE00000001F800000003F000000007C00000
000F000000000E00000000080000000000000000000000000000000000000001FE000000
0FFFC000003F03F000007C00F80001F0003E0003E0001F0007C0000F8007C0000F800F80
0007C01F800007E01F000003E03F000003F03F000003F07E000001F87E000001F87E0000
01F87E000001F8FE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001
FCFE000001FCFE000001FCFE000001FC7E000001F87E000001F87E000001F87F000003F8
3F000003F03F000003F01F800007E00F800007C00FC0000FC007C0000F8003E0001F0001
F0003E0000FC00FC00003F03F000000FFFC0000001FE0000263B7DB92D>243
D<0000003800000000007C0000000000FC0000000001FC0000000003FC0000000007F800
0000000FF0000000001FC0000000003F00000000007E0000000000F80000000001E00000
000001C00000000001000000000000000000000000000000000000000000000000000000
0001F80000FC00FFF8007FFC00FFF8007FFC00FFF8007FFC0007F80003FC0003F80001FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80001FC
0001F80001FC0001F80001FC0001F80003FC0000F80003FC0000FC0007FC0000FC000EFE
00007C001CFF00003E0038FFF8001F80F0FFF80007FFE0FFF80000FF00FC002D3B7EB932
>250 D<000F00078000003F800FE000003FC01FE000007FC01FF000007FC01FF000007F
C01FF000003FC01FE000003F800FE000000F000780000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000001F80000FC00FFF8007FFC00FFF8007FFC00FFF8007FFC0007F8
0003FC0003F80001FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F8
0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F8
0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F8
0000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F8
0000FC0001F80001FC0001F80001FC0001F80001FC0001F80003FC0000F80003FC0000FC
0007FC0000FC000EFE00007C001CFF00003E0038FFF8001F80F0FFF80007FFE0FFF80000
FF00FC002D3C7EBA32>252 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecrm1728 17.28 10
/Fi 10 116 df<0000000000FFF0000000C0000000000FFFFF000001C0000000007FFFFF
E00001C000000003FFFFFFF80003C00000000FFFE003FE0003C00000003FFC00007F0007
C0000000FFE000000FC007C0000003FF80000003E00FC0000007FE00000001F01FC00000
0FFC00000000781FC000003FF0000000003C3FC000007FE0000000001E3FC00000FFC000
0000000F7FC00001FF800000000007FFC00003FF000000000003FFC00007FE0000000000
03FFC0000FFC000000000001FFC0001FF8000000000000FFC0001FF0000000000000FFC0
003FF00000000000007FC0007FE00000000000003FC000FFC00000000000003FC000FFC0
0000000000001FC001FF800000000000001FC001FF800000000000000FC003FF00000000
0000000FC003FF000000000000000FC007FE0000000000000007C007FE00000000000000
07C00FFC0000000000000007C00FFC0000000000000003C01FFC0000000000000003C01F
F80000000000000003C01FF80000000000000003C03FF80000000000000003C03FF80000
000000000001C03FF00000000000000001C03FF00000000000000001C07FF00000000000
000001C07FF00000000000000000007FF00000000000000000007FF00000000000000000
007FE0000000000000000000FFE0000000000000000000FFE0000000000000000000FFE0
000000000000000000FFE0000000000000000000FFE0000000000000000000FFE0000000
000000000000FFE0000000000000000000FFE0000000000000000000FFE0000000000000
000000FFE0000000000000000000FFE0000000000000000000FFE0000000000000000000
FFE0000000000000000000FFE0000000000000000000FFE0000000000000000000FFE000
00000000000000007FE00000000000000000007FF00000000000000000007FF000000000
00000000007FF00000000000000000007FF00000000000000000003FF000000000000000
00003FF00000000000000001C03FF80000000000000001C03FF80000000000000001C01F
F80000000000000001C01FF80000000000000001C01FFC0000000000000001C00FFC0000
000000000003C00FFC00000000000000038007FE00000000000000038007FE0000000000
0000038003FF00000000000000038003FF00000000000000078001FF8000000000000007
0001FF800000000000000F0000FFC00000000000000F0000FFC00000000000000E00007F
E00000000000001E00003FF00000000000001C00001FF00000000000003C00001FF80000
000000007800000FFC00000000000078000007FE000000000000F0000003FF0000000000
01E0000001FF800000000003C0000000FFC00000000007C00000007FE0000000000F8000
00003FF0000000001F000000000FFC000000003E0000000007FE00000000FC0000000003
FF80000001F00000000000FFF0000007E000000000003FFC00003F8000000000000FFFE0
03FF00000000000003FFFFFFFC000000000000007FFFFFF0000000000000000FFFFF8000
00000000000000FFF800000000526679E361>67 D<00003FE0000000000003FFFE000000
00000FFFFF80000000003FC03FE0000000007C000FF800000000F00003FC00000001E000
01FE00000003C00000FF000000078000007F8000000F0000003FC000000F8000003FC000
000FF000001FE000001FF800001FE000001FFC00000FF000001FFC00000FF000001FFC00
000FF000001FFC000007F800001FFC000007F800001FFC000007F800000FF8000007F800
0003E0000007F800000000000007F800000000000007F800000000000007F80000000000
0007F800000000000007F800000000000007F80000000000007FF800000000007FFFF800
0000000FFFFFF8000000007FF807F800000001FF8007F800000007FC0007F80000001FF0
0007F80000007FC00007F8000000FF800007F8000003FE000007F8000007FC000007F800
000FFC000007F800000FF8000007F800001FF0000007F800003FE0000007F800003FE000
0007F800007FC0000007F801C07FC0000007F801C07FC0000007F801C0FFC0000007F801
C0FF80000007F801C0FF80000007F801C0FF8000000FF801C0FF8000000FF801C0FF8000
000FF801C0FF8000001FF801C0FFC000001BF801C07FC000003BF801C07FC0000073F801
C07FE0000073F801803FF00000E1FC03801FF00003C1FC03800FF8000780FE070007FE00
0F00FF0F0001FF807C007FFE00007FFFF8003FFC00001FFFE0001FF8000003FF000007E0
003A4179BF43>97 D<000001FF80000000000FFFF8000000003FFFFE00000000FF007F80
000003FC0007E0000007F00001F000001FE000007800003FC000003C00007F8000001E00
00FF0000000F0001FE0000001F0001FC000000FF0003FC000001FF8007F8000003FF8007
F8000003FF800FF0000003FF800FF0000003FF801FE0000003FF801FE0000003FF803FE0
000001FF003FC00000007C003FC000000000007FC000000000007FC000000000007FC000
000000007F800000000000FF800000000000FF800000000000FF800000000000FF800000
000000FF800000000000FF800000000000FF800000000000FF800000000000FF80000000
0000FF800000000000FF800000000000FF800000000000FF8000000000007F8000000000
007FC000000000007FC000000000007FC000000000007FC000000000003FC00000000000
3FE000000000003FE000000000001FE000000001C01FF000000001C00FF000000003C00F
F8000000038007F8000000038003FC000000078003FE000000070001FE0000000F0000FF
0000001E00007F8000003C00003FC000007800001FE00000F000000FF80001E0000003FC
0007C0000000FF803F800000003FFFFE000000000FFFF80000000001FF80000032417BBF
3C>99 D<0000000000001E000000000000003FFE00000000000007FFFE00000000000007
FFFE00000000000007FFFE00000000000007FFFE000000000000000FFE00000000000000
03FE0000000000000003FE0000000000000001FE0000000000000001FE00000000000000
01FE0000000000000001FE0000000000000001FE0000000000000001FE00000000000000
01FE0000000000000001FE0000000000000001FE0000000000000001FE00000000000000
01FE0000000000000001FE0000000000000001FE0000000000000001FE00000000000000
01FE0000000000000001FE0000000000000001FE0000000000000001FE00000000000000
01FE0000000000000001FE0000000000000001FE0000000000000001FE00000000000000
01FE0000000000000001FE0000000000000001FE0000000000000001FE00000000000000
01FE0000000000000001FE0000000000FF8001FE000000000FFFF801FE000000003FFFFE
01FE00000000FF803F81FE00000003FC0007C1FE00000007F80001E1FE0000001FE00000
F9FE0000003FC000007DFE0000007F8000003DFE000000FF0000001FFE000001FE000000
0FFE000001FC00000007FE000003FC00000007FE000007F800000003FE000007F0000000
01FE00000FF000000001FE00001FF000000001FE00001FE000000001FE00001FE0000000
01FE00003FE000000001FE00003FC000000001FE00007FC000000001FE00007FC0000000
01FE00007FC000000001FE00007FC000000001FE00007F8000000001FE0000FF80000000
01FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF80000000
01FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF80000000
01FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF80000000
01FE00007F8000000001FE00007FC000000001FE00007FC000000001FE00007FC0000000
01FE00003FC000000001FE00003FC000000001FE00003FE000000001FE00001FE0000000
01FE00001FE000000001FE00000FF000000003FE00000FF000000003FE000007F8000000
07FE000003F800000007FE000003FC0000000FFE000001FE0000001FFE000000FE000000
3DFE0000007F0000003DFE0000003F800000F9FF0000001FC00001F1FF0000000FF00003
C1FFC0000007F8000F81FFFF800001FF007F01FFFF8000007FFFFC01FFFF8000001FFFE0
01FFFF80000001FF0001FF000041657BE34B>I<000003FE00000000001FFFE000000000
FFFFF800000001FE03FE00000007F0007F8000000FE0003FC000003FC0001FE000007F00
000FF00000FF000007F80000FE000003F80001FC000003FC0003F8000001FC0007F80000
01FE0007F0000000FE000FF0000000FF000FF00000007F001FE00000007F001FE0000000
7F803FE00000007F803FC00000003F803FC00000003F807FC00000003FC07FC00000003F
C07FC00000003FC07F800000003FC07F800000003FC0FF800000003FC0FFFFFFFFFFFFC0
FFFFFFFFFFFFC0FFFFFFFFFFFFC0FF800000000000FF800000000000FF800000000000FF
800000000000FF800000000000FF800000000000FF800000000000FF800000000000FF80
00000000007F8000000000007FC000000000007FC000000000007FC000000000003FC000
000000003FC000000000003FE000000000001FE000000000001FE000000001C00FF00000
0001C00FF000000003C007F8000000038007F8000000038003FC000000078001FC000000
0F0001FE0000000E0000FF0000001E00007F8000003C00003FC000007800001FE00000F0
000007F00003E0000003FC0007C0000000FF803F000000003FFFFC000000000FFFF00000
000001FF80000032417BBF3C>I<0078000001FE000003FF000007FF800007FF800007FF
800007FF800007FF800007FF800003FF000001FE00000078000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000007
80000FFF8000FFFF8000FFFF8000FFFF8000FFFF800003FF800000FF800000FF8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F
8000007F8000007F800000FFC00001FFE000FFFFFF80FFFFFF80FFFFFF80FFFFFF80195F
7BDE25>105 D<000780000FFF8000FFFF8000FFFF8000FFFF8000FFFF800003FF800000
FF800000FF8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F800000FFC00001FFE000FFFFFFC0FF
FFFFC0FFFFFFC0FFFFFFC01A647BE325>108 D<0003C0007FE000000007FFC003FFFC00
0000FFFFC00FFFFF000000FFFFC03F00FFC00000FFFFC078001FE00000FFFFC0F0000FF0
000001FFC1C00007F80000007FC3800007FC0000007FC7000003FC0000003FCE000003FE
0000003FCE000001FE0000003FDC000001FE0000003FD8000001FE0000003FF8000000FF
0000003FF0000000FF0000003FF0000000FF0000003FF0000000FF0000003FE0000000FF
0000003FE0000000FF0000003FE0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000007FE0000001FF
800000FFF0000003FFC000FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFF
FFC0FFFFFFF003FFFFFFC0423F7CBE4B>110 D<000001FF80000000000FFFF000000000
7FFFFE00000000FF00FF00000003F8001FC0000007E00007E000001FC00003F800003F80
0001FC00007F000000FE0000FE0000007F0000FC0000003F0001F80000001F8003F80000
001FC007F00000000FE007F00000000FE00FE000000007F00FE000000007F01FE0000000
07F81FC000000003F83FC000000003FC3FC000000003FC3FC000000003FC7FC000000003
FE7F8000000001FE7F8000000001FE7F8000000001FE7F8000000001FEFF8000000001FF
FF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF
8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF80
00000001FF7F8000000001FE7F8000000001FE7FC000000003FE7FC000000003FE7FC000
000003FE3FC000000003FC3FC000000003FC1FC000000003F81FE000000007F81FE00000
0007F80FE000000007F00FF00000000FF007F00000000FE003F80000001FC003F8000000
1FC001FC0000003F8000FE0000007F00007F000000FE00003F800001FC00001FC00003F8
00000FE00007F0000003F8001FC0000001FF00FF800000007FFFFE000000000FFFF00000
000001FF80000038417BBF43>I<0000FFC00300000FFFF80700007FFFFE0F0001FF003F
9F0003F00007DF0007E00003FF000F800000FF001F8000007F003F0000007F003E000000
3F007E0000001F007C0000001F00FC0000000F00FC0000000F00FC0000000F00FC000000
0F00FC0000000700FE0000000700FE0000000700FF0000000700FF80000007007FC00000
07007FE0000000007FF8000000003FFE000000001FFFE00000000FFFFF0000000FFFFFF0
000003FFFFFE000001FFFFFF8000007FFFFFE000001FFFFFF8000007FFFFFC000000FFFF
FE00000007FFFF000000003FFF8000000007FF8000000001FFC0000000007FC0E0000000
3FE0E00000001FE0E00000001FF0F00000000FF0F000000007F0F000000007F0F0000000
07F0F800000003F0F800000003F0F800000003F0FC00000003F0FC00000003F0FE000000
03E0FE00000007E0FF00000007E0FF00000007C0FF8000000FC0FFC000000F80FFE00000
1F80FDF000003F00F8F800007E00F87C0001FC00F01F801FF000F00FFFFFC000E003FFFF
0000C0007FF000002C417CBF35>115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj ecrm1200 12 11
/Fj 11 116 df<0003FE0000001FFFC000007FFFF00001F80FFC0003C001FE00078000FF
000E00007F801C00003FC01C00001FE03800001FF03000000FF07000000FF860000007F8
6C000007F8FF000007FCFF800007FCFFC00007FCFFC00003FCFFC00003FCFFC00003FCFF
C00003FC7F800007FC3F000007FC00000007FC00000007F800000007F80000000FF80000
000FF00000001FF00000001FE00000001FE00000003FC00000007F800000007F00000000
FF00000000FE00000001FC00000003F800000007F000000007E00000000FC00000001F80
0000003F000000007C00000000F800000000F000000001E000000003C000000007800000
000F00000C001E00000C003C00000C0038000018007000001800E000001801C000001803
8000003807000000300E000000701FFFFFFFF01FFFFFFFF03FFFFFFFF07FFFFFFFF0FFFF
FFFFE0FFFFFFFFE0FFFFFFFFE026427BC131>50 D<FFFFFFC003FFFFFFFFFFFFC003FFFF
FFFFFFFFC003FFFFFF01FFE0000007FF80007F80000001FE00007F80000001FE00007F80
000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE
00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80
000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE
00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80
000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE
00007F80000001FE00007F80000001FE00007FFFFFFFFFFE00007FFFFFFFFFFE00007FFF
FFFFFFFE00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE
00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80
000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE
00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80
000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE
00007F80000001FE00007F80000001FE00007F80000001FE00007F80000001FE00007F80
000001FE00007F80000001FE00007F80000001FE00007F80000001FE0001FFE0000007FF
80FFFFFFC003FFFFFFFFFFFFC003FFFFFFFFFFFFC003FFFFFF40447CC349>72
D<0007FC000000003FFF80000000F80FE0000003C003F00000070001F800000E0000FC00
000FC0007E00001FE0007F00001FF0003F80001FF0003F80001FF0003F80001FF0001FC0
001FF0001FC0000FE0001FC0000380001FC0000000001FC0000000001FC0000000001FC0
000000001FC00000000FFFC0000001FFFFC000000FFE1FC000003FC01FC00000FF001FC0
0003FC001FC00007F8001FC0000FF0001FC0001FE0001FC0003FC0001FC0007FC0001FC0
007F80001FC0007F80001FC060FF00001FC060FF00001FC060FF00001FC060FF00003FC0
60FF00003FC060FF00003FC060FF80007FC0607F8000EFC0607FC000C7E0C03FC001C7E0
C01FE00783F1C007F81E03FF8001FFFC01FF00001FE0007C002B2E7CAC31>97
D<00007F80000003FFF000000FC07C00003F000F0000FC00038001F80001C003F8000FC0
07F0001FE007E0003FE00FE0003FE01FC0003FE01FC0003FE03F80003FE03F80001FC07F
800007007F800000007F800000007F00000000FF00000000FF00000000FF00000000FF00
000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF0000
00007F000000007F800000007F800000003F800000003F800000303FC00000301FC00000
700FE00000600FE00000E007F00000C003F80001C001F800038000FC000700003F001E00
001FC078000007FFF0000000FF8000242E7DAC2B>99 D<000000007F000000003FFF0000
00003FFF000000003FFF0000000001FF0000000000FF00000000007F00000000007F0000
0000007F00000000007F00000000007F00000000007F00000000007F00000000007F0000
0000007F00000000007F00000000007F00000000007F00000000007F00000000007F0000
0000007F00000000007F00000000007F00000000007F00000000007F0000007F807F0000
03FFF07F00000FC07C7F00003F000E7F00007E00077F0000FC0003FF0003F80001FF0007
F00000FF0007E00000FF000FE000007F001FC000007F001FC000007F003F8000007F003F
8000007F007F8000007F007F8000007F007F0000007F00FF0000007F00FF0000007F00FF
0000007F00FF0000007F00FF0000007F00FF0000007F00FF0000007F00FF0000007F00FF
0000007F00FF0000007F00FF0000007F007F0000007F007F8000007F007F8000007F003F
8000007F003F8000007F001FC000007F001FC000007F000FC00000FF000FE00000FF0007
F00001FF0003F00003FF0001F800077F8000FC000E7FC0003F001C7FFE000FC0F87FFE00
03FFE07FFE00007F007F002F467DC436>I<0001FE00000007FFC000001F03F000007E00
FC0000FC007E0001F8003F0003F0003F0007E0001F800FE0001FC00FC0000FC01FC0000F
C03F80000FE03F800007E03F800007E07F800007F07F000007F07F000007F0FF000007F0
FF000007F0FF000007F0FFFFFFFFF0FFFFFFFFF0FF00000000FF00000000FF00000000FF
00000000FF00000000FF000000007F000000007F000000007F800000007F800000003F80
0000003F800000301FC00000301FC00000700FC00000600FE00000E007F00000C003F000
01C001F800038000FC000700003E001E00001F80F8000003FFE0000000FF0000242E7DAC
2B>I<01E00007F80007F8000FFC000FFC000FFC000FFC0007F80007F80001E000000000
000000000000000000000000000000000000000000000000000000000000000000000000
01FC00FFFC00FFFC00FFFC0007FC0003FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC00
01FC0001FC0001FC0001FC0003FE00FFFFF8FFFFF8FFFFF815437DC21C>105
D<00003C000000FF000000FF000001FF800001FF800001FF800001FF800000FF000000FF
0000003C0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000007F80003FFF80003FFF80003FFF
800000FF8000007F8000003F8000003F8000003F8000003F8000003F8000003F8000003F
8000003F8000003F8000003F8000003F8000003F8000003F8000003F8000003F8000003F
8000003F8000003F8000003F8000003F8000003F8000003F8000003F8000003F8000003F
8000003F8000003F8000003F8000003F8000003F8000003F8000003F8000003F8000003F
8000003F8000003F8000003F8000003F8000003F8000003F8000003F8000003F8000003F
8000003F8000003F8000003F803E003F807F003F80FF807F00FF807F00FF807E00FF807E
00FF80FC007F00F8003C01F0001E03E00007FF800001FE0000195785C21E>I<00007F80
00000003FFF00000000FC0FC0000003E001F0000007C000F800000F80007C00001F00003
E00003E00001F00007C00000F8000FC00000FC000FC00000FC001F8000007E003F800000
7F003F8000007F003F0000003F007F0000003F807F0000003F807F0000003F807F000000
3F80FF0000003FC0FF0000003FC0FF0000003FC0FF0000003FC0FF0000003FC0FF000000
3FC0FF0000003FC0FF0000003FC0FF0000003FC0FF0000003FC07F0000003F807F000000
3F807F8000007F803F8000007F003F8000007F001F8000007E001FC00000FE000FC00000
FC000FE00001FC0007E00001F80003F00003F00001F80007E00000FC000FC000003E001F
0000001FC0FE00000007FFF8000000007F8000002A2E7DAC31>111
D<03F803F0FFF81FFCFFF83C3EFFF8707F07F8E0FF03F9C0FF01F980FF01FB80FF01FB00
7E01FB003C01FF000001FE000001FE000001FE000001FE000001FC000001FC000001FC00
0001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00
0001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC00
0001FC000001FC000001FC000001FC000003FF0000FFFFFE00FFFFFE00FFFFFE00202C7D
AB26>114 D<003FE01801FFFC3807E01F780F0003F81E0001F83C0000F87C0000787800
0078F8000038F8000038F8000018F8000018FC000018FC000018FE000018FF8000007FC0
00007FFC00003FFFE0001FFFFC000FFFFF0007FFFFC003FFFFE000FFFFF0001FFFF80000
FFF800000FFC000003FCC00001FEC00000FEC000007EE000007EE000003EE000003EF000
003EF000003EF000003EF800003CFC00007CFC000078FE0000F8FF0001F0F38003E0F1F0
0F80E07FFE00C00FF0001F2E7DAC26>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
1016 458 a Fj(Ho)5 b(ja)32 b(de)h(ejercicios)f(2)1027
684 y Fi(Condicionales)943 809 y Fh(26)f(de)f(no)m(viem)m(bre)j(de)d
(2013)3266 356 y Fg(Inform\341tica)3199 478 y Ff(A\361o)d(2013/2014)
3154 601 y(F)-7 b(acultad)27 b(de)h(CC.)3286 700 y(Matem\341ticas)-1
1086 y Fe(.)j Fd(1.)90 b(M\355nimo)34 b(de)h(4)g(n)m(\372meros)75
1198 y Fh(Dados)30 b(cuatro)i(v)-5 b(alores)30 b(n)m(um\351ricos,)i(se)
e(desea)h(encon)m(tar)h(el)e(menor)h(de)g(ellos.)p 0
TeXcolorgray 220 1378 28 28 v 0 TeXcolorgray 302 1386
a(Escrib)s(e)g(un)g(programa)g(que)g(resuelv)-5 b(a)30
b(este)g(problema.)p 0 TeXcolorgray 220 1566 V 0 TeXcolorgray
302 1574 a(Escrib)s(e)d(ahora)g(un)g(programa)h(que)f(resuelv)-5
b(a)26 b(el)h(mismo)g(problema)h(p)s(ero)f(que)f(utilize)i(\372nicamen)
m(te)302 1687 y(tres)j(comparaciones.)-1 1945 y Fe(.)g
Fd(2.)90 b(Encuen)m(tra)35 b(la)g(actividad)g(adecuada)75
2058 y Fh(Escrib)s(e)29 b(un)h(programa)g(que)g(lea)f(una)h(temp)s
(eratura)g(in)m(tro)s(ducida)h(a)e(tra)m(v)m(\351s)h(del)g(teclado)g(y)
f(m)m(uestre)h(p)s(or)75 2171 y(pan)m(talla)f(la)f(actividad)g(m\341s)g
(apropiada)h(para)f(dic)m(ha)h(temp)s(eratura)g(teniendo)g(en)e(cuen)m
(ta)i(los)f(siguien)m(tes)75 2284 y(criterios.)p 0 TeXcolorgray
0 TeXcolorgray 803 2446 a(A)m(CTIVID)m(AD)561 b(TEMPERA)-8
b(TURA)31 b(ID\323NEA)892 2586 y(Nataci\363n)1018 b(temp)31
b(>30)965 2726 y(T)-8 b(enis)979 b(20)31 b(<temp)g Fc(\024)f
Fh(30)985 2866 y(Golf)998 b(10)31 b(<temp)g Fc(\024)f
Fh(20)959 3006 y(Esqu\355)996 b(5)30 b(<temp)i Fc(\024)d
Fh(10)925 3146 y(P)m(arc)m(h\355s)1059 b(temp)31 b Fc(\024)f
Fh(5)-1 3440 y Fe(.)h Fd(3.)90 b(Letras)36 b(del)f(castellano)75
3553 y Fh(En)g(este)f(ejercicio)h(estudiaremos)h(las)e(singularidades)h
(de)g(las)f(letras)g(castellanas)h(con)g(resp)s(ecto)g(al)f(es-)75
3666 y(t\341ndar)d(en)g(inform\341tica:)h(el)e(ingl\351s.)p
0 TeXcolorgray 75 3853 a Fd(Alfab)s(eto)35 b(castellano)p
0 TeXcolorgray 82 w Fh(Escrib)s(e)h(un)f(programa)i(en)f(Python)g(que)g
(lea)g(un)f(caracter)i(e)e(informe)i(de)e(si)302 3966
y(dic)m(ho)d(caracter)f(es)f(una)h(letra)g(del)g(alfab)s(eto)f
(castellano.)302 4117 y Fd(Pista:)91 b Fh(El)31 b(alfab)s(eto)f
(castellano)i(consta)f(de)f(27)h(letras)f(sencillas:)p
0 TeXcolorgray 0 TeXcolorgray 680 4343 a(A)36 b(B)g(C)g(D)h(E)f(F)g(G)g
(H)g(I)g(J)h(K)f(L)h(M)f(N)g(\321)g(O)g(P)h(Q)f(R)g(S)g(T)h(U)e(V)h(W)g
(X)g(Y)g(Z)302 4567 y(y)e(dos)h(digrafos,)f(CH)h(y)f(LL.)h(P)m(ara)h
(este)e(problema)i(no)f(consideraremos)g(los)g(digrafos)f(p)s(or)h
(estar)302 4679 y(formados)c(p)s(or)f(dos)g(letras.)p
0 TeXcolorgray 75 4867 a Fd(Letras)36 b(del)f(castellano)p
0 TeXcolorgray 81 w Fh(Escrib)s(e)d(un)h(programa)g(que)f(lea)g(un)g
(caracter)i(e)e(informe)g(de)g(si)g(dic)m(ho)h(car-)302
4980 y(acter)f(es)e(una)h(letra)g(utilizable)i(en)e(el)f(lengua)5
b(je)32 b(castellano.)g(Es)e(decir,)i(adem\341s)f(de)g(las)f(letras)h
(del)302 5093 y(alfab)s(eto,)g(las)f(v)m(o)s(cales)g(pueden)i(llev)-5
b(ar)30 b(tilde)h(y)f(la)h(letra)g(u)f(puede)h(llev)-5
b(ar)31 b(di\351resis)f(\(\374\).)-1 5351 y Fe(.)h Fd(4.)90
b(Ecuaci\363n)35 b(de)g(Segundo)e(Grado)75 5464 y Fh(Escrib)s(e)39
b(un)g(programa)h(que)e(p)s(ermita)i(calcular)g(las)e(soluciones)h(a)g
(una)g(ecuaci\363n)h(de)f(segundo)g(grado)75 5577 y Fe(Ax)195
5544 y Fb(2)258 5577 y Fa(+)24 b Fe(B)5 b(x)23 b Fa(+)g
Fe(C)40 b Fa(=)34 b(0)p Fh(.)i(Ob)m(viamen)m(te,)i(los)d(datos)g(del)h
(programa)h(son)e(los)h(co)s(e\034cien)m(tes)g(de)g(la)g(ecuaci\363n)75
5690 y Fe(A;)15 b(B)35 b Fh(y)30 b Fe(C)7 b Fh(.)p 0
TeXcolorgray 1890 6126 a(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -1 299 a Fe(.)31 b Fd(5.)90 b(P)m(osici\363n)34
b(de)h(un)f(pun)m(to)g(en)h(un)f(cuadran)m(te)75 412
y Fh(Escrib)s(e)i(un)f(programa)i(que)e(lea)g(las)g(co)s(ordenadas)i
(de)e(un)g(pun)m(to)i(e)e(indique)h(en)f(el)h(cuadran)m(te)h(que)e(se)
75 525 y(encuen)m(tra)d(dic)m(ho)g(pun)m(to.)-1 708 y
Fe(.)f Fd(6.)90 b(Rotaci\363n)35 b(del)f(alfab)s(eto)75
821 y Fh(Imaginemos)d(las)e(letras)h(del)g(alfab)s(eto)g(ordenadas)h(y)
e(dispuestas)h(en)g(c\355rculo.)g(Esto)g(es,)g(a)f(la)h(derec)m(ha)i
(de)75 934 y(la)k Fe(A)h Fh(se)f(encuen)m(tra)i(la)e
Fe(B)5 b Fh(,)36 b(luego)h(la)f Fe(C)43 b Fh(y)36 b(as\355)g(sucesiv)-5
b(amen)m(te)37 b(hasta)g(la)f Fe(Z)7 b Fh(;)36 b(a)g(la)h(derec)m(ha)h
(de)e(la)h Fe(Z)42 b Fh(se)75 1047 y(encuen)m(tra)32
b(n)m(uev)-5 b(amen)m(te)33 b(la)d Fe(A)p Fh(.)216 1160
y(De\034nimos)36 b(una)f(rotaci\363n)h(de)f(longitud)h
Fe(n)e Fh(como)i(aquella)f(que)g(llev)-5 b(a)35 b(a)g(una)g
(determinada)i(letra)e Fe(n)75 1273 y Fh(p)s(osiciones)30
b(hacia)h(su)f(derec)m(ha.)75 1386 y Fd(Ejemplo)90 b
Fh(La)31 b(rotaci\363n)g(de)g(longitud)g(1)g(llev)-5
b(a)30 b(la)h Fe(A)f Fh(a)g(la)h Fe(B)5 b Fh(,)29 b(la)i
Fe(V)50 b Fh(a)31 b(la)f Fe(W)43 b Fh(y)30 b(la)g Fe(Z)37
b Fh(a)30 b(la)h Fe(A)p Fh(.)216 1499 y(La)g(rotaci\363n)h(de)e
(longitud)i(3)e(llev)-5 b(a)30 b(la)h Fe(A)f Fh(a)h(la)f
Fe(D)s Fh(,)g(la)h Fe(V)50 b Fh(a)30 b(la)h Fe(Y)50 b
Fh(y)30 b(la)g Fe(Z)37 b Fh(a)30 b(la)h Fe(C)7 b Fh(.)p
0 TeXcolorgray 75 1686 a Fd(Rotaci\363n)35 b(de)f(longitud)g(1)p
0 TeXcolorgray 80 w Fh(Escrib)s(e)c(un)f(programa)i(en)e(Python)h(que)f
(p)s(ermita)h(calcular)g(la)g(rotaci\363n)302 1799 y(de)g(longitud)h
(1.)f(Es)g(decir,)h(dada)f(una)h(letra)f(del)g(alfab)s(eto)h(el)f
(programa)h(deb)s(er\355a)f(indicar)h(la)f(letra)302
1912 y(corresp)s(ondien)m(te)j(a)d(su)g(rotaci\363n.)p
0 TeXcolorgray 75 2100 a Fd(Rotaci\363n)35 b(de)f(longitud)g
(arbitraria)p 0 TeXcolorgray 80 w Fh(Escrib)s(e)39 b(un)g(programa)h
(en)f(Python)h(que)e(p)s(ermita)i(calcular)302 2213 y(una)31
b(rotaci\363n)h(de)e(longitud)i Fe(n)d Fh(arbitraria.)j(El)f(v)-5
b(alor)31 b Fe(n)e Fh(deb)s(e)i(ser)f(le\355do)h(p)s(or)f(el)h
(programa.)-1 2471 y Fe(.)g Fd(7.)90 b(\276Me)36 b(puede)e(decir)h(la)g
(hora?)75 2584 y Fh(Escrib)s(e)c(un)g(programa)h(que)f(reciba)g(tres)g
(v)-5 b(alores)30 b(de)h(en)m(trada)h(que)f(corresp)s(onden)h(a)e
(horas,)h(min)m(utos)h(y)75 2697 y(segundos.)f(El)g(programa)g(deb)s(e)
g(indicar)g(si)f(se)g(trata)h(de)g(una)f(hora)h(correcta)h(o)e(no.)-1
2881 y Fe(.)h Fd(8.)90 b(Ser)35 b(o)f(no)g(ser)h(bisiesto)75
2994 y Fh(Ha)m(y)d(m)m(uc)m(has)h(aplicaciones)g(que)e(requieren)i
(realizar)f(alg\372n)h(tip)s(o)e(de)h(op)s(eraci\363n)g(o)g(pro)s
(cesamien)m(to)h(con)75 3107 y(fec)m(has,)g(p)s(or)e(ejemplo:)i(el)f
(c\341lculo)h(del)g(n)m(\372mero)g(de)g(d\355as)f(que)g(ha)m(y)g(en)m
(tre)h(dos)f(fec)m(has)g(o)g(la)h(escritura)f(del)75
3220 y(calendario)e(de)f(un)g(a\361o.)g(En)g(estos)g(casos,)f(suele)h
(ser)g(necesario)g(determinar)i(si)d(un)h(a\361o)g(es)f(o)h(no)g
(bisiesto)75 3333 y(y)41 b(\351sto)h(es,)g(precisamen)m(te,)i(lo)e(que)
g(se)g(te)g(prop)s(one)h(en)f(este)g(ejercicio.)h(Escrib)s(e)f(una)g
(expresi\363n)h(que)75 3445 y(p)s(ermita)32 b(determinar)h(si)e(un)h(v)
-5 b(alor)32 b(de)g(tip)s(o)f(en)m(tero)i(p)s(ositiv)m(o)f(puede)g
(corresp)s(onder)g(a)g(un)g(a\361o)g(bisiesto.)75 3558
y(Se)39 b(considera)g(bisiesto)g(un)g(a\361o)f(cuy)m(o)i(n)m(\372mero)g
(es)e(divisible)h(p)s(or)f(cuatro)h(excepto)h(los)e(a\361os)h(que)f
(son)75 3671 y(m)m(\372ltiplos)32 b(de)e(cien)h(a)f(no)h(ser)f(que)g
(lo)h(sean)f(de)h(400.)p 0 TeXcolorgray 1890 6126 a(2)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
